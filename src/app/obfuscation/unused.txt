io.realm.rx.RealmObservableFactory$14$1
com.google.gson.internal.PreJava9DateFormatProvider:
    public void <init>()
    public static java.text.DateFormat getUSDateFormat(int)
    private static java.lang.String getDateFormatPattern(int)
androidx.recyclerview.widget.ThreadUtil
io.realm.internal.Table$1
androidx.core.text.util.FindAddress
androidx.recyclerview.R$string
androidx.cardview.widget.CardViewBaseImpl:
    private androidx.cardview.widget.RoundRectDrawableWithShadow createBackground(android.content.Context,android.content.res.ColorStateList,float,float,float)
    public void initialize(androidx.cardview.widget.CardViewDelegate,android.content.Context,android.content.res.ColorStateList,float,float,float)
com.guilhermedaros.museunfc.R
androidx.annotation.ContentView
androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments:
    public java.lang.String getHTMLElement()
androidx.core.provider.FontsContractCompat$4$2
androidx.transition.ViewUtils:
    static void setAnimationMatrix(android.view.View,android.graphics.Matrix)
    private void <init>()
    private static final java.lang.String TAG
androidx.fragment.R$styleable
androidx.cardview.widget.CardViewApi21Impl:
    public void initialize(androidx.cardview.widget.CardViewDelegate,android.content.Context,android.content.res.ColorStateList,float,float,float)
com.google.android.material.chip.ChipDrawable:
    public static com.google.android.material.chip.ChipDrawable createFromResource(android.content.Context,int)
    public void getChipTouchBounds(android.graphics.RectF)
    boolean isShapeThemingEnabled()
    public void setTextResource(int)
    public boolean isChipIconVisible()
    public boolean isChipIconEnabled()
    public void setChipIconEnabledResource(int)
    public void setChipIconEnabled(boolean)
    public boolean isCloseIconEnabled()
    public void setCloseIconVisible(int)
    public void setCloseIconEnabledResource(int)
    public void setCloseIconEnabled(boolean)
    public boolean isCheckedIconVisible()
    public boolean isCheckedIconEnabled()
    public void setCheckedIconEnabledResource(int)
    public void setCheckedIconEnabled(boolean)
    public int getMaxWidth()
    private static final boolean DEBUG
    private static final java.lang.String NAMESPACE_APP
com.google.android.material.internal.ParcelableSparseIntArray
androidx.recyclerview.widget.MessageThreadUtil$1
com.guilhermedaros.museunfc.R$bool
androidx.collection.SimpleArrayMap:
    private static final boolean DEBUG
    private static final java.lang.String TAG
    private static final boolean CONCURRENT_MODIFICATION_EXCEPTIONS
    private static final int BASE_SIZE
    private static final int CACHE_SIZE
androidx.core.graphics.TypefaceCompat:
    private void <init>()
com.google.android.material.datepicker.DateSelector:
    public abstract boolean isSelectionComplete()
    public abstract void setSelection(java.lang.Object)
    public abstract java.lang.String getSelectionDisplayString(android.content.Context)
    public abstract int getDefaultTitleResId()
    public abstract int getDefaultThemeResId(android.content.Context)
    public abstract android.view.View onCreateTextInputView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle,com.google.android.material.datepicker.CalendarConstraints,com.google.android.material.datepicker.OnSelectionChangedListener)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView:
    public void clearSelection()
    public synthetic bridge int lookForSelectablePosition(int,boolean)
javax.annotation.CheckReturnValue
androidx.transition.ChangeScroll
com.jaredrummler.materialspinner.MaterialSpinner:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
androidx.viewpager.R$integer
androidx.appcompat.widget.ActionMenuView$LayoutParams:
    void <init>(int,int,boolean)
io.realm.internal.OsResults$2
androidx.core.text.util.LinkifyCompat$LinkifyMask
com.google.android.material.internal.ThemeEnforcement:
    private void <init>()
    public static boolean isAppCompatTheme(android.content.Context)
    public static boolean isMaterialTheme(android.content.Context)
    private static final java.lang.String APPCOMPAT_THEME_NAME
    private static final java.lang.String MATERIAL_THEME_NAME
com.google.android.material.internal.package-info
com.rollbar.Rollbar$3
androidx.appcompat.widget.PopupMenu$OnDismissListener
com.caverock.androidsvg.SVG$SvgPaint
androidx.vectordrawable.R$layout
androidx.transition.ChangeImageTransform$3
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat
io.realm.internal.objectstore.OsObjectBuilder$5:
    public void handleItem(long,java.lang.Integer)
    public synthetic bridge void handleItem(long,java.lang.Object)
org.slf4j.event.LoggingEvent:
    public abstract org.slf4j.event.Level getLevel()
    public abstract org.slf4j.Marker getMarker()
    public abstract java.lang.String getLoggerName()
    public abstract java.lang.String getMessage()
    public abstract java.lang.String getThreadName()
    public abstract java.lang.Object[] getArgumentArray()
    public abstract long getTimeStamp()
    public abstract java.lang.Throwable getThrowable()
androidx.drawerlayout.R$string
androidx.appcompat.widget.DrawableUtils:
    private void <init>()
    public static android.graphics.Rect getOpticalBounds(android.graphics.drawable.Drawable)
    private static final java.lang.String TAG
    private static final java.lang.String VECTOR_DRAWABLE_CLAZZ_NAME
androidx.core.app.ComponentActivity:
    public void putExtraData(androidx.core.app.ComponentActivity$ExtraData)
    public androidx.core.app.ComponentActivity$ExtraData getExtraData(java.lang.Class)
    public androidx.lifecycle.Lifecycle getLifecycle()
androidx.core.view.ScrollingView
androidx.core.graphics.BlendModeUtils$1
com.android.volley.BuildConfig
androidx.appcompat.R$color:
    private void <init>()
androidx.lifecycle.MediatorLiveData$Source
com.google.android.material.bottomnavigation.BottomNavigationMenuView$1
androidx.savedstate.Recreator:
    static final java.lang.String CLASSES_KEY
    static final java.lang.String COMPONENT_KEY
io.realm.RealmSchema:
    public abstract io.realm.RealmObjectSchema get(java.lang.String)
    public abstract java.util.Set getAll()
    public abstract io.realm.RealmObjectSchema create(java.lang.String)
    public varargs abstract io.realm.RealmObjectSchema createWithPrimaryKeyField(java.lang.String,java.lang.String,java.lang.Class,io.realm.FieldAttribute[])
    public abstract void remove(java.lang.String)
    public abstract io.realm.RealmObjectSchema rename(java.lang.String,java.lang.String)
    public boolean contains(java.lang.String)
    void checkNotEmpty(java.lang.String,java.lang.String)
    void checkHasTable(java.lang.String,java.lang.String)
    io.realm.RealmObjectSchema getSchemaForClass(java.lang.String)
    final void putToClassNameToSchemaMap(java.lang.String,io.realm.RealmObjectSchema)
    final io.realm.RealmObjectSchema removeFromClassNameToSchemaMap(java.lang.String)
    static final java.lang.String EMPTY_STRING_MSG
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$Size
io.realm.internal.objectstore.OsObjectBuilder$12:
    public void handleItem(long,io.realm.MutableRealmInteger)
    public synthetic bridge void handleItem(long,java.lang.Object)
androidx.core.view.accessibility.AccessibilityManagerCompat
androidx.viewpager2.widget.ViewPager2$OffscreenPageLimit
com.rollbar.android.Rollbar$2
com.google.android.material.snackbar.SnackbarManager$SnackbarRecord:
    void <init>(int,com.google.android.material.snackbar.SnackbarManager$Callback)
androidx.recyclerview.widget.ThreadUtil$BackgroundCallback
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2
com.google.android.material.snackbar.BaseTransientBottomBar$16
com.google.android.material.navigation.NavigationView$OnNavigationItemSelectedListener
androidx.customview.R$color
com.google.android.material.shape.MaterialShapeUtils:
    private void <init>()
androidx.core.view.NestedScrollingChild:
    public abstract void setNestedScrollingEnabled(boolean)
    public abstract boolean startNestedScroll(int)
    public abstract boolean hasNestedScrollingParent()
    public abstract boolean dispatchNestedScroll(int,int,int,int,int[])
    public abstract boolean dispatchNestedPreScroll(int,int,int[],int[])
    public abstract boolean dispatchNestedFling(float,float,boolean)
    public abstract boolean dispatchNestedPreFling(float,float)
com.android.volley.toolbox.DiskBasedCache$CountingInputStream:
    long bytesRead()
com.google.android.material.transition.SlideDistanceProvider$GravityFlag
com.rollbar.android.util.Constants
androidx.core.view.animation.PathInterpolatorCompat
io.realm.rx.RealmObservableFactory$5$2
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback
com.google.android.material.transition.platform.MaterialContainerTransformSharedElementCallback
com.google.gson.internal.LinkedHashTreeMap$Node
androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments:
    public int getX()
    public int getY()
androidx.core.app.ActivityCompat$SharedElementCallback21Impl
androidx.transition.TranslationAnimationCreator
com.google.android.material.transition.platform.MaterialContainerTransform
com.google.gson.JsonSerializationContext:
    public abstract com.google.gson.JsonElement serialize(java.lang.Object)
    public abstract com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type)
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuHeaderItem
androidx.versionedparcelable.VersionedParcelParcel:
    public void writeByteArray(byte[],int,int)
    public void writeLong(long)
    public void writeFloat(float)
    public void writeDouble(double)
    public void writeStrongBinder(android.os.IBinder)
    public void writeStrongInterface(android.os.IInterface)
    public void writeBundle(android.os.Bundle)
    public long readLong()
    public float readFloat()
    public double readDouble()
    public android.os.IBinder readStrongBinder()
    public android.os.Bundle readBundle()
    private static final boolean DEBUG
    private static final java.lang.String TAG
com.caverock.androidsvg.SVG$Style$VectorEffect
androidx.recyclerview.widget.AsyncListDiffer$ListListener
com.google.android.material.datepicker.OnSelectionChangedListener:
    void onIncompleteSelectionChanged()
com.caverock.androidsvg.SVG$CurrentColor
androidx.recyclerview.widget.MessageThreadUtil$1$1
com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener
io.realm.rx.RealmObservableFactory:
    private io.reactivex.Scheduler getScheduler()
    static synthetic boolean access$100(io.realm.rx.RealmObservableFactory)
    static synthetic java.lang.ThreadLocal access$200(io.realm.rx.RealmObservableFactory)
    static synthetic java.lang.ThreadLocal access$300(io.realm.rx.RealmObservableFactory)
    static synthetic java.lang.ThreadLocal access$400(io.realm.rx.RealmObservableFactory)
    public io.reactivex.Flowable from(io.realm.Realm)
    public io.reactivex.Flowable from(io.realm.DynamicRealm)
    public io.reactivex.Flowable from(io.realm.Realm,io.realm.RealmResults)
    public io.reactivex.Observable changesetsFrom(io.realm.Realm,io.realm.RealmResults)
    public io.reactivex.Flowable from(io.realm.DynamicRealm,io.realm.RealmResults)
    public io.reactivex.Observable changesetsFrom(io.realm.DynamicRealm,io.realm.RealmResults)
    public io.reactivex.Flowable from(io.realm.Realm,io.realm.RealmList)
    public io.reactivex.Observable changesetsFrom(io.realm.Realm,io.realm.RealmList)
    public io.reactivex.Flowable from(io.realm.DynamicRealm,io.realm.RealmList)
    public io.reactivex.Observable changesetsFrom(io.realm.DynamicRealm,io.realm.RealmList)
    public io.reactivex.Flowable from(io.realm.Realm,io.realm.RealmModel)
    public io.reactivex.Observable changesetsFrom(io.realm.Realm,io.realm.RealmModel)
    public io.reactivex.Flowable from(io.realm.DynamicRealm,io.realm.DynamicRealmObject)
    public io.reactivex.Observable changesetsFrom(io.realm.DynamicRealm,io.realm.DynamicRealmObject)
    public io.reactivex.Single from(io.realm.Realm,io.realm.RealmQuery)
    public io.reactivex.Single from(io.realm.DynamicRealm,io.realm.RealmQuery)
com.caverock.androidsvg.SVG$Style$LineCaps
androidx.lifecycle.R
androidx.core.app.RemoteInput$Builder
com.google.android.material.badge.BadgeDrawable$SavedState
io.realm.internal.package-info
com.google.android.material.transition.platform.Hold
com.caverock.androidsvg.SVGAndroidRenderer$RendererState
androidx.collection.ArrayMap:
    public boolean containsAll(java.util.Collection)
    public boolean removeAll(java.util.Collection)
io.realm.io_realm_sync_SubscriptionRealmProxy$SubscriptionColumnInfo:
    void <init>(io.realm.internal.OsSchemaInfo)
    void <init>(io.realm.internal.ColumnInfo,boolean)
    protected final io.realm.internal.ColumnInfo copy(boolean)
com.rollbar.android.R
io.reactivex.android.schedulers.AndroidSchedulers$1
androidx.viewpager2.widget.ScrollEventAdapter$ScrollEventValues
io.realm.internal.Property:
    static native long nativeCreatePersistedLinkProperty(java.lang.String,int,java.lang.String)
    static native long nativeCreateComputedLinkProperty(java.lang.String,java.lang.String,java.lang.String)
    public static final boolean PRIMARY_KEY
    public static final boolean REQUIRED
    public static final boolean INDEXED
    public static final int TYPE_INT
    public static final int TYPE_BOOL
    public static final int TYPE_STRING
    public static final int TYPE_DATA
    public static final int TYPE_DATE
    public static final int TYPE_FLOAT
    public static final int TYPE_DOUBLE
    public static final int TYPE_OBJECT
    public static final int TYPE_LINKING_OBJECTS
    public static final int TYPE_REQUIRED
    public static final int TYPE_NULLABLE
    public static final int TYPE_ARRAY
com.google.android.material.transformation.TransformationChildCard:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
com.google.android.material.transition.MaterialFadeThrough
androidx.recyclerview.widget.DiffUtil$1
androidx.core.content.IntentCompat
io.realm.RealmObjectSchema:
    static final java.util.Map getSupportedSimpleFields()
    static void checkLegalName(java.lang.String)
    public abstract io.realm.RealmObjectSchema setClassName(java.lang.String)
    public varargs abstract io.realm.RealmObjectSchema addField(java.lang.String,java.lang.Class,io.realm.FieldAttribute[])
    public abstract io.realm.RealmObjectSchema addRealmObjectField(java.lang.String,io.realm.RealmObjectSchema)
    public abstract io.realm.RealmObjectSchema addRealmListField(java.lang.String,io.realm.RealmObjectSchema)
    public abstract io.realm.RealmObjectSchema addRealmListField(java.lang.String,java.lang.Class)
    public abstract io.realm.RealmObjectSchema removeField(java.lang.String)
    public abstract io.realm.RealmObjectSchema renameField(java.lang.String,java.lang.String)
    public boolean hasField(java.lang.String)
    public abstract io.realm.RealmObjectSchema addIndex(java.lang.String)
    public boolean hasIndex(java.lang.String)
    public abstract io.realm.RealmObjectSchema removeIndex(java.lang.String)
    public abstract io.realm.RealmObjectSchema addPrimaryKey(java.lang.String)
    public abstract io.realm.RealmObjectSchema removePrimaryKey()
    public abstract io.realm.RealmObjectSchema setRequired(java.lang.String,boolean)
    public abstract io.realm.RealmObjectSchema setNullable(java.lang.String,boolean)
    public boolean isRequired(java.lang.String)
    public boolean isNullable(java.lang.String)
    public boolean isPrimaryKey(java.lang.String)
    public boolean hasPrimaryKey()
    public java.lang.String getPrimaryKey()
    public java.util.Set getFieldNames()
    public abstract io.realm.RealmObjectSchema transform(io.realm.RealmObjectSchema$Function)
    public io.realm.RealmFieldType getFieldType(java.lang.String)
    io.realm.RealmObjectSchema add(java.lang.String,io.realm.RealmFieldType,boolean,boolean,boolean)
    io.realm.RealmObjectSchema add(java.lang.String,io.realm.RealmFieldType,io.realm.RealmObjectSchema)
    long getAndCheckFieldColumnKey(java.lang.String)
    long getFieldColumnKey(java.lang.String)
    void checkFieldExists(java.lang.String)
    long getColumnKey(java.lang.String)
com.google.android.material.transition.platform.FadeModeEvaluators$3
androidx.fragment.R$style
androidx.core.database.CursorWindowCompat
io.realm.internal.core.package-info
androidx.fragment.app.FragmentStatePagerAdapter
io.realm.internal.OsRealmConfig$SyncSessionStopPolicy
com.google.android.material.snackbar.BaseTransientBottomBar$1
androidx.annotation.InspectableProperty$FlagEntry
com.rollbar.notifier.fingerprint.FingerprintGenerator
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat
androidx.core.widget.TextViewCompat$OreoCallback:
    private static final int MENU_ITEM_ORDER_PROCESS_TEXT_INTENT_ACTIONS_START
androidx.core.net.DatagramSocketWrapper
com.google.android.material.tabs.TabLayout$TabLayoutOnPageChangeListener
com.google.android.material.datepicker.MaterialDatePicker:
    public void <init>()
    public static long todayInUtcMilliseconds()
    public static long thisMonthInUtcMilliseconds()
    static com.google.android.material.datepicker.MaterialDatePicker newInstance(com.google.android.material.datepicker.MaterialDatePicker$Builder)
    private int getThemeResId(android.content.Context)
    private void updateHeader()
    private void startPickerFragment()
    private void initHeaderToggle(android.content.Context)
    private void updateToggleContentDescription(com.google.android.material.internal.CheckableImageButton)
    private static android.graphics.drawable.Drawable createHeaderToggleDrawable(android.content.Context)
    private static int getDialogPickerHeight(android.content.Context)
    private static int getPaddedPickerWidth(android.content.Context)
    static synthetic java.util.LinkedHashSet access$000(com.google.android.material.datepicker.MaterialDatePicker)
    static synthetic java.util.LinkedHashSet access$100(com.google.android.material.datepicker.MaterialDatePicker)
    static synthetic void access$200(com.google.android.material.datepicker.MaterialDatePicker)
    static synthetic com.google.android.material.datepicker.DateSelector access$300(com.google.android.material.datepicker.MaterialDatePicker)
    static synthetic android.widget.Button access$400(com.google.android.material.datepicker.MaterialDatePicker)
    static synthetic com.google.android.material.internal.CheckableImageButton access$500(com.google.android.material.datepicker.MaterialDatePicker)
    static synthetic void access$600(com.google.android.material.datepicker.MaterialDatePicker,com.google.android.material.internal.CheckableImageButton)
    static synthetic void access$700(com.google.android.material.datepicker.MaterialDatePicker)
    public java.lang.String getHeaderText()
    public final void onSaveInstanceState(android.os.Bundle)
    public final void onCreate(android.os.Bundle)
    public final android.app.Dialog onCreateDialog(android.os.Bundle)
    public final android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
    public void onStart()
    public void onStop()
    public final void onCancel(android.content.DialogInterface)
    public final void onDismiss(android.content.DialogInterface)
    public final java.lang.Object getSelection()
    public boolean addOnPositiveButtonClickListener(com.google.android.material.datepicker.MaterialPickerOnPositiveButtonClickListener)
    public boolean removeOnPositiveButtonClickListener(com.google.android.material.datepicker.MaterialPickerOnPositiveButtonClickListener)
    public void clearOnPositiveButtonClickListeners()
    public boolean addOnNegativeButtonClickListener(android.view.View$OnClickListener)
    public boolean removeOnNegativeButtonClickListener(android.view.View$OnClickListener)
    public void clearOnNegativeButtonClickListeners()
    public boolean addOnCancelListener(android.content.DialogInterface$OnCancelListener)
    public boolean removeOnCancelListener(android.content.DialogInterface$OnCancelListener)
    public void clearOnCancelListeners()
    public boolean addOnDismissListener(android.content.DialogInterface$OnDismissListener)
    public boolean removeOnDismissListener(android.content.DialogInterface$OnDismissListener)
    public void clearOnDismissListeners()
    private final java.util.LinkedHashSet onPositiveButtonClickListeners
    private final java.util.LinkedHashSet onNegativeButtonClickListeners
    private final java.util.LinkedHashSet onCancelListeners
    private final java.util.LinkedHashSet onDismissListeners
    private int overrideThemeResId
    private com.google.android.material.datepicker.DateSelector dateSelector
    private com.google.android.material.datepicker.PickerFragment pickerFragment
    private com.google.android.material.datepicker.CalendarConstraints calendarConstraints
    private com.google.android.material.datepicker.MaterialCalendar calendar
    private int titleTextResId
    private java.lang.CharSequence titleText
    private boolean fullscreen
    private int inputMode
    private android.widget.TextView headerSelectionText
    private com.google.android.material.internal.CheckableImageButton headerToggleButton
    private com.google.android.material.shape.MaterialShapeDrawable background
    private android.widget.Button confirmButton
    private static final java.lang.String OVERRIDE_THEME_RES_ID
    private static final java.lang.String DATE_SELECTOR_KEY
    private static final java.lang.String CALENDAR_CONSTRAINTS_KEY
    private static final java.lang.String TITLE_TEXT_RES_ID_KEY
    private static final java.lang.String TITLE_TEXT_KEY
    private static final java.lang.String INPUT_MODE_KEY
    public static final int INPUT_MODE_CALENDAR
    public static final int INPUT_MODE_TEXT
androidx.recyclerview.widget.ItemTouchHelper$Callback$1
org.slf4j.helpers.FormattingTuple
androidx.core.view.inputmethod.InputConnectionCompat
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$2
androidx.core.app.NotificationCompat$Style
androidx.recyclerview.widget.ItemTouchHelper$4
androidx.vectordrawable.graphics.drawable.AndroidResources:
    private void <init>()
    static final int STYLEABLE_VECTOR_DRAWABLE_ALPHA
    static final int STYLEABLE_VECTOR_DRAWABLE_AUTO_MIRRORED
    static final int STYLEABLE_VECTOR_DRAWABLE_HEIGHT
    static final int STYLEABLE_VECTOR_DRAWABLE_NAME
    static final int STYLEABLE_VECTOR_DRAWABLE_TINT
    static final int STYLEABLE_VECTOR_DRAWABLE_TINT_MODE
    static final int STYLEABLE_VECTOR_DRAWABLE_VIEWPORT_HEIGHT
    static final int STYLEABLE_VECTOR_DRAWABLE_VIEWPORT_WIDTH
    static final int STYLEABLE_VECTOR_DRAWABLE_WIDTH
    static final int STYLEABLE_VECTOR_DRAWABLE_GROUP_NAME
    static final int STYLEABLE_VECTOR_DRAWABLE_GROUP_PIVOT_X
    static final int STYLEABLE_VECTOR_DRAWABLE_GROUP_PIVOT_Y
    static final int STYLEABLE_VECTOR_DRAWABLE_GROUP_ROTATION
    static final int STYLEABLE_VECTOR_DRAWABLE_GROUP_SCALE_X
    static final int STYLEABLE_VECTOR_DRAWABLE_GROUP_SCALE_Y
    static final int STYLEABLE_VECTOR_DRAWABLE_GROUP_TRANSLATE_X
    static final int STYLEABLE_VECTOR_DRAWABLE_GROUP_TRANSLATE_Y
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_FILL_ALPHA
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_FILL_COLOR
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_NAME
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_PATH_DATA
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_ALPHA
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_COLOR
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_LINE_CAP
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_LINE_JOIN
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_MITER_LIMIT
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_STROKE_WIDTH
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_TRIM_PATH_END
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_TRIM_PATH_OFFSET
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_TRIM_PATH_START
    static final int STYLEABLE_VECTOR_DRAWABLE_PATH_TRIM_PATH_FILLTYPE
    static final int STYLEABLE_VECTOR_DRAWABLE_CLIP_PATH_NAME
    static final int STYLEABLE_VECTOR_DRAWABLE_CLIP_PATH_PATH_DATA
    static final int STYLEABLE_VECTOR_DRAWABLE_CLIP_PATH_FILLTYPE
    static final int STYLEABLE_ANIMATED_VECTOR_DRAWABLE_DRAWABLE
    static final int STYLEABLE_ANIMATED_VECTOR_DRAWABLE_TARGET_ANIMATION
    static final int STYLEABLE_ANIMATED_VECTOR_DRAWABLE_TARGET_NAME
    public static final int STYLEABLE_ANIMATOR_INTERPOLATOR
    public static final int STYLEABLE_ANIMATOR_DURATION
    public static final int STYLEABLE_ANIMATOR_START_OFFSET
    public static final int STYLEABLE_ANIMATOR_REPEAT_COUNT
    public static final int STYLEABLE_ANIMATOR_REPEAT_MODE
    public static final int STYLEABLE_ANIMATOR_VALUE_FROM
    public static final int STYLEABLE_ANIMATOR_VALUE_TO
    public static final int STYLEABLE_ANIMATOR_VALUE_TYPE
    public static final int STYLEABLE_ANIMATOR_SET_ORDERING
    public static final int STYLEABLE_PROPERTY_VALUES_HOLDER_VALUE_FROM
    public static final int STYLEABLE_PROPERTY_VALUES_HOLDER_VALUE_TO
    public static final int STYLEABLE_PROPERTY_VALUES_HOLDER_VALUE_TYPE
    public static final int STYLEABLE_PROPERTY_VALUES_HOLDER_PROPERTY_NAME
    public static final int STYLEABLE_KEYFRAME_VALUE
    public static final int STYLEABLE_KEYFRAME_INTERPOLATOR
    public static final int STYLEABLE_KEYFRAME_VALUE_TYPE
    public static final int STYLEABLE_KEYFRAME_FRACTION
    public static final int STYLEABLE_PROPERTY_ANIMATOR_PROPERTY_NAME
    public static final int STYLEABLE_PROPERTY_ANIMATOR_PATH_DATA
    public static final int STYLEABLE_PROPERTY_ANIMATOR_PROPERTY_X_NAME
    public static final int STYLEABLE_PROPERTY_ANIMATOR_PROPERTY_Y_NAME
    public static final int STYLEABLE_PATH_INTERPOLATOR_CONTROL_X_1
    public static final int STYLEABLE_PATH_INTERPOLATOR_CONTROL_Y_1
    public static final int STYLEABLE_PATH_INTERPOLATOR_CONTROL_X_2
    public static final int STYLEABLE_PATH_INTERPOLATOR_CONTROL_Y_2
    public static final int STYLEABLE_PATH_INTERPOLATOR_PATH_DATA
    public static final int FAST_OUT_LINEAR_IN
    public static final int FAST_OUT_SLOW_IN
    public static final int LINEAR_OUT_SLOW_IN
com.google.android.material.theme.overlay.MaterialThemeOverlay:
    private void <init>()
com.google.android.material.appbar.ViewOffsetHelper:
    public int getLeftAndRightOffset()
    public int getLayoutTop()
    public int getLayoutLeft()
    public void setVerticalOffsetEnabled(boolean)
    public boolean isVerticalOffsetEnabled()
    public void setHorizontalOffsetEnabled(boolean)
    public boolean isHorizontalOffsetEnabled()
com.google.android.material.transition.FitModeEvaluators$1
com.google.android.material.bottomappbar.BottomAppBar:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    static synthetic int access$000(com.google.android.material.bottomappbar.BottomAppBar)
    static synthetic boolean access$100(com.google.android.material.bottomappbar.BottomAppBar)
    static synthetic void access$200(com.google.android.material.bottomappbar.BottomAppBar,int,boolean)
    static synthetic com.google.android.material.shape.MaterialShapeDrawable access$300(com.google.android.material.bottomappbar.BottomAppBar)
    static synthetic com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment access$400(com.google.android.material.bottomappbar.BottomAppBar)
    static synthetic boolean access$500(com.google.android.material.bottomappbar.BottomAppBar)
    static synthetic int access$602(com.google.android.material.bottomappbar.BottomAppBar,int)
    static synthetic boolean access$700(com.google.android.material.bottomappbar.BottomAppBar)
    static synthetic int access$800(com.google.android.material.bottomappbar.BottomAppBar)
    static synthetic int access$802(com.google.android.material.bottomappbar.BottomAppBar,int)
    static synthetic boolean access$900(com.google.android.material.bottomappbar.BottomAppBar)
    static synthetic int access$1000(com.google.android.material.bottomappbar.BottomAppBar)
    static synthetic int access$1002(com.google.android.material.bottomappbar.BottomAppBar,int)
    static synthetic void access$1100(com.google.android.material.bottomappbar.BottomAppBar)
    static synthetic void access$1300(com.google.android.material.bottomappbar.BottomAppBar)
    public void performHide()
    public void performShow()
    public void replaceMenu(int)
    void addAnimationListener(com.google.android.material.bottomappbar.BottomAppBar$AnimationListener)
    void removeAnimationListener(com.google.android.material.bottomappbar.BottomAppBar$AnimationListener)
    private final boolean paddingBottomSystemWindowInsets
    private final boolean paddingLeftSystemWindowInsets
    private final boolean paddingRightSystemWindowInsets
    private static final long ANIMATION_DURATION
    public static final int FAB_ALIGNMENT_MODE_CENTER
    public static final int FAB_ALIGNMENT_MODE_END
    public static final int FAB_ANIMATION_MODE_SCALE
    public static final int FAB_ANIMATION_MODE_SLIDE
androidx.core.R$layout
com.caverock.androidsvg.SVG$GradientSpread
com.google.android.material.behavior.HideBottomViewOnScrollBehavior:
    protected static final int ENTER_ANIMATION_DURATION
    protected static final int EXIT_ANIMATION_DURATION
    private static final int STATE_SCROLLED_DOWN
    private static final int STATE_SCROLLED_UP
com.caverock.androidsvg.SVGParser$TextScanner
androidx.lifecycle.Transformations$2
com.android.volley.toolbox.ImageLoader
androidx.transition.ViewGroupUtilsApi14:
    private void <init>()
    private static final java.lang.String TAG
    private static final int LAYOUT_TRANSITION_CHANGING
androidx.core.os.EnvironmentCompat
com.google.android.material.transition.MaterialContainerTransform$FitMode
io.realm.OrderedRealmCollection:
    public abstract java.lang.Object first()
    public abstract java.lang.Object first(java.lang.Object)
    public abstract java.lang.Object last()
    public abstract java.lang.Object last(java.lang.Object)
    public abstract io.realm.RealmResults sort(java.lang.String)
    public abstract io.realm.RealmResults sort(java.lang.String,io.realm.Sort)
    public abstract io.realm.RealmResults sort(java.lang.String,io.realm.Sort,java.lang.String,io.realm.Sort)
    public abstract io.realm.RealmResults sort(java.lang.String[],io.realm.Sort[])
    public abstract void deleteFromRealm(int)
    public abstract boolean deleteFirstFromRealm()
    public abstract boolean deleteLastFromRealm()
    public abstract io.realm.OrderedRealmCollectionSnapshot createSnapshot()
org.slf4j.helpers.MessageFormatter
androidx.transition.Slide$GravityFlag
io.realm.package-info
androidx.core.widget.TintableCompoundDrawablesView:
    public abstract android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
    public abstract android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
javax.annotation.WillNotClose
com.google.android.material.internal.TextDrawableHelper:
    public boolean isTextWidthDirty()
io.realm.ProxyState$RealmChangeListenerWrapper
androidx.recyclerview.widget.LinearSnapHelper:
    private static final float INVALID_DISTANCE
com.google.android.material.appbar.CollapsingToolbarLayout$1
androidx.vectordrawable.R$styleable
com.google.gson.internal.$Gson$Types$WildcardTypeImpl:
    private static final long serialVersionUID
androidx.appcompat.view.ContextThemeWrapper:
    public void applyOverrideConfiguration(android.content.res.Configuration)
androidx.drawerlayout.R$id
com.google.gson.internal.bind.TreeTypeAdapter$GsonContextImpl:
    public com.google.gson.JsonElement serialize(java.lang.Object)
    public com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type)
    public java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type)
androidx.viewpager2.widget.ViewPager2$PagerSnapHelperImpl
io.realm.internal.OsRealmConfig:
    private static final byte SCHEMA_MODE_VALUE_AUTOMATIC
    private static final byte SCHEMA_MODE_VALUE_IMMUTABLE
    private static final byte SCHEMA_MODE_VALUE_READONLY
    private static final byte SCHEMA_MODE_VALUE_RESET_FILE
    private static final byte SCHEMA_MODE_VALUE_ADDITIVE
    private static final byte SCHEMA_MODE_VALUE_MANUAL
    private static final byte SYNCSESSION_STOP_POLICY_VALUE_IMMEDIATELY
    private static final byte SYNCSESSION_STOP_POLICY_VALUE_LIVE_INDEFINETELY
    private static final byte SYNCSESSION_STOP_POLICY_VALUE_AFTER_CHANGES_UPLOADED
    private static final byte PROXYCONFIG_TYPE_VALUE_HTTP
    public static final byte CLIENT_RESYNC_MODE_RECOVER
    public static final byte CLIENT_RESYNC_MODE_DISCARD
    public static final byte CLIENT_RESYNC_MODE_MANUAL
androidx.recyclerview.widget.AsyncListUtil$DataCallback
com.google.android.material.appbar.HeaderBehavior:
    private static final int INVALID_POINTER
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl
androidx.loader.content.ModernAsyncTask$4
androidx.recyclerview.widget.AdapterListUpdateCallback
com.google.android.material.color.MaterialColors:
    private void <init>()
    public static int layer(android.view.View,int,int)
    public static int compositeARGBWithAlpha(int,int)
    public static final float ALPHA_FULL
    public static final float ALPHA_MEDIUM
    public static final float ALPHA_DISABLED
    public static final float ALPHA_LOW
    public static final float ALPHA_DISABLED_LOW
androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener
androidx.transition.Styleable$VisibilityTransition
androidx.appcompat.resources.R$string
androidx.collection.SparseArrayCompat:
    public void delete(int)
    public boolean remove(int,java.lang.Object)
    public void removeAt(int)
    public void removeAtRange(int,int)
    public java.lang.Object replace(int,java.lang.Object)
    public boolean replace(int,java.lang.Object,java.lang.Object)
    public void putAll(androidx.collection.SparseArrayCompat)
    public java.lang.Object putIfAbsent(int,java.lang.Object)
    public boolean isEmpty()
    public void setValueAt(int,java.lang.Object)
    public int indexOfKey(int)
    public boolean containsKey(int)
    public boolean containsValue(java.lang.Object)
androidx.appcompat.R$id:
    private void <init>()
androidx.recyclerview.widget.AsyncListDiffer$1
androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments:
    public float getProgress()
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks:
    public void <init>()
androidx.cardview.widget.RoundRectDrawable:
    void <init>(android.content.res.ColorStateList,float)
com.caverock.androidsvg.SVG$SvgRadialGradient
androidx.lifecycle.ComputableLiveData$2
com.google.android.material.transition.FitModeResult
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation$1
androidx.core.util.DebugUtils:
    private void <init>()
androidx.core.app.NotificationCompat
com.caverock.androidsvg.SVG$Ellipse
com.google.android.material.transition.TransitionUtils$1
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager:
    boolean isListening()
io.realm.Realm$5
com.google.android.material.checkbox.MaterialCheckBox:
    public void <init>(android.content.Context)
    public boolean isUseMaterialThemeColors()
io.realm.internal.ColumnInfo$ColumnDetails:
    synthetic void <init>(long,io.realm.RealmFieldType,java.lang.String,io.realm.internal.ColumnInfo$1)
com.google.android.material.transition.platform.MaterialContainerTransformSharedElementCallback$ShapeProvider
io.realm.RealmAsyncTask:
    public abstract void cancel()
    public abstract boolean isCancelled()
com.guilhermedaros.museunfc.Fragments.FragmentNFC:
    private java.lang.String Criptografia(java.lang.String,boolean)
    public void formatNdef(android.nfc.tech.Ndef,java.lang.String)
com.google.gson.internal.JavaVersion:
    private void <init>()
com.google.android.material.appbar.ViewOffsetBehavior:
    public boolean setLeftAndRightOffset(int)
    public int getLeftAndRightOffset()
    public void setVerticalOffsetEnabled(boolean)
    public boolean isVerticalOffsetEnabled()
    public void setHorizontalOffsetEnabled(boolean)
    public boolean isHorizontalOffsetEnabled()
androidx.transition.Slide$CalculateSlideHorizontal
com.google.android.material.datepicker.MaterialDatePicker$4
com.google.android.material.transition.TransitionUtils$CornerSizeBinaryOperator
androidx.collection.LongSparseArray:
    public boolean remove(long,java.lang.Object)
    public java.lang.Object replace(long,java.lang.Object)
    public boolean replace(long,java.lang.Object,java.lang.Object)
    public void putAll(androidx.collection.LongSparseArray)
    public java.lang.Object putIfAbsent(long,java.lang.Object)
    public boolean isEmpty()
    public void setValueAt(int,java.lang.Object)
    public int indexOfValue(java.lang.Object)
    public boolean containsKey(long)
    public boolean containsValue(java.lang.Object)
androidx.recyclerview.widget.OrientationHelper$2:
    public void offsetChild(android.view.View,int)
com.getkeepsafe.relinker.elf.Elf$DynamicStructure:
    public static final int DT_NULL
    public static final int DT_NEEDED
    public static final int DT_STRTAB
androidx.drawerlayout.widget.DrawerLayout$DrawerListener
androidx.core.view.NestedScrollingChild2
com.google.android.material.internal.VisibilityAwareImageButton:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
androidx.annotation.InterpolatorRes
com.google.android.material.transition.FadeModeEvaluators$2
androidx.core.app.RemoteInput
androidx.core.view.ActionProvider$SubUiVisibilityListener:
    public abstract void onSubUiVisibilityChanged(boolean)
androidx.core.app.NotificationCompatBuilder
androidx.appcompat.view.menu.MenuAdapter:
    public boolean getForceShowIcon()
androidx.annotation.RestrictTo
androidx.appcompat.R$drawable:
    private void <init>()
io.realm.MutableRealmInteger$Managed
com.google.android.material.appbar.AppBarLayout$OnOffsetChangedListener
androidx.interpolator.R
androidx.transition.Slide$5
javax.annotation.RegEx
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState:
    int[] mCachedThemeAttrs
com.google.android.material.snackbar.SnackbarContentLayout:
    public void <init>(android.content.Context)
    void updateActionTextColorAlphaIfNeeded(float)
    public void animateContentIn(int,int)
    public void animateContentOut(int,int)
io.realm.annotations.Index
io.realm.rx.RealmObservableFactory$4
io.realm.rx.RealmObservableFactory$16
org.slf4j.helpers.NOPLogger:
    public final boolean isTraceEnabled()
    public final void trace(java.lang.String)
    public final void trace(java.lang.String,java.lang.Object)
    public final void trace(java.lang.String,java.lang.Object,java.lang.Object)
    public final varargs void trace(java.lang.String,java.lang.Object[])
    public final void trace(java.lang.String,java.lang.Throwable)
    public final boolean isDebugEnabled()
    public final void debug(java.lang.String)
    public final void debug(java.lang.String,java.lang.Object,java.lang.Object)
    public final varargs void debug(java.lang.String,java.lang.Object[])
    public final void debug(java.lang.String,java.lang.Throwable)
    public final boolean isInfoEnabled()
    public final void info(java.lang.String)
    public final void info(java.lang.String,java.lang.Object)
    public final void info(java.lang.String,java.lang.Object,java.lang.Object)
    public final varargs void info(java.lang.String,java.lang.Object[])
    public final void info(java.lang.String,java.lang.Throwable)
    public final boolean isWarnEnabled()
    public final void warn(java.lang.String)
    public final void warn(java.lang.String,java.lang.Object)
    public final void warn(java.lang.String,java.lang.Object,java.lang.Object)
    public final varargs void warn(java.lang.String,java.lang.Object[])
    public final void warn(java.lang.String,java.lang.Throwable)
    public final boolean isErrorEnabled()
    public final void error(java.lang.String)
    public final void error(java.lang.String,java.lang.Object,java.lang.Object)
    public final varargs void error(java.lang.String,java.lang.Object[])
    private static final long serialVersionUID
com.google.android.material.transition.platform.TransitionListenerAdapter
androidx.loader.content.Loader$ForceLoadContentObserver
android.support.v4.os.IResultReceiver$Stub$Proxy
androidx.transition.R$styleable
androidx.viewpager2.widget.ViewPager2$PageAwareAccessibilityProvider
com.google.android.material.internal.FlowLayout:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet,int,int)
com.google.android.material.bottomsheet.BottomSheetDialog$3
androidx.core.app.NotificationCompat$BubbleMetadata$Builder
com.rollbar.notifier.config.ConfigProviderHelper
androidx.appcompat.view.SupportMenuInflater:
    static final java.lang.String LOG_TAG
    private static final java.lang.String XML_MENU
    private static final java.lang.String XML_GROUP
    private static final java.lang.String XML_ITEM
    static final int NO_ID
androidx.drawerlayout.R$drawable
androidx.viewpager2.widget.ViewPager2$4
androidx.appcompat.widget.TintTypedArray:
    public int length()
    public int getIndexCount()
    public int getIndex(int)
    public android.content.res.Resources getResources()
    public java.lang.String getNonResourceString(int)
    public int getLayoutDimension(int,java.lang.String)
    public float getFraction(int,int,int,float)
    public boolean getValue(int,android.util.TypedValue)
    public int getType(int)
    public android.util.TypedValue peekValue(int)
    public java.lang.String getPositionDescription()
    public int getChangingConfigurations()
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$1
com.getkeepsafe.relinker.elf.Elf$Header:
    public static final int ELFCLASS32
    public static final int ELFCLASS64
    public static final int ELFDATA2MSB
com.guilhermedaros.museunfc.R$menu
com.google.android.material.snackbar.BaseTransientBottomBar$6$1
androidx.appcompat.view.menu.MenuDialogHelper:
    public void setPresenterCallback(androidx.appcompat.view.menu.MenuPresenter$Callback)
com.caverock.androidsvg.CSSParser$Combinator
androidx.coordinatorlayout.R$layout
androidx.transition.Scene:
    public static androidx.transition.Scene getSceneForLayout(android.view.ViewGroup,int,android.content.Context)
    public void <init>(android.view.ViewGroup)
    private void <init>(android.view.ViewGroup,int,android.content.Context)
    public void <init>(android.view.ViewGroup,android.view.View)
    public android.view.ViewGroup getSceneRoot()
    public void enter()
    public void setEnterAction(java.lang.Runnable)
    public void setExitAction(java.lang.Runnable)
    boolean isCreatedFromLayoutResource()
    private android.content.Context mContext
    private int mLayoutId
    private android.view.View mLayout
    private java.lang.Runnable mEnterAction
androidx.customview.R
androidx.core.app.NotificationCompat$Action$SemanticAction
androidx.appcompat.widget.ActivityChooserModel$ActivityChooserModelClient
io.realm.internal.ObservableCollection$CollectionObserverPair:
    public void <init>(java.lang.Object,java.lang.Object)
androidx.vectordrawable.R$dimen
androidx.annotation.RawRes
androidx.appcompat.app.ActionBarDrawerToggle$ToolbarCompatDelegate
androidx.fragment.R$dimen
androidx.annotation.VisibleForTesting
androidx.core.util.Consumer
androidx.lifecycle.Lifecycling:
    static androidx.lifecycle.GenericLifecycleObserver getCallback(java.lang.Object)
    private void <init>()
    private static final int REFLECTIVE_CALLBACK
    private static final int GENERATED_CALLBACK
androidx.appcompat.app.TwilightCalculator:
    public static final int DAY
    public static final int NIGHT
    private static final float DEGREES_TO_RADIANS
    private static final float J0
    private static final float ALTIDUTE_CORRECTION_CIVIL_TWILIGHT
    private static final float C1
    private static final float C2
    private static final float C3
    private static final float OBLIQUITY
    private static final long UTC_2000
androidx.appcompat.graphics.drawable.StateListDrawable:
    void <init>()
    private void updateStateFromTypedArray(android.content.res.TypedArray)
    private void inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public void addState(int[],android.graphics.drawable.Drawable)
    public void inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    androidx.appcompat.graphics.drawable.StateListDrawable$StateListState getStateListState()
    int getStateCount()
    int[] getStateSet(int)
    android.graphics.drawable.Drawable getStateDrawable(int)
    int getStateDrawableIndex(int[])
    void clearMutated()
    private static final java.lang.String TAG
    private static final boolean DEBUG
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback$1
androidx.core.view.inputmethod.InputContentInfoCompat
androidx.core.app.NotificationCompat$BigPictureStyle
androidx.core.content.pm.ShortcutInfoCompatSaver$NoopImpl
io.reactivex.android.schedulers.HandlerScheduler$HandlerWorker
androidx.transition.Transition$ArrayListManager
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuTextItem
io.realm.OrderedRealmCollectionSnapshot
com.rollbar.notifier.filter.FilterPipeline
androidx.activity.R
com.google.gson.TypeAdapter:
    public final void toJson(java.io.Writer,java.lang.Object)
    public final java.lang.String toJson(java.lang.Object)
    public final java.lang.Object fromJson(java.io.Reader)
    public final java.lang.Object fromJson(java.lang.String)
    public final java.lang.Object fromJsonTree(com.google.gson.JsonElement)
com.google.android.material.tabs.TabLayout$PagerAdapterObserver
androidx.core.app.NotificationCompat$BigTextStyle
androidx.transition.TransitionListenerAdapter:
    public void onTransitionEnd(androidx.transition.Transition)
androidx.core.app.ActivityCompat$PermissionCompatDelegate:
    public abstract boolean requestPermissions(android.app.Activity,java.lang.String[],int)
androidx.viewpager2.widget.ViewPager2$PageAwareAccessibilityProvider$3
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl
androidx.annotation.AnyThread
androidx.core.content.FileProvider$PathStrategy
androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate
androidx.appcompat.widget.AppCompatTextHelper:
    private static final int TEXT_FONT_WEIGHT_UNSPECIFIED
    private static final int SANS
    private static final int SERIF
    private static final int MONOSPACE
androidx.core.widget.ImageViewCompat:
    private void <init>()
androidx.transition.Styleable$Transition
androidx.annotation.RestrictTo$Scope
androidx.core.widget.ContentLoadingProgressBar
com.google.android.material.internal.ViewUtils$1
io.realm.rx.RealmObservableFactory$11$2
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath:
    public boolean canApplyTheme()
    public void applyTheme(android.content.res.Resources$Theme)
androidx.appcompat.widget.TooltipCompatHandler:
    private static final java.lang.String TAG
    private static final long LONG_CLICK_HIDE_TIMEOUT_MS
    private static final long HOVER_HIDE_TIMEOUT_MS
    private static final long HOVER_HIDE_TIMEOUT_SHORT_MS
com.google.gson.internal.$Gson$Types:
    private void <init>()
androidx.core.app.NotificationCompatJellybean
com.google.android.material.textfield.MaterialAutoCompleteTextView:
    public void <init>(android.content.Context)
    private static final int MAX_ITEMS_MEASURED
androidx.constraintlayout.solver.widgets.Analyzer:
    private void <init>()
androidx.constraintlayout.solver.Pools
androidx.appcompat.graphics.drawable.DrawableContainer:
    public void setEnterFadeDuration(int)
    public void setExitFadeDuration(int)
    public boolean isStateful()
    void setCurrentIndex(int)
    void clearMutated()
    private static final boolean DEBUG
    private static final java.lang.String TAG
    private static final boolean DEFAULT_DITHER
io.realm.internal.OsObjectStore:
    public void <init>()
    public static void setPrimaryKeyForObject(io.realm.internal.OsSharedRealm,java.lang.String,java.lang.String)
    public static boolean deleteTableForObject(io.realm.internal.OsSharedRealm,java.lang.String)
    private static native void nativeSetPrimaryKeyForObject(long,java.lang.String,java.lang.String)
    private static native boolean nativeDeleteTableForObject(long,java.lang.String)
    public static final long SCHEMA_NOT_VERSIONED
androidx.fragment.R$color
androidx.appcompat.widget.ThemedSpinnerAdapter$Helper
androidx.transition.Styleable$TransitionManager
androidx.core.app.JobIntentService
androidx.fragment.app.FragmentManagerImpl$PopBackStackState
com.google.android.material.snackbar.BaseTransientBottomBar$ContentViewCallback
androidx.appcompat.widget.ActivityChooserView$1
com.caverock.androidsvg.SVGAndroidRenderer$TextBoundsCalculator
androidx.recyclerview.widget.BatchingListUpdateCallback
androidx.core.os.HandlerCompat
androidx.constraintlayout.solver.widgets.ResolutionNode:
    public void invalidateAnchors()
    public void remove(androidx.constraintlayout.solver.widgets.ResolutionDimension)
    public static final int UNRESOLVED
    public static final int RESOLVED
    public static final int REMOVED
org.slf4j.event.EventConstants
androidx.loader.R$id
androidx.fragment.R$attr
com.android.volley.toolbox.NetworkImageView$1$1
io.realm.RealmConfiguration$Builder:
    private void checkModule(java.lang.Object)
    public io.realm.RealmConfiguration$Builder directory(java.io.File)
    public io.realm.RealmConfiguration$Builder encryptionKey(byte[])
    public io.realm.RealmConfiguration$Builder schemaVersion(long)
    public io.realm.RealmConfiguration$Builder migration(io.realm.RealmMigration)
    public io.realm.RealmConfiguration$Builder deleteRealmIfMigrationNeeded()
    public io.realm.RealmConfiguration$Builder inMemory()
    public varargs io.realm.RealmConfiguration$Builder modules(java.lang.Object,java.lang.Object[])
    public final io.realm.RealmConfiguration$Builder addModule(java.lang.Object)
    public io.realm.RealmConfiguration$Builder rxFactory(io.realm.rx.RxObservableFactory)
    public io.realm.RealmConfiguration$Builder initialData(io.realm.Realm$Transaction)
    public io.realm.RealmConfiguration$Builder assetFile(java.lang.String)
    public io.realm.RealmConfiguration$Builder readOnly()
    public io.realm.RealmConfiguration$Builder compactOnLaunch()
    public io.realm.RealmConfiguration$Builder compactOnLaunch(io.realm.CompactOnLaunchCallback)
    public io.realm.RealmConfiguration$Builder maxNumberOfActiveVersions(long)
    final varargs io.realm.RealmConfiguration$Builder schema(java.lang.Class,java.lang.Class[])
androidx.core.graphics.Insets:
    public static androidx.core.graphics.Insets of(android.graphics.Rect)
androidx.customview.widget.ViewDragHelper:
    public void setMinVelocity(float)
    public float getMinVelocity()
    public int getViewDragState()
    public void setEdgeTrackingEnabled(int)
    public int getEdgeSize()
    public android.view.View getCapturedView()
    public int getActivePointerId()
    public void abort()
    public void flingCapturedView(int,int,int,int)
    protected boolean canScroll(android.view.View,boolean,int,int,int,int)
    public boolean checkTouchSlop(int)
    public boolean checkTouchSlop(int,int)
    public boolean isEdgeTouched(int)
    public boolean isEdgeTouched(int,int)
    private static final java.lang.String TAG
    public static final int INVALID_POINTER
    public static final int STATE_IDLE
    public static final int STATE_DRAGGING
    public static final int STATE_SETTLING
    public static final int EDGE_LEFT
    public static final int EDGE_RIGHT
    public static final int EDGE_TOP
    public static final int EDGE_BOTTOM
    public static final int EDGE_ALL
    public static final int DIRECTION_HORIZONTAL
    public static final int DIRECTION_VERTICAL
    public static final int DIRECTION_ALL
    private static final int EDGE_SIZE
    private static final int BASE_SETTLE_DURATION
    private static final int MAX_SETTLE_DURATION
androidx.core.view.accessibility.AccessibilityClickableSpanCompat:
    public static final java.lang.String SPAN_ID
androidx.cardview.widget.RoundRectDrawableWithShadow:
    void <init>(android.content.res.Resources,android.content.res.ColorStateList,float,float,float)
    private static final float SHADOW_MULTIPLIER
io.realm.sync.permissions.Permission$Builder
com.caverock.androidsvg.SVGParser
com.google.android.material.slider.RangeSlider$OnSliderTouchListener
androidx.transition.R$string
androidx.customview.R$style
com.google.android.material.transition.platform.FitModeEvaluators$1
io.realm.internal.RealmProxyMediator:
    protected static io.realm.exceptions.RealmException getMissingProxyClassException(java.lang.String)
    public abstract void insert(io.realm.Realm,io.realm.RealmModel,java.util.Map)
    public abstract void insertOrUpdate(io.realm.Realm,io.realm.RealmModel,java.util.Map)
    public abstract void insertOrUpdate(io.realm.Realm,java.util.Collection)
    public abstract void insert(io.realm.Realm,java.util.Collection)
    public abstract io.realm.RealmModel createOrUpdateUsingJsonObject(java.lang.Class,io.realm.Realm,org.json.JSONObject,boolean)
    public abstract io.realm.RealmModel createUsingJsonStream(java.lang.Class,io.realm.Realm,android.util.JsonReader)
    public abstract io.realm.RealmModel createDetachedCopy(io.realm.RealmModel,int,java.util.Map)
io.realm.DateListOperator
androidx.appcompat.widget.LinearLayoutCompat:
    public boolean isBaselineAligned()
    public boolean isMeasureWithLargestChildEnabled()
    public static final int HORIZONTAL
    public static final int VERTICAL
    public static final int SHOW_DIVIDER_NONE
    public static final int SHOW_DIVIDER_BEGINNING
    public static final int SHOW_DIVIDER_MIDDLE
    public static final int SHOW_DIVIDER_END
    private static final int VERTICAL_GRAVITY_COUNT
    private static final int INDEX_CENTER_VERTICAL
    private static final int INDEX_TOP
    private static final int INDEX_BOTTOM
    private static final int INDEX_FILL
    private static final java.lang.String ACCESSIBILITY_CLASS_NAME
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat:
    public static androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat create(android.content.Context,int,android.content.res.Resources$Theme)
    public void addState(int[],android.graphics.drawable.Drawable,int)
    public void addTransition(int,int,android.graphics.drawable.Drawable,boolean)
    void clearMutated()
    public synthetic bridge void addState(int[],android.graphics.drawable.Drawable)
    public synthetic bridge void setExitFadeDuration(int)
    public synthetic bridge void setEnterFadeDuration(int)
    private static final java.lang.String ELEMENT_TRANSITION
    private static final java.lang.String ELEMENT_ITEM
    private static final java.lang.String TRANSITION_MISSING_DRAWABLE_ERROR
    private static final java.lang.String TRANSITION_MISSING_FROM_TO_ID
    private static final java.lang.String ITEM_MISSING_DRAWABLE_ERROR
androidx.appcompat.app.ActionBarDrawerToggle
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams:
    public void setAnchorId(int)
    void invalidateAnchor()
androidx.viewpager2.widget.ViewPager2$RecyclerViewImpl
androidx.cardview.R$styleable
com.android.volley.toolbox.Volley:
    public void <init>()
    public static com.android.volley.RequestQueue newRequestQueue(android.content.Context,com.android.volley.toolbox.HttpStack)
    private static final java.lang.String DEFAULT_CACHE_DIR
com.rollbar.android.Rollbar$1
androidx.collection.ContainerHelpers:
    private void <init>()
com.android.volley.Request:
    public void <init>(java.lang.String,com.android.volley.Response$ErrorListener)
    public com.android.volley.Request setTag(java.lang.Object)
    public java.lang.Object getTag()
    public com.android.volley.Response$ErrorListener getErrorListener()
    public final int getSequence()
    public void cancel()
    public final com.android.volley.Request setShouldCache(boolean)
    public final com.android.volley.Request setShouldRetryServerErrors(boolean)
    private java.lang.Object mTag
    private static final java.lang.String DEFAULT_PARAMS_ENCODING
com.google.android.material.internal.NavigationMenuPresenter$SubheaderViewHolder
androidx.annotation.experimental.UseExperimental
androidx.core.R$styleable:
    private void <init>()
com.google.android.material.textfield.TextInputLayout$EndIconMode
androidx.core.view.ViewCompat$ScrollAxis
androidx.annotation.HalfFloat
io.realm.OrderedRealmCollectionImpl:
    private java.lang.Object lastImpl(boolean,java.lang.Object)
    private long getColumnKeyForSort(java.lang.String)
    private io.realm.SchemaConnector getSchemaConnector()
    io.realm.internal.Table getTable()
    io.realm.internal.OsResults getOsResults()
    public boolean isValid()
    public boolean isManaged()
    public java.lang.Object first()
    public java.lang.Object last()
    public java.lang.Object last(java.lang.Object)
    public void deleteFromRealm(int)
    public io.realm.RealmResults sort(java.lang.String)
    public io.realm.RealmResults sort(java.lang.String,io.realm.Sort)
    public io.realm.RealmResults sort(java.lang.String[],io.realm.Sort[])
    public io.realm.RealmResults sort(java.lang.String,io.realm.Sort,java.lang.String,io.realm.Sort)
    public java.lang.Number min(java.lang.String)
    public java.util.Date minDate(java.lang.String)
    public java.lang.Number max(java.lang.String)
    public java.util.Date maxDate(java.lang.String)
    public java.lang.Number sum(java.lang.String)
    public double average(java.lang.String)
    public boolean deleteLastFromRealm()
    public boolean deleteFirstFromRealm()
    public io.realm.OrderedRealmCollectionSnapshot createSnapshot()
    public io.realm.Realm getRealm()
    io.realm.RealmResults createLoadedResults(io.realm.internal.OsResults)
    private static final java.lang.String NOT_SUPPORTED_MESSAGE
androidx.viewpager.widget.PagerTabStrip
androidx.annotation.LayoutRes
com.google.android.material.datepicker.MaterialDatePicker$Builder
com.google.android.material.canvas.CanvasCompat:
    private void <init>()
    public static int saveLayerAlpha(android.graphics.Canvas,android.graphics.RectF,int)
androidx.core.provider.FontsContractCompat$4$3
androidx.core.app.RemoteActionCompat:
    public void <init>(androidx.core.graphics.drawable.IconCompat,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)
    public void <init>(androidx.core.app.RemoteActionCompat)
    public static androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)
    public void setEnabled(boolean)
    public boolean isEnabled()
    public void setShouldShowIcon(boolean)
    public boolean shouldShowIcon()
    public androidx.core.graphics.drawable.IconCompat getIcon()
    public java.lang.CharSequence getTitle()
    public java.lang.CharSequence getContentDescription()
    public android.app.PendingIntent getActionIntent()
    public android.app.RemoteAction toRemoteAction()
com.android.volley.toolbox.ImageLoader$ImageListener
androidx.core.graphics.BitmapCompat
androidx.core.provider.SelfDestructiveThread:
    public boolean isRunning()
    public int getGeneration()
    private static final int MSG_INVOKE_RUNNABLE
    private static final int MSG_DESTRUCTION
androidx.fragment.R$string
com.google.android.material.snackbar.BaseTransientBottomBar$15
androidx.vectordrawable.R$style
io.realm.internal.objectstore.OsObjectBuilder$11:
    public void handleItem(long,byte[])
    public synthetic bridge void handleItem(long,java.lang.Object)
androidx.annotation.UiThread
androidx.appcompat.app.TwilightManager:
    static void setInstance(androidx.appcompat.app.TwilightManager)
    private static final java.lang.String TAG
    private static final int SUNRISE
    private static final int SUNSET
com.caverock.androidsvg.CSSParser$Attrib
com.caverock.androidsvg.SVG$SvgElement
androidx.transition.Slide
androidx.transition.ChangeBounds:
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void setResizeClip(boolean)
    public boolean getResizeClip()
    private static final java.lang.String PROPNAME_BOUNDS
    private static final java.lang.String PROPNAME_CLIP
    private static final java.lang.String PROPNAME_PARENT
    private static final java.lang.String PROPNAME_WINDOW_X
    private static final java.lang.String PROPNAME_WINDOW_Y
com.google.android.material.transition.platform.TransitionUtils$CanvasOperation
androidx.appcompat.widget.VectorEnabledTintResources:
    public static void setCompatVectorFromResourcesEnabled(boolean)
    public static final int MAX_SDK_WHERE_REQUIRED
io.realm.internal.OsResults$3
androidx.viewpager2.R$dimen
com.caverock.androidsvg.SVGAndroidRenderer$TextProcessor
com.android.volley.DefaultRetryPolicy:
    public float getBackoffMultiplier()
    public static final int DEFAULT_TIMEOUT_MS
    public static final int DEFAULT_MAX_RETRIES
    public static final float DEFAULT_BACKOFF_MULT
androidx.cursoradapter.widget.ResourceCursorAdapter:
    public void <init>(android.content.Context,int,android.database.Cursor)
    public void <init>(android.content.Context,int,android.database.Cursor,int)
    public void setViewResource(int)
    public void setDropDownViewResource(int)
io.realm.rx.ObjectChange
com.rollbar.Rollbar$4
androidx.constraintlayout.solver.widgets.Barrier:
    public boolean allowsGoneWidget()
    public static final int LEFT
    public static final int RIGHT
    public static final int TOP
    public static final int BOTTOM
io.realm.internal.ColumnInfo:
    protected void <init>(io.realm.internal.ColumnInfo,boolean)
    public final boolean isMutable()
    public long getColumnKey(java.lang.String)
    public java.lang.String getInternalFieldName(java.lang.String)
    protected abstract io.realm.internal.ColumnInfo copy(boolean)
    protected final void addBacklinkDetails(io.realm.internal.OsSchemaInfo,java.lang.String,java.lang.String,java.lang.String)
    public java.util.Map getColumnKeysMap()
io.realm.io_realm_sync_permissions_RealmPermissionsRealmProxy$ClassNameHelper
androidx.arch.core.executor.ArchTaskExecutor:
    public static java.util.concurrent.Executor getMainThreadExecutor()
    public static java.util.concurrent.Executor getIOThreadExecutor()
    public void setDelegate(androidx.arch.core.executor.TaskExecutor)
org.slf4j.helpers.MarkerIgnoringBase:
    public boolean isTraceEnabled(org.slf4j.Marker)
    public void trace(org.slf4j.Marker,java.lang.String)
    public void trace(org.slf4j.Marker,java.lang.String,java.lang.Object)
    public void trace(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)
    public varargs void trace(org.slf4j.Marker,java.lang.String,java.lang.Object[])
    public void trace(org.slf4j.Marker,java.lang.String,java.lang.Throwable)
    public boolean isDebugEnabled(org.slf4j.Marker)
    public void debug(org.slf4j.Marker,java.lang.String)
    public void debug(org.slf4j.Marker,java.lang.String,java.lang.Object)
    public void debug(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)
    public varargs void debug(org.slf4j.Marker,java.lang.String,java.lang.Object[])
    public void debug(org.slf4j.Marker,java.lang.String,java.lang.Throwable)
    public boolean isInfoEnabled(org.slf4j.Marker)
    public void info(org.slf4j.Marker,java.lang.String)
    public void info(org.slf4j.Marker,java.lang.String,java.lang.Object)
    public void info(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)
    public varargs void info(org.slf4j.Marker,java.lang.String,java.lang.Object[])
    public void info(org.slf4j.Marker,java.lang.String,java.lang.Throwable)
    public boolean isWarnEnabled(org.slf4j.Marker)
    public void warn(org.slf4j.Marker,java.lang.String)
    public void warn(org.slf4j.Marker,java.lang.String,java.lang.Object)
    public void warn(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)
    public varargs void warn(org.slf4j.Marker,java.lang.String,java.lang.Object[])
    public void warn(org.slf4j.Marker,java.lang.String,java.lang.Throwable)
    public boolean isErrorEnabled(org.slf4j.Marker)
    public void error(org.slf4j.Marker,java.lang.String)
    public void error(org.slf4j.Marker,java.lang.String,java.lang.Object)
    public void error(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)
    public varargs void error(org.slf4j.Marker,java.lang.String,java.lang.Object[])
    public void error(org.slf4j.Marker,java.lang.String,java.lang.Throwable)
    private static final long serialVersionUID
com.google.android.material.bottomnavigation.BottomNavigationView$1
androidx.annotation.InspectableProperty
io.realm.DynamicRealm:
    public static io.realm.DynamicRealm getInstance(io.realm.RealmConfiguration)
    public static io.realm.RealmAsyncTask getInstanceAsync(io.realm.RealmConfiguration,io.realm.DynamicRealm$Callback)
    public io.realm.DynamicRealmObject createObject(java.lang.String)
    public io.realm.DynamicRealmObject createObject(java.lang.String,java.lang.Object)
    public io.realm.RealmQuery where(java.lang.String)
    public void addChangeListener(io.realm.RealmChangeListener)
    public void removeChangeListener(io.realm.RealmChangeListener)
    public void removeAllChangeListeners()
    public void delete(java.lang.String)
    public void executeTransaction(io.realm.DynamicRealm$Transaction)
    public io.reactivex.Flowable asFlowable()
    public boolean isEmpty()
    public io.realm.DynamicRealm freeze()
    void setVersion(long)
    public synthetic bridge void deleteAll()
    public synthetic bridge long getVersion()
    public synthetic bridge io.realm.BaseRealm freeze()
    public synthetic bridge void cancelTransaction()
    public synthetic bridge void commitTransaction()
    public synthetic bridge void beginTransaction()
    public synthetic bridge void stopWaitForChange()
    public synthetic bridge boolean waitForChange()
    public synthetic bridge void writeEncryptedCopyTo(java.io.File,byte[])
    public synthetic bridge void writeCopyTo(java.io.File)
    public synthetic bridge void refresh()
    public synthetic bridge boolean isAutoRefresh()
    public synthetic bridge void setAutoRefresh(boolean)
com.caverock.androidsvg.SVG$Use
androidx.appcompat.widget.DecorToolbar:
    public abstract void setTitle(java.lang.CharSequence)
    public abstract java.lang.CharSequence getSubtitle()
    public abstract void setSubtitle(java.lang.CharSequence)
    public abstract boolean hasIcon()
    public abstract boolean hasLogo()
    public abstract void setLogo(android.graphics.drawable.Drawable)
    public abstract boolean hasEmbeddedTabs()
    public abstract boolean isTitleTruncated()
    public abstract void setNavigationMode(int)
    public abstract void setDropdownParams(android.widget.SpinnerAdapter,android.widget.AdapterView$OnItemSelectedListener)
    public abstract void setDropdownSelectedPosition(int)
    public abstract int getDropdownSelectedPosition()
    public abstract int getDropdownItemCount()
    public abstract void setCustomView(android.view.View)
    public abstract android.view.View getCustomView()
    public abstract void animateToVisibility(int)
    public abstract void setNavigationIcon(android.graphics.drawable.Drawable)
    public abstract void setNavigationIcon(int)
    public abstract void setNavigationContentDescription(java.lang.CharSequence)
    public abstract void setNavigationContentDescription(int)
    public abstract void setDefaultNavigationContentDescription(int)
    public abstract void setDefaultNavigationIcon(android.graphics.drawable.Drawable)
    public abstract void saveHierarchyState(android.util.SparseArray)
    public abstract void restoreHierarchyState(android.util.SparseArray)
    public abstract void setBackgroundDrawable(android.graphics.drawable.Drawable)
    public abstract int getHeight()
    public abstract int getVisibility()
androidx.core.os.LocaleListInterface
io.realm.annotations.PrimaryKey
androidx.core.widget.ContentLoadingProgressBar$2
com.caverock.androidsvg.SVGAndroidRenderer$TextWidthCalculator
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior:
    public void setAutoHideEnabled(boolean)
    public boolean isAutoHideEnabled()
    public void setInternalAutoHideListener(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener)
    private static final boolean AUTO_HIDE_DEFAULT
androidx.transition.ViewUtilsBase:
    public void setAnimationMatrix(android.view.View,android.graphics.Matrix)
    private float[] mMatrixValues
    private static final java.lang.String TAG
    private static final int VISIBILITY_MASK
io.realm.internal.NativeObject:
    public static final long NULLPTR
androidx.appcompat.widget.AppCompatPopupWindow:
    public void <init>(android.content.Context,android.util.AttributeSet,int)
io.realm.Realm$Transaction$Callback
androidx.transition.TransitionPropagation:
    public void <init>()
androidx.recyclerview.widget.ChildHelper$Bucket:
    static final int BITS_PER_WORD
    static final long LAST_BIT
androidx.annotation.BinderThread
com.google.gson.internal.LinkedHashTreeMap$EntrySet$1
com.google.android.material.transition.platform.FadeModeEvaluators$2
com.guilhermedaros.museunfc.R$anim
com.google.android.material.shape.CutCornerTreatment:
    public void <init>(float)
androidx.recyclerview.widget.PagerSnapHelper$1
io.realm.rx.RealmObservableFactory$9$1
androidx.fragment.app.FragmentTabHost$SavedState
io.realm.DynamicRealm$Transaction
com.google.android.material.appbar.CollapsingToolbarLayout$2
io.realm.com_guilhermedaros_museunfc_Entities_ItemMuseuRealmProxyInterface:
    public abstract void realmSet$id(int)
    public abstract void realmSet$nome(java.lang.String)
    public abstract void realmSet$ordem(java.lang.String)
    public abstract void realmSet$familia(java.lang.String)
    public abstract void realmSet$descricao(java.lang.String)
    public abstract void realmSet$distribuicaoGeografica(java.lang.String)
    public abstract void realmSet$habitat(java.lang.String)
    public abstract void realmSet$habitosAlimentares(java.lang.String)
    public abstract void realmSet$reproducao(java.lang.String)
    public abstract void realmSet$periodoDeVida(java.lang.String)
    public abstract void realmSet$ativo(boolean)
io.realm.rx.RealmObservableFactory$15$2
androidx.core.content.pm.ShortcutManagerCompat$1
androidx.core.app.JobIntentService$CompatWorkItem
com.android.volley.toolbox.JsonArrayRequest
androidx.core.text.TextDirectionHeuristicsCompat:
    private void <init>()
    private static final int STATE_TRUE
    private static final int STATE_FALSE
    private static final int STATE_UNKNOWN
androidx.annotation.Nullable
androidx.transition.ViewGroupUtils:
    static int getChildDrawingOrder(android.view.ViewGroup,int)
    private void <init>()
    private static java.lang.reflect.Method sGetChildDrawingOrderMethod
    private static boolean sGetChildDrawingOrderMethodFetched
com.caverock.androidsvg.CSSParser$Ruleset
androidx.coordinatorlayout.R$styleable:
    private void <init>()
io.realm.internal.core.IncludeDescriptor
androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver:
    public void onItemRangeChanged(int,int,java.lang.Object)
    public void onItemRangeInserted(int,int)
    public void onItemRangeRemoved(int,int)
    public void onItemRangeMoved(int,int,int)
    void triggerUpdateProcessor()
com.google.android.material.badge.BadgeDrawable$BadgeGravity
androidx.coordinatorlayout.widget.ViewGroupUtils:
    private void <init>()
javax.annotation.Detainted
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$1
com.google.android.material.datepicker.DaysOfWeekAdapter:
    private static final int NARROW_FORMAT
androidx.recyclerview.widget.ItemTouchUIUtil
io.realm.internal.objectstore.OsObjectBuilder$6:
    public void handleItem(long,java.lang.Long)
    public synthetic bridge void handleItem(long,java.lang.Object)
com.android.volley.toolbox.PoolingByteArrayOutputStream:
    public void <init>(com.android.volley.toolbox.ByteArrayPool)
    private static final int DEFAULT_SIZE
androidx.core.internal.package-info
com.guilhermedaros.museunfc.Fragments.FragmentMain$OnFragmentInteractionListener:
    public abstract void onFragmentInteraction(android.net.Uri)
androidx.annotation.AttrRes
androidx.core.content.pm.ActivityInfoCompat
javax.annotation.MatchesPattern
androidx.core.view.GestureDetectorCompat
androidx.transition.PathMotion:
    public void <init>(android.content.Context,android.util.AttributeSet)
androidx.core.app.Person
com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholdsGroup
com.google.android.material.transition.FitModeEvaluators$2
androidx.annotation.ArrayRes
androidx.annotation.StyleRes
androidx.core.content.MimeTypeFilter
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ShowStrategy
androidx.core.app.NotificationCompat$NotificationVisibility
androidx.transition.TransitionSet:
    public void <init>(android.content.Context,android.util.AttributeSet)
    public int getOrdering()
    public androidx.transition.TransitionSet addTarget(int)
    public androidx.transition.TransitionSet addTarget(java.lang.String)
    public androidx.transition.TransitionSet addTarget(java.lang.Class)
    public androidx.transition.TransitionSet removeTarget(int)
    public androidx.transition.TransitionSet removeTarget(java.lang.Class)
    public androidx.transition.TransitionSet removeTarget(java.lang.String)
    public androidx.transition.Transition excludeTarget(android.view.View,boolean)
    public androidx.transition.Transition excludeTarget(java.lang.String,boolean)
    public androidx.transition.Transition excludeTarget(int,boolean)
    public androidx.transition.Transition excludeTarget(java.lang.Class,boolean)
    public androidx.transition.TransitionSet removeTransition(androidx.transition.Transition)
    void forceToEnd(android.view.ViewGroup)
    androidx.transition.TransitionSet setSceneRoot(android.view.ViewGroup)
    void setCanRemoveViews(boolean)
    synthetic bridge androidx.transition.Transition setSceneRoot(android.view.ViewGroup)
    public synthetic bridge androidx.transition.Transition removeTarget(java.lang.Class)
    public synthetic bridge androidx.transition.Transition removeTarget(java.lang.String)
    public synthetic bridge androidx.transition.Transition removeTarget(int)
    public synthetic bridge androidx.transition.Transition addTarget(java.lang.Class)
    public synthetic bridge androidx.transition.Transition addTarget(java.lang.String)
    public synthetic bridge androidx.transition.Transition addTarget(int)
    private static final int FLAG_CHANGE_INTERPOLATOR
    private static final int FLAG_CHANGE_PROPAGATION
    private static final int FLAG_CHANGE_PATH_MOTION
    private static final int FLAG_CHANGE_EPICENTER
    public static final int ORDERING_TOGETHER
    public static final int ORDERING_SEQUENTIAL
androidx.recyclerview.widget.MessageThreadUtil$2
androidx.appcompat.widget.ActivityChooserView
androidx.core.view.VelocityTrackerCompat
com.google.gson.stream.JsonWriter:
    public final void setIndent(java.lang.String)
    public final void setHtmlSafe(boolean)
    public final boolean isHtmlSafe()
    public final void setSerializeNulls(boolean)
    public com.google.gson.stream.JsonWriter jsonValue(java.lang.String)
    public com.google.gson.stream.JsonWriter value(double)
androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask$PrecomputedTextCallback
androidx.recyclerview.widget.SortedList$BatchedCallback
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat
com.google.android.material.snackbar.BaseTransientBottomBar$2
androidx.viewpager.R$drawable
javax.annotation.concurrent.NotThreadSafe
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$3:
    void <init>(androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer)
com.google.android.material.R$bool
androidx.core.R$color
com.rollbar.notifier.config.Config
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler
androidx.recyclerview.widget.RecyclerView$Recycler:
    public void bindViewToPosition(android.view.View,int)
    static final int DEFAULT_CACHE_SIZE
com.google.android.material.transition.platform.MaterialContainerTransformSharedElementCallback$ShapeableViewShapeProvider
androidx.recyclerview.widget.ItemTouchHelper$3
androidx.appcompat.app.ActionBarDrawerToggle$1
androidx.core.text.util.LinkifyCompat$LinkSpec
androidx.core.app.NotificationCompat$WearableExtender
com.google.android.material.internal.NavigationMenuPresenter
com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholds
androidx.annotation.BoolRes
com.google.android.material.circularreveal.CircularRevealFrameLayout:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void actualDraw(android.graphics.Canvas)
    public boolean actualIsOpaque()
androidx.lifecycle.AndroidViewModel
androidx.transition.R
com.caverock.androidsvg.SVG$TextPositionedContainer
androidx.loader.app.LoaderManagerImpl$LoaderViewModel:
    void startCreatingLoader()
    boolean isCreatingLoader()
    void finishCreatingLoader()
    void putLoader(int,androidx.loader.app.LoaderManagerImpl$LoaderInfo)
    androidx.loader.app.LoaderManagerImpl$LoaderInfo getLoader(int)
    void removeLoader(int)
    boolean hasRunningLoaders()
androidx.core.app.NotificationBuilderWithBuilderAccessor
io.realm.LongListOperator
androidx.core.app.FrameMetricsAggregator$FrameMetricsBaseImpl
androidx.constraintlayout.solver.widgets.WidgetContainer:
    public void <init>(int,int,int,int)
    public void <init>(int,int)
    public static androidx.constraintlayout.solver.widgets.Rectangle getBounds(java.util.ArrayList)
    public varargs void add(androidx.constraintlayout.solver.widgets.ConstraintWidget[])
    public java.util.ArrayList getChildren()
    public androidx.constraintlayout.solver.widgets.ConstraintWidget findWidget(float,float)
    public java.util.ArrayList findWidgets(int,int,int,int)
androidx.appcompat.widget.ActionMenuView:
    private static final java.lang.String TAG
    static final int MIN_CELL_SIZE
    static final int GENERATED_ITEM_PADDING
androidx.annotation.FontRes
androidx.core.app.AppLaunchChecker
com.android.volley.toolbox.NetworkImageView
androidx.recyclerview.widget.ViewInfoStore:
    private static final boolean DEBUG
com.google.android.material.card.MaterialCardViewHelper:
    public void <init>(com.google.android.material.card.MaterialCardView,android.util.AttributeSet,int,int)
    private void updateInsetForeground(android.graphics.drawable.Drawable)
    private android.graphics.drawable.Drawable insetDrawable(android.graphics.drawable.Drawable)
    private float calculateVerticalBackgroundPadding()
    private float calculateHorizontalBackgroundPadding()
    private boolean canClipToOutline()
    private float getParentCardViewCalculatedCornerPadding()
    private boolean shouldAddCornerPaddingInsideCardBackground()
    private boolean shouldAddCornerPaddingOutsideCardBackground()
    private float calculateActualCornerPadding()
    private float calculateCornerPaddingForCornerTreatment(com.google.android.material.shape.CornerTreatment,float)
    private android.graphics.drawable.Drawable getClickableForeground()
    private android.graphics.drawable.Drawable createForegroundRippleDrawable()
    private android.graphics.drawable.Drawable createCompatRippleDrawable()
    private void updateRippleColor()
    private android.graphics.drawable.Drawable createCheckedIconLayer()
    private com.google.android.material.shape.MaterialShapeDrawable createForegroundShapeDrawable()
    static void <clinit>()
    void loadFromAttributes(android.content.res.TypedArray)
    void setUserContentPadding(int,int,int,int)
    void updateStroke()
    private final com.google.android.material.card.MaterialCardView materialCardView
    private final android.graphics.Rect userContentPadding
    private final com.google.android.material.shape.MaterialShapeDrawable bgDrawable
    private final com.google.android.material.shape.MaterialShapeDrawable foregroundContentDrawable
    private final int checkedIconMargin
    private final int checkedIconSize
    private int strokeWidth
    private android.graphics.drawable.Drawable fgDrawable
    private android.graphics.drawable.Drawable checkedIcon
    private android.content.res.ColorStateList rippleColor
    private android.content.res.ColorStateList checkedIconTint
    private com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel
    private android.content.res.ColorStateList strokeColor
    private android.graphics.drawable.Drawable rippleDrawable
    private android.graphics.drawable.LayerDrawable clickableForegroundDrawable
    private com.google.android.material.shape.MaterialShapeDrawable compatRippleDrawable
    private com.google.android.material.shape.MaterialShapeDrawable foregroundShapeDrawable
    private boolean isBackgroundOverwritten
    private boolean checkable
    private static final int[] CHECKED_STATE_SET
    private static final int DEFAULT_STROKE_VALUE
    private static final double COS_45
    private static final float CARD_VIEW_SHADOW_MULTIPLIER
    private static final int CHECKED_ICON_LAYER_INDEX
androidx.loader.content.ModernAsyncTask$3
androidx.viewpager2.adapter.FragmentStateAdapter$DataSetChangeObserver
io.realm.internal.OsObject$OsObjectChangeSet:
    public boolean isDeleted()
    public java.lang.String[] getChangedFields()
    public boolean isFieldChanged(java.lang.String)
com.caverock.androidsvg.SVGAndroidRenderer$PlainTextDrawer
com.caverock.androidsvg.SVG$TSpan
com.google.android.material.chip.ChipGroup:
    public void <init>(android.content.Context)
    public void check(int)
    public boolean isSelectionRequired()
androidx.viewpager2.widget.ViewPager2$AccessibilityProvider
androidx.recyclerview.widget.LinearSmoothScroller:
    private static final boolean DEBUG
    private static final float MILLISECONDS_PER_INCH
    private static final int TARGET_SEEK_SCROLL_DISTANCE_PX
    public static final int SNAP_TO_START
    public static final int SNAP_TO_END
    public static final int SNAP_TO_ANY
    private static final float TARGET_SEEK_EXTRA_SCROLL_RATIO
com.rollbar.android.provider.NotifierProvider
com.guilhermedaros.museunfc.R$attr
androidx.core.text.util.LinkifyCompat$1
androidx.core.net.UriCompat
com.google.android.material.R$layout:
    private void <init>()
org.slf4j.spi.LocationAwareLogger
androidx.core.util.Pools
androidx.annotation.MenuRes
com.google.android.material.appbar.AppBarLayout$LayoutParams:
    public void <init>(int,int,float)
    public void <init>(com.google.android.material.appbar.AppBarLayout$LayoutParams)
    public void setScrollFlags(int)
    public void setScrollInterpolator(android.view.animation.Interpolator)
    public static final int SCROLL_FLAG_NO_SCROLL
    public static final int SCROLL_FLAG_SCROLL
    public static final int SCROLL_FLAG_EXIT_UNTIL_COLLAPSED
    public static final int SCROLL_FLAG_ENTER_ALWAYS
    public static final int SCROLL_FLAG_ENTER_ALWAYS_COLLAPSED
    public static final int SCROLL_FLAG_SNAP
    public static final int SCROLL_FLAG_SNAP_MARGINS
    static final int FLAG_QUICK_RETURN
    static final int FLAG_SNAP
    static final int COLLAPSIBLE_FLAGS
javax.annotation.concurrent.Immutable
com.google.android.material.dialog.MaterialAlertDialogBuilder
androidx.constraintlayout.solver.widgets.ResolutionAnchor:
    public void remove(androidx.constraintlayout.solver.widgets.ResolutionDimension)
    public static final int UNCONNECTED
    public static final int DIRECT_CONNECTION
    public static final int CENTER_CONNECTION
    public static final int MATCH_CONNECTION
    public static final int CHAIN_CONNECTION
    public static final int BARRIER_CONNECTION
com.google.android.material.bottomsheet.BottomSheetDialog$4
io.realm.rx.CollectionChange
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$2
com.google.android.material.transformation.TransformationChildLayout:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
com.google.gson.internal.LinkedHashTreeMap$AvlIterator
androidx.lifecycle.ComputableLiveData
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable
androidx.recyclerview.widget.AsyncListUtil$ViewCallback
javax.annotation.RegEx$Checker
javax.annotation.Tainted
androidx.coordinatorlayout.R$drawable
com.google.android.material.shape.Shapeable:
    public abstract com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
androidx.recyclerview.widget.SimpleItemAnimator:
    public boolean getSupportsChangeAnimations()
    public void setSupportsChangeAnimations(boolean)
    private static final boolean DEBUG
    private static final java.lang.String TAG
io.realm.DynamicRealm$Callback
com.google.gson.FieldAttributes:
    public java.lang.Class getDeclaringClass()
    public java.lang.String getName()
    public java.lang.reflect.Type getDeclaredType()
    public java.lang.Class getDeclaredClass()
    public java.lang.annotation.Annotation getAnnotation(java.lang.Class)
    public java.util.Collection getAnnotations()
    public boolean hasModifier(int)
    java.lang.Object get(java.lang.Object)
    boolean isSynthetic()
androidx.core.app.JobIntentService$CommandProcessor
androidx.transition.Styleable$TransitionTarget
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior:
    public synthetic bridge void setInternalAutoHideListener(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener)
    public synthetic bridge boolean isAutoHideEnabled()
    public synthetic bridge void setAutoHideEnabled(boolean)
com.google.android.material.transition.FadeThroughProvider$1
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl
com.google.android.material.internal.NavigationMenuPresenter$ViewHolder
androidx.core.view.accessibility.AccessibilityNodeProviderCompat:
    public static final int HOST_VIEW_ID
androidx.annotation.AnimatorRes
androidx.versionedparcelable.ParcelField
com.google.android.material.transition.FadeModeEvaluators$3
com.google.android.material.floatingactionbutton.BorderDrawable$BorderState
androidx.transition.PatternPathMotion
io.realm.rx.RealmObservableFactory$5$1
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$HideStrategy
com.google.android.material.internal.ViewGroupOverlayImpl
com.google.android.material.transition.platform.TransitionUtils$2
androidx.appcompat.app.AlertDialog$Builder:
    public androidx.appcompat.app.AlertDialog$Builder setTitle(int)
    public androidx.appcompat.app.AlertDialog$Builder setMessage(int)
    public androidx.appcompat.app.AlertDialog$Builder setMessage(java.lang.CharSequence)
    public androidx.appcompat.app.AlertDialog$Builder setIcon(int)
    public androidx.appcompat.app.AlertDialog$Builder setIconAttribute(int)
    public androidx.appcompat.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setPositiveButtonIcon(android.graphics.drawable.Drawable)
    public androidx.appcompat.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setNegativeButtonIcon(android.graphics.drawable.Drawable)
    public androidx.appcompat.app.AlertDialog$Builder setNeutralButton(int,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setNeutralButtonIcon(android.graphics.drawable.Drawable)
    public androidx.appcompat.app.AlertDialog$Builder setCancelable(boolean)
    public androidx.appcompat.app.AlertDialog$Builder setOnCancelListener(android.content.DialogInterface$OnCancelListener)
    public androidx.appcompat.app.AlertDialog$Builder setOnDismissListener(android.content.DialogInterface$OnDismissListener)
    public androidx.appcompat.app.AlertDialog$Builder setItems(int,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setCursor(android.database.Cursor,android.content.DialogInterface$OnClickListener,java.lang.String)
    public androidx.appcompat.app.AlertDialog$Builder setMultiChoiceItems(int,boolean[],android.content.DialogInterface$OnMultiChoiceClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setMultiChoiceItems(java.lang.CharSequence[],boolean[],android.content.DialogInterface$OnMultiChoiceClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setMultiChoiceItems(android.database.Cursor,java.lang.String,java.lang.String,android.content.DialogInterface$OnMultiChoiceClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(int,int,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(android.database.Cursor,int,java.lang.String,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)
    public androidx.appcompat.app.AlertDialog$Builder setView(int)
    public androidx.appcompat.app.AlertDialog$Builder setView(android.view.View)
    public androidx.appcompat.app.AlertDialog$Builder setView(android.view.View,int,int,int,int)
    public androidx.appcompat.app.AlertDialog$Builder setInverseBackgroundForced(boolean)
    public androidx.appcompat.app.AlertDialog$Builder setRecycleOnMeasureEnabled(boolean)
    public androidx.appcompat.app.AlertDialog show()
androidx.core.provider.FontsContractCompat$FontRequestCallback
com.android.volley.toolbox.HttpClientStack$HttpPatch:
    public void <init>()
    public void <init>(java.net.URI)
    public static final java.lang.String METHOD_NAME
androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord
io.realm.rx.RealmObservableFactory$9$2
com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable$1
io.realm.rx.RealmObservableFactory$17
io.realm.exceptions.package-info
androidx.core.view.MenuItemCompat$OnActionExpandListener
androidx.constraintlayout.widget.ConstraintHelper:
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
com.google.android.material.bottomnavigation.BottomNavigationView$SavedState$1
androidx.loader.app.LoaderManagerImpl$LoaderObserver:
    void <init>(androidx.loader.content.Loader,androidx.loader.app.LoaderManager$LoaderCallbacks)
    public void onChanged(java.lang.Object)
    public java.lang.String toString()
    private final androidx.loader.content.Loader mLoader
    private final androidx.loader.app.LoaderManager$LoaderCallbacks mCallback
    private boolean mDeliveredData
androidx.coordinatorlayout.R$color
io.realm.RealmQuery$1
com.google.android.material.tabs.TabLayoutMediator$PagerAdapterObserver
com.guilhermedaros.museunfc.Models.ResponseUsuario:
    public com.guilhermedaros.museunfc.Entities.Usuario getData()
    public void setData(com.guilhermedaros.museunfc.Entities.Usuario)
com.rollbar.android.provider.ClientProvider
androidx.recyclerview.widget.RecyclerView$ItemAnimator$AdapterChanges
io.realm.internal.IdentitySet
androidx.viewpager2.widget.ViewPager2$PageAwareAccessibilityProvider$2
androidx.loader.content.Loader$OnLoadCanceledListener
com.jaredrummler.materialspinner.R$dimen:
    private void <init>()
androidx.core.graphics.TypefaceCompatBaseImpl:
    private static final java.lang.String TAG
    private static final int INVALID_KEY
androidx.core.view.ViewCompat$NestedScrollType
io.realm.internal.OsResults$10
com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback:
    public void <init>()
androidx.transition.FloatArrayEvaluator
javax.annotation.Nonnegative$Checker
com.google.android.material.transition.platform.FadeThroughProvider$1
javax.annotation.WillClose
com.google.android.material.floatingactionbutton.BaseMotionStrategy
androidx.loader.R$styleable
androidx.appcompat.app.AppCompatViewInflater:
    private static final java.lang.String LOG_TAG
androidx.recyclerview.widget.RecyclerView$ViewHolder:
    public final int getPosition()
    void stopIgnoring()
    static final int FLAG_BOUND
    static final int FLAG_UPDATE
    static final int FLAG_INVALID
    static final int FLAG_REMOVED
    static final int FLAG_NOT_RECYCLABLE
    static final int FLAG_RETURNED_FROM_SCRAP
    static final int FLAG_IGNORE
    static final int FLAG_TMP_DETACHED
    static final int FLAG_ADAPTER_POSITION_UNKNOWN
    static final int FLAG_ADAPTER_FULLUPDATE
    static final int FLAG_MOVED
    static final int FLAG_APPEARED_IN_PRE_LAYOUT
    static final int PENDING_ACCESSIBILITY_STATE_NOT_SET
    static final int FLAG_BOUNCED_FROM_HIDDEN_LIST
androidx.appcompat.widget.AppCompatEditText:
    public void <init>(android.content.Context)
androidx.core.view.NestedScrollingChild3
com.google.android.material.tabs.TabLayout$SlidingTabIndicator$1
androidx.transition.GhostViewPort
androidx.constraintlayout.solver.widgets.Optimizer:
    public void <init>()
    public static final int OPTIMIZATION_NONE
    public static final int OPTIMIZATION_DIRECT
    public static final int OPTIMIZATION_BARRIER
    public static final int OPTIMIZATION_CHAIN
    public static final int OPTIMIZATION_DIMENSIONS
    public static final int OPTIMIZATION_RATIO
    public static final int OPTIMIZATION_GROUPS
    public static final int OPTIMIZATION_STANDARD
    static final int FLAG_USE_OPTIMIZE
    static final int FLAG_CHAIN_DANGLING
    static final int FLAG_RECOMPUTE_BOUNDS
com.rollbar.notifier.wrapper.ThrowableWrapper
android.support.v4.os.ResultReceiver
androidx.core.app.JobIntentService$JobWorkEnqueuer
com.jaredrummler.materialspinner.R$drawable:
    private void <init>()
androidx.arch.core.R
androidx.transition.Slide$4
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory
com.android.volley.toolbox.ImageLoader$1
io.realm.FieldAttribute
androidx.lifecycle.LifecycleRegistry:
    public int getObserverCount()
com.caverock.androidsvg.SVGAndroidRenderer$PlainTextToPath
com.google.android.material.transition.platform.MaterialFade
androidx.appcompat.widget.ActionBarContextView:
    public boolean hideOverflowMenu()
    public boolean isOverflowMenuShowing()
    public synthetic bridge void dismissPopupMenus()
    public synthetic bridge boolean canShowOverflowMenu()
    public synthetic bridge boolean isOverflowReserved()
    public synthetic bridge boolean isOverflowMenuShowPending()
    public synthetic bridge void postShowOverflowMenu()
    public synthetic bridge void animateToVisibility(int)
    private static final java.lang.String TAG
androidx.fragment.app.FragmentHostCallback:
    public void <init>(android.content.Context,android.os.Handler,int)
    public void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int)
    public void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)
    public void onStartIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
    public void onRequestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int)
    public boolean onShouldShowRequestPermissionRationale(java.lang.String)
com.google.android.material.datepicker.DateValidatorPointBackward$1
com.google.gson.internal.LinkedHashTreeMap$KeySet
androidx.fragment.app.FragmentTransaction:
    public androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String)
    public androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment,java.lang.String)
    public androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction hide(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction show(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction setPrimaryNavigationFragment(androidx.fragment.app.Fragment)
    public boolean isEmpty()
    public androidx.fragment.app.FragmentTransaction setCustomAnimations(int,int)
    public androidx.fragment.app.FragmentTransaction setCustomAnimations(int,int,int,int)
    public androidx.fragment.app.FragmentTransaction addSharedElement(android.view.View,java.lang.String)
    public androidx.fragment.app.FragmentTransaction setTransition(int)
    public androidx.fragment.app.FragmentTransaction setTransitionStyle(int)
    public androidx.fragment.app.FragmentTransaction addToBackStack(java.lang.String)
    public boolean isAddToBackStackAllowed()
    public androidx.fragment.app.FragmentTransaction setBreadCrumbTitle(int)
    public androidx.fragment.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence)
    public androidx.fragment.app.FragmentTransaction setBreadCrumbShortTitle(int)
    public androidx.fragment.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence)
    public androidx.fragment.app.FragmentTransaction setReorderingAllowed(boolean)
    public androidx.fragment.app.FragmentTransaction setAllowOptimization(boolean)
    public androidx.fragment.app.FragmentTransaction runOnCommit(java.lang.Runnable)
    public abstract int commit()
    public abstract int commitAllowingStateLoss()
    public abstract void commitNow()
    static final int OP_NULL
    static final int OP_ADD
    static final int OP_REPLACE
    static final int OP_REMOVE
    static final int OP_HIDE
    static final int OP_SHOW
    static final int OP_DETACH
    static final int OP_ATTACH
    static final int OP_SET_PRIMARY_NAV
    static final int OP_UNSET_PRIMARY_NAV
    static final int OP_SET_MAX_LIFECYCLE
    public static final int TRANSIT_ENTER_MASK
    public static final int TRANSIT_EXIT_MASK
    public static final int TRANSIT_UNSET
    public static final int TRANSIT_NONE
    public static final int TRANSIT_FRAGMENT_OPEN
    public static final int TRANSIT_FRAGMENT_CLOSE
    public static final int TRANSIT_FRAGMENT_FADE
androidx.core.app.AppComponentFactory
com.google.gson.internal.bind.TreeTypeAdapter:
    public static com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken,java.lang.Object)
    public static com.google.gson.TypeAdapterFactory newFactoryWithMatchRawType(com.google.gson.reflect.TypeToken,java.lang.Object)
    public static com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,java.lang.Object)
androidx.core.app.NotificationCompatExtras
com.android.volley.RequestQueue$1
com.android.volley.toolbox.JsonObjectRequest:
    public void <init>(java.lang.String,org.json.JSONObject,com.android.volley.Response$Listener,com.android.volley.Response$ErrorListener)
androidx.core.R$attr:
    private void <init>()
androidx.appcompat.R$integer
com.google.android.material.button.MaterialButtonToggleGroup$PressedStateTracker
androidx.annotation.ColorRes
androidx.core.content.res.GrowingArrayUtils:
    public static long[] append(long[],int,long)
    public static boolean[] append(boolean[],int,boolean)
    public static java.lang.Object[] insert(java.lang.Object[],int,int,java.lang.Object)
    public static int[] insert(int[],int,int,int)
    public static long[] insert(long[],int,int,long)
    public static boolean[] insert(boolean[],int,int,boolean)
androidx.annotation.IdRes
androidx.appcompat.view.menu.MenuItemWrapperICS:
    static final java.lang.String LOG_TAG
androidx.drawerlayout.widget.DrawerLayout
com.rollbar.notifier.provider.notifier.NotifierProvider
androidx.appcompat.resources.R$dimen
com.google.android.material.datepicker.MaterialDatePicker$3
androidx.core.text.ICUCompat:
    private void <init>()
    private static final java.lang.String TAG
androidx.core.os.ParcelableCompatCreatorCallbacks
io.realm.rx.RealmObservableFactory$11$1
androidx.core.util.Pair:
    public void <init>(java.lang.Object,java.lang.Object)
    public static androidx.core.util.Pair create(java.lang.Object,java.lang.Object)
com.google.android.material.transition.MaterialContainerTransform$ProgressThresholdsGroup
io.realm.DefaultRealmModuleMediator:
    public void insert(io.realm.Realm,io.realm.RealmModel,java.util.Map)
    public void insert(io.realm.Realm,java.util.Collection)
    public void insertOrUpdate(io.realm.Realm,io.realm.RealmModel,java.util.Map)
    public void insertOrUpdate(io.realm.Realm,java.util.Collection)
    public io.realm.RealmModel createOrUpdateUsingJsonObject(java.lang.Class,io.realm.Realm,org.json.JSONObject,boolean)
    public io.realm.RealmModel createUsingJsonStream(java.lang.Class,io.realm.Realm,android.util.JsonReader)
    public io.realm.RealmModel createDetachedCopy(io.realm.RealmModel,int,java.util.Map)
androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor
androidx.coordinatorlayout.R$id
javax.annotation.Untainted
androidx.collection.CircularIntArray
javax.annotation.concurrent.ThreadSafe
com.rollbar.notifier.config.ConfigBuilder
androidx.core.app.NotificationCompat$BubbleMetadata
com.google.android.material.transition.platform.MaterialVisibility
com.android.volley.toolbox.RequestFuture
androidx.versionedparcelable.VersionedParcelStream$1
androidx.loader.content.AsyncTaskLoader$LoadTask
androidx.core.os.LocaleListCompatWrapper
androidx.core.content.pm.ShortcutInfoCompat$Builder
androidx.appcompat.R$dimen:
    private void <init>()
androidx.fragment.app.FragmentManager:
    public static void enableDebugLogging(boolean)
    public androidx.fragment.app.FragmentTransaction openTransaction()
    public abstract boolean executePendingTransactions()
    public abstract androidx.fragment.app.Fragment findFragmentById(int)
    public abstract void popBackStack()
    public abstract void popBackStack(java.lang.String,int)
    public abstract boolean popBackStackImmediate(java.lang.String,int)
    public abstract void popBackStack(int,int)
    public abstract boolean popBackStackImmediate(int,int)
    public abstract int getBackStackEntryCount()
    public abstract androidx.fragment.app.FragmentManager$BackStackEntry getBackStackEntryAt(int)
    public abstract void addOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener)
    public abstract void removeOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener)
    public abstract void putFragment(android.os.Bundle,java.lang.String,androidx.fragment.app.Fragment)
    public abstract androidx.fragment.app.Fragment getFragment(android.os.Bundle,java.lang.String)
    public abstract androidx.fragment.app.Fragment$SavedState saveFragmentInstanceState(androidx.fragment.app.Fragment)
    public abstract boolean isDestroyed()
    public abstract void registerFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean)
    public abstract void unregisterFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks)
    public abstract androidx.fragment.app.Fragment getPrimaryNavigationFragment()
    public abstract boolean isStateSaved()
    public static final int POP_BACK_STACK_INCLUSIVE
androidx.core.widget.ListPopupWindowCompat
androidx.core.app.AlarmManagerCompat
androidx.lifecycle.ComputableLiveData$3
androidx.core.graphics.drawable.RoundedBitmapDrawable21
com.google.android.material.navigation.NavigationView
com.google.android.material.transition.TransitionUtils$CanvasOperation
androidx.core.util.Predicate
androidx.transition.GhostViewPlatform
com.google.android.material.transition.platform.MaterialSharedAxis$Axis
io.realm.com_guilhermedaros_museunfc_Entities_UsuarioRealmProxy$ClassNameHelper
com.caverock.androidsvg.SVG$SvgLinearGradient
androidx.fragment.app.FragmentTransition:
    static boolean supportsTransition()
    private void <init>()
com.google.android.material.internal.ViewOverlayApi18
com.google.android.material.bottomappbar.BottomAppBar$1
com.google.android.material.appbar.CollapsingToolbarLayout$LayoutParams
androidx.core.os.ParcelableCompat
com.guilhermedaros.museunfc.R$layout
com.google.android.material.textfield.ClearTextEndIconDelegate:
    private static final int ANIMATION_FADE_DURATION
    private static final int ANIMATION_SCALE_DURATION
    private static final float ANIMATION_SCALE_FROM_VALUE
androidx.appcompat.widget.AppCompatSeekBar:
    public void <init>(android.content.Context)
androidx.loader.R$attr
com.google.android.material.internal.TextScale$1
androidx.core.os.BuildCompat
io.realm.io_realm_sync_permissions_PermissionUserRealmProxy$ClassNameHelper
androidx.appcompat.widget.ShareActionProvider$ShareActivityChooserModelPolicy
com.google.android.material.snackbar.BaseTransientBottomBar$BaseCallback$DismissEvent
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback:
    public void <init>()
    public void onShown(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
    public void onHidden(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
    public void onExtended(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
    public void onShrunken(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
com.google.android.material.datepicker.CalendarConstraints:
    static synthetic com.google.android.material.datepicker.Month access$100(com.google.android.material.datepicker.CalendarConstraints)
    static synthetic com.google.android.material.datepicker.Month access$200(com.google.android.material.datepicker.CalendarConstraints)
    static synthetic com.google.android.material.datepicker.Month access$300(com.google.android.material.datepicker.CalendarConstraints)
    static synthetic com.google.android.material.datepicker.CalendarConstraints$DateValidator access$400(com.google.android.material.datepicker.CalendarConstraints)
    boolean isWithinBounds(long)
com.google.android.material.bottomnavigation.BottomNavigationView$2
com.google.android.material.transition.MaskEvaluator
io.realm.internal.objectstore.OsObjectBuilder$3:
    public void handleItem(long,java.lang.Byte)
    public synthetic bridge void handleItem(long,java.lang.Object)
androidx.core.app.ActivityCompat$OnRequestPermissionsResultCallback
androidx.viewpager.R
com.google.android.material.transition.MaterialArcMotion
com.google.android.material.bottomnavigation.BottomNavigationMenuView
androidx.fragment.app.Fragment$SavedState$1
com.google.android.material.R$xml
androidx.customview.R$string
androidx.appcompat.app.ActionBarDrawerToggleHoneycomb
androidx.recyclerview.widget.DiffUtil$PostponedUpdate
io.realm.RealmCache:
    static io.realm.RealmAsyncTask createRealmOrGetFromCacheAsync(io.realm.RealmConfiguration,io.realm.BaseRealm$InstanceCallback,java.lang.Class)
    private synchronized io.realm.RealmAsyncTask doCreateRealmOrGetFromCacheAsync(io.realm.RealmConfiguration,io.realm.BaseRealm$InstanceCallback,java.lang.Class)
    static io.realm.BaseRealm createRealmOrGetFromCache(io.realm.RealmConfiguration,java.lang.Class,io.realm.internal.OsSharedRealm$VersionID)
    static int getLocalThreadCount(io.realm.RealmConfiguration)
    synchronized void invokeWithLock(io.realm.RealmCache$Callback0)
    private static final java.lang.String ASYNC_NOT_ALLOWED_MSG
    private static final java.lang.String ASYNC_CALLBACK_NULL_MSG
    private static final java.lang.String DIFFERENT_KEY_MESSAGE
    private static final java.lang.String WRONG_REALM_CLASS_MESSAGE
com.google.android.material.snackbar.BaseTransientBottomBar$14
com.google.android.material.circularreveal.coordinatorlayout.CircularRevealCoordinatorLayout
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior:
    private void setBaseTransientBottomBar(com.google.android.material.snackbar.BaseTransientBottomBar)
    static synthetic void access$1000(com.google.android.material.snackbar.BaseTransientBottomBar$Behavior,com.google.android.material.snackbar.BaseTransientBottomBar)
androidx.constraintlayout.solver.SolverVariable:
    private static java.lang.String getUniqueName(androidx.constraintlayout.solver.SolverVariable$Type,java.lang.String)
    public void <init>(java.lang.String,androidx.constraintlayout.solver.SolverVariable$Type)
    void clearStrengths()
    java.lang.String strengthsToString()
    public java.lang.String getName()
    public void setName(java.lang.String)
    private static final boolean INTERNAL_DEBUG
    public static final int STRENGTH_NONE
    public static final int STRENGTH_LOW
    public static final int STRENGTH_MEDIUM
    public static final int STRENGTH_HIGH
    public static final int STRENGTH_HIGHEST
    public static final int STRENGTH_EQUALITY
    public static final int STRENGTH_FIXED
    public static final int STRENGTH_BARRIER
    static final int MAX_STRENGTH
androidx.constraintlayout.widget.Constraints$LayoutParams:
    public void <init>(androidx.constraintlayout.widget.Constraints$LayoutParams)
io.realm.rx.RxObservableFactory:
    public abstract io.reactivex.Flowable from(io.realm.Realm)
    public abstract io.reactivex.Flowable from(io.realm.DynamicRealm)
    public abstract io.reactivex.Flowable from(io.realm.Realm,io.realm.RealmResults)
    public abstract io.reactivex.Observable changesetsFrom(io.realm.Realm,io.realm.RealmResults)
    public abstract io.reactivex.Flowable from(io.realm.DynamicRealm,io.realm.RealmResults)
    public abstract io.reactivex.Observable changesetsFrom(io.realm.DynamicRealm,io.realm.RealmResults)
    public abstract io.reactivex.Flowable from(io.realm.Realm,io.realm.RealmList)
    public abstract io.reactivex.Observable changesetsFrom(io.realm.Realm,io.realm.RealmList)
    public abstract io.reactivex.Flowable from(io.realm.DynamicRealm,io.realm.RealmList)
    public abstract io.reactivex.Observable changesetsFrom(io.realm.DynamicRealm,io.realm.RealmList)
    public abstract io.reactivex.Flowable from(io.realm.Realm,io.realm.RealmModel)
    public abstract io.reactivex.Observable changesetsFrom(io.realm.Realm,io.realm.RealmModel)
    public abstract io.reactivex.Flowable from(io.realm.DynamicRealm,io.realm.DynamicRealmObject)
    public abstract io.reactivex.Observable changesetsFrom(io.realm.DynamicRealm,io.realm.DynamicRealmObject)
    public abstract io.reactivex.Single from(io.realm.Realm,io.realm.RealmQuery)
    public abstract io.reactivex.Single from(io.realm.DynamicRealm,io.realm.RealmQuery)
androidx.drawerlayout.R$dimen
com.google.android.material.appbar.CollapsingToolbarLayout
androidx.recyclerview.widget.OrientationHelper:
    public androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
    public abstract void offsetChild(android.view.View,int)
    private static final int INVALID_SIZE
    public static final int HORIZONTAL
    public static final int VERTICAL
com.android.volley.ExecutorDelivery:
    public void <init>(java.util.concurrent.Executor)
com.google.android.material.tooltip.TooltipDrawable
com.google.android.material.transition.FadeModeResult
com.rollbar.android.Rollbar
com.google.android.material.tabs.TabLayoutMediator$TabLayoutOnPageChangeCallback
io.realm.rx.RealmObservableFactory$13$1
androidx.recyclerview.widget.ItemTouchHelper$SimpleCallback
io.realm.io_realm_sync_SubscriptionRealmProxy$ClassNameHelper
androidx.appcompat.widget.PopupMenu$OnMenuItemClickListener
io.realm.internal.util.Pair:
    public static io.realm.internal.util.Pair create(java.lang.Object,java.lang.Object)
com.google.android.material.floatingactionbutton.BorderDrawable:
    void <init>(com.google.android.material.shape.ShapeAppearanceModel)
    private android.graphics.Shader createGradientShader()
    public void setBorderWidth(float)
    public void setColorFilter(android.graphics.ColorFilter)
    void setGradientColors(int,int,int,int)
    public void draw(android.graphics.Canvas)
    public void getOutline(android.graphics.Outline)
    public boolean getPadding(android.graphics.Rect)
    protected android.graphics.RectF getBoundsAsRectF()
    public com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
    public void setAlpha(int)
    public int getOpacity()
    protected void onBoundsChange(android.graphics.Rect)
    public boolean isStateful()
    protected boolean onStateChange(int[])
    public android.graphics.drawable.Drawable$ConstantState getConstantState()
    private final com.google.android.material.shape.ShapeAppearancePathProvider pathProvider
    private final android.graphics.Paint paint
    private final android.graphics.Path shapePath
    private final android.graphics.Rect rect
    private final android.graphics.RectF rectF
    private final android.graphics.RectF boundsRectF
    private final com.google.android.material.floatingactionbutton.BorderDrawable$BorderState state
    float borderWidth
    private int topOuterStrokeColor
    private int topInnerStrokeColor
    private int bottomOuterStrokeColor
    private int bottomInnerStrokeColor
    private int currentBorderTintColor
    private boolean invalidateShader
    private com.google.android.material.shape.ShapeAppearanceModel shapeAppearanceModel
    private android.content.res.ColorStateList borderTint
    private static final float DRAW_STROKE_WIDTH_MULTIPLE
com.google.android.material.transition.MaterialContainerTransform$TransitionDrawable
androidx.drawerlayout.widget.DrawerLayout$SavedState
com.caverock.androidsvg.CSSParser$AttribOp
androidx.core.math.MathUtils:
    private void <init>()
    public static double clamp(double,double,double)
    public static long clamp(long,long,long)
androidx.core.os.TraceCompat:
    public static boolean isEnabled()
    public static void beginAsyncSection(java.lang.String,int)
    public static void endAsyncSection(java.lang.String,int)
    public static void setCounter(java.lang.String,int)
    private void <init>()
    private static final java.lang.String TAG
androidx.viewpager2.R$integer
com.android.volley.toolbox.ClearCacheRequest
androidx.core.app.ActivityCompat:
    protected void <init>()
    public static void setPermissionCompatDelegate(androidx.core.app.ActivityCompat$PermissionCompatDelegate)
    public static boolean invalidateOptionsMenu(android.app.Activity)
    public static void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)
    public static void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
    public static void finishAfterTransition(android.app.Activity)
    public static android.net.Uri getReferrer(android.app.Activity)
    public static android.view.View requireViewById(android.app.Activity,int)
    public static void setEnterSharedElementCallback(android.app.Activity,androidx.core.app.SharedElementCallback)
    public static void setExitSharedElementCallback(android.app.Activity,androidx.core.app.SharedElementCallback)
    public static void postponeEnterTransition(android.app.Activity)
    public static void startPostponedEnterTransition(android.app.Activity)
    public static void requestPermissions(android.app.Activity,java.lang.String[],int)
    public static boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
    public static androidx.core.view.DragAndDropPermissionsCompat requestDragAndDropPermissions(android.app.Activity,android.view.DragEvent)
com.guilhermedaros.museunfc.R$string
androidx.viewpager.widget.PagerTitleStrip$SingleLineAllCapsTransform
androidx.appcompat.app.AlertController$AlertParams:
    public boolean mForceInverseBackground
com.google.android.material.bottomnavigation.BottomNavigationPresenter$SavedState
androidx.recyclerview.widget.StaggeredGridLayoutManager:
    public void <init>(int,int)
    public int getGapStrategy()
    public void setGapStrategy(int)
    public int getSpanCount()
    public boolean getReverseLayout()
    public int[] findFirstVisibleItemPositions(int[])
    public int[] findFirstCompletelyVisibleItemPositions(int[])
    public int[] findLastVisibleItemPositions(int[])
    public int[] findLastCompletelyVisibleItemPositions(int[])
    public void scrollToPositionWithOffset(int,int)
    public int getOrientation()
    private static final java.lang.String TAG
    static final boolean DEBUG
    public static final int HORIZONTAL
    public static final int VERTICAL
    public static final int GAP_HANDLING_NONE
    public static final int GAP_HANDLING_LAZY
    public static final int GAP_HANDLING_MOVE_ITEMS_BETWEEN_SPANS
    static final int INVALID_OFFSET
    private static final float MAX_SCROLL_FACTOR
androidx.core.widget.ContentLoadingProgressBar$1
androidx.appcompat.widget.ActivityChooserModel
androidx.core.util.ObjectsCompat:
    private void <init>()
    public static int hashCode(java.lang.Object)
android.support.v4.os.ResultReceiver$1
androidx.annotation.WorkerThread
com.google.android.material.shape.ShapeAppearanceModel$Builder:
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setAllCorners(int,float)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setAllCorners(com.google.android.material.shape.CornerTreatment)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setAllCornerSizes(com.google.android.material.shape.CornerSize)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCorner(int,float)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCorner(int,float)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCorner(int,float)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCorner(int,float)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setAllEdges(com.google.android.material.shape.EdgeTreatment)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setLeftEdge(com.google.android.material.shape.EdgeTreatment)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setTopEdge(com.google.android.material.shape.EdgeTreatment)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setRightEdge(com.google.android.material.shape.EdgeTreatment)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomEdge(com.google.android.material.shape.EdgeTreatment)
com.google.android.material.snackbar.Snackbar$1
com.google.android.material.bottomappbar.BottomAppBar$FabAnimationMode
androidx.coordinatorlayout.R$integer
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory
androidx.fragment.app.FragmentTabHost$SavedState$1
io.realm.RealmFieldTypeConstants
androidx.appcompat.widget.AppCompatCheckBox:
    public void <init>(android.content.Context)
com.google.android.material.datepicker.DateValidatorPointForward$1
io.realm.internal.objectstore.OsObjectBuilder:
    private void addListItem(long,long,java.util.List,io.realm.internal.objectstore.OsObjectBuilder$ItemCallback)
    private void addEmptyList(long)
    private static native void nativeAddFloat(long,long,float)
    private static native void nativeAddDouble(long,long,double)
    private static native void nativeAddByteArray(long,long,byte[])
    private static native void nativeAddDate(long,long,long)
    private static native void nativeAddObject(long,long,long)
    private static native long nativeStartList(long)
    private static native void nativeStopList(long,long,long)
    private static native void nativeAddNullListItem(long)
    private static native void nativeAddIntegerListItem(long,long)
    private static native void nativeAddStringListItem(long,java.lang.String)
    private static native void nativeAddFloatListItem(long,float)
    private static native void nativeAddDoubleListItem(long,double)
    private static native void nativeAddBooleanListItem(long,boolean)
    private static native void nativeAddByteArrayListItem(long,byte[])
    private static native void nativeAddDateListItem(long,long)
    private static native void nativeAddObjectListItem(long,long)
    private static native void nativeAddObjectList(long,long,long[])
    static synthetic void access$000(long,long)
    static synthetic void access$100(long,java.lang.String)
    static synthetic void access$200(long,boolean)
    static synthetic void access$300(long,float)
    static synthetic void access$400(long,double)
    static synthetic void access$500(long,long)
    static synthetic void access$600(long,byte[])
    static synthetic void access$700(long)
    public void addInteger(long,java.lang.Byte)
    public void addInteger(long,java.lang.Short)
    public void addInteger(long,java.lang.Long)
    public void addMutableRealmInteger(long,io.realm.MutableRealmInteger)
    public void addFloat(long,java.lang.Float)
    public void addDouble(long,java.lang.Double)
    public void addDate(long,java.util.Date)
    public void addByteArray(long,byte[])
    public void addNull(long)
    public void addObject(long,io.realm.RealmModel)
    public void addObjectList(long,io.realm.RealmList)
    public void addStringList(long,io.realm.RealmList)
    public void addByteList(long,io.realm.RealmList)
    public void addShortList(long,io.realm.RealmList)
    public void addIntegerList(long,io.realm.RealmList)
    public void addLongList(long,io.realm.RealmList)
    public void addBooleanList(long,io.realm.RealmList)
    public void addFloatList(long,io.realm.RealmList)
    public void addDoubleList(long,io.realm.RealmList)
    public void addDateList(long,io.realm.RealmList)
    public void addByteArrayList(long,io.realm.RealmList)
    public void addMutableRealmIntegerList(long,io.realm.RealmList)
    public long getNativePtr()
io.realm.internal.annotations.ObjectServer
com.caverock.androidsvg.SVG$Style$TextAnchor
androidx.recyclerview.widget.RecyclerView$State:
    public boolean isMeasuring()
    public boolean willRunSimpleAnimations()
    public void remove(int)
    public java.lang.Object get(int)
    public void put(int,java.lang.Object)
    public boolean didStructureChange()
    public int getRemainingScrollHorizontal()
    public int getRemainingScrollVertical()
    static final int STEP_START
    static final int STEP_LAYOUT
    static final int STEP_ANIMATIONS
androidx.core.app.ServiceCompat$StopForegroundFlags
androidx.loader.R$style
androidx.viewpager2.widget.ViewPager2$SavedState
com.google.android.material.card.MaterialCardView:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public void setContentPadding(int,int,int,int)
    void setAncestorContentPadding(int,int,int,int)
    private static final java.lang.String LOG_TAG
    private static final java.lang.String ACCESSIBILITY_CLASS_NAME
androidx.core.net.ConnectivityManagerCompat
com.rollbar.Rollbar$5
com.google.gson.JsonDeserializationContext:
    public abstract java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type)
androidx.customview.R$styleable
com.google.android.material.tabs.TabLayout$LabelVisibility
androidx.cardview.R
androidx.transition.TransitionManager:
    public void <init>()
    private androidx.transition.Transition getTransition(androidx.transition.Scene)
    private static void changeScene(androidx.transition.Scene,androidx.transition.Transition)
    public static void go(androidx.transition.Scene)
    public static void go(androidx.transition.Scene,androidx.transition.Transition)
    public static void beginDelayedTransition(android.view.ViewGroup)
    public static void endTransitions(android.view.ViewGroup)
    public void setTransition(androidx.transition.Scene,androidx.transition.Transition)
    public void setTransition(androidx.transition.Scene,androidx.transition.Scene,androidx.transition.Transition)
    public void transitionTo(androidx.transition.Scene)
    private androidx.collection.ArrayMap mSceneTransitions
    private androidx.collection.ArrayMap mScenePairTransitions
    private static final java.lang.String LOG_TAG
com.google.gson.internal.bind.JsonTreeWriter:
    public com.google.gson.stream.JsonWriter value(double)
androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem
io.realm.rx.RealmObservableFactory$6
androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub
androidx.activity.R$integer
javax.annotation.meta.Exclusive
com.google.android.material.appbar.AppBarLayout$BaseBehavior:
    public void setDragCallback(com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback)
    boolean isOffsetAnimatorRunning()
    private static final int MAX_OFFSET_ANIMATION_DURATION
    private static final int INVALID_POSITION
androidx.appcompat.view.menu.MenuPresenter:
    public abstract androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
    public abstract int getId()
    public abstract android.os.Parcelable onSaveInstanceState()
    public abstract void onRestoreInstanceState(android.os.Parcelable)
androidx.drawerlayout.R$integer
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver:
    public void onItemRangeChanged(int,int)
    public void onItemRangeChanged(int,int,java.lang.Object)
    public void onItemRangeInserted(int,int)
    public void onItemRangeRemoved(int,int)
    public void onItemRangeMoved(int,int,int)
androidx.core.content.SharedPreferencesCompat
com.google.android.material.bottomsheet.BottomSheetDialogFragment
androidx.appcompat.widget.LinearLayoutCompat$OrientationMode
androidx.transition.CanvasUtils
com.google.android.material.internal.NavigationMenuPresenter$NormalViewHolder
androidx.drawerlayout.widget.DrawerLayout$SavedState$1
androidx.cardview.widget.CardView:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    static synthetic void access$001(androidx.cardview.widget.CardView,int,int,int,int)
    static synthetic void access$101(androidx.cardview.widget.CardView,int)
    static synthetic void access$201(androidx.cardview.widget.CardView,int)
    public void setContentPadding(int,int,int,int)
    final android.graphics.Rect mShadowBounds
androidx.transition.Slide$CalculateSlideVertical
androidx.core.hardware.fingerprint.FingerprintManagerCompat
com.caverock.androidsvg.SVGAndroidRenderer
androidx.lifecycle.livedata.R
com.jaredrummler.materialspinner.R
androidx.viewpager.widget.PagerTabStrip$2
androidx.transition.ViewUtilsApi29:
    public void setAnimationMatrix(android.view.View,android.graphics.Matrix)
androidx.appcompat.widget.ActionMenuPresenter:
    public void setWidthLimit(int,boolean)
    public void setItemLimit(int)
    public boolean isOverflowReserved()
    public android.os.Parcelable onSaveInstanceState()
    public void onRestoreInstanceState(android.os.Parcelable)
    public void onSubUiVisibilityChanged(boolean)
    private static final java.lang.String TAG
androidx.viewpager2.widget.AnimateLayoutChangeDetector
androidx.constraintlayout.solver.Metrics:
    public void <init>()
    public java.lang.String toString()
    public void reset()
    public long variables
    public long oldresolvedWidgets
    public java.util.ArrayList problematicLayouts
io.reactivex.android.plugins.RxAndroidPlugins
androidx.fragment.app.BackStackRecord:
    public int getId()
    public int getBreadCrumbTitleRes()
    public int getBreadCrumbShortTitleRes()
    public java.lang.CharSequence getBreadCrumbTitle()
    public java.lang.CharSequence getBreadCrumbShortTitle()
    public androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction hide(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction show(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction setPrimaryNavigationFragment(androidx.fragment.app.Fragment)
    public int commit()
    public int commitAllowingStateLoss()
    public void commitNow()
    int commitInternal(boolean)
    public boolean isEmpty()
    static final java.lang.String TAG
com.android.volley.toolbox.JsonRequest:
    public void <init>(java.lang.String,java.lang.String,com.android.volley.Response$Listener,com.android.volley.Response$ErrorListener)
    public void cancel()
    protected abstract com.android.volley.Response parseNetworkResponse(com.android.volley.NetworkResponse)
    protected static final java.lang.String PROTOCOL_CHARSET
io.realm.internal.android.AndroidCapabilities:
    public boolean isMainThread()
com.google.android.material.internal.NavigationSubMenu
com.google.android.material.datepicker.DateValidatorPointBackward
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo:
    public int changeFlags
io.realm.rx.RealmObservableFactory$6$2
com.jaredrummler.materialspinner.Utils:
    void <init>()
androidx.versionedparcelable.VersionedParcel$ParcelException
com.google.android.material.internal.CheckableImageButton:
    public void <init>(android.content.Context)
    public boolean isPressable()
com.google.android.material.transition.platform.FadeProvider
io.realm.io_realm_sync_permissions_PermissionUserRealmProxy$PermissionUserColumnInfo:
    void <init>(io.realm.internal.OsSchemaInfo)
    void <init>(io.realm.internal.ColumnInfo,boolean)
    protected final io.realm.internal.ColumnInfo copy(boolean)
com.getkeepsafe.relinker.R
com.google.android.material.textfield.DropdownMenuEndIconDelegate:
    private static final int ANIMATION_FADE_OUT_DURATION
    private static final int ANIMATION_FADE_IN_DURATION
org.slf4j.event.Level:
    public int toInt()
androidx.core.app.ActivityCompat$1
com.google.android.material.R$id:
    private void <init>()
io.realm.internal.OsResults$8
com.android.volley.toolbox.NoCache
io.realm.internal.PendingRow:
    public void <init>(io.realm.internal.OsSharedRealm,io.realm.internal.TableQuery,io.realm.internal.core.DescriptorOrdering,boolean)
    static synthetic void access$000(io.realm.internal.PendingRow)
    public void setFrontEnd(io.realm.internal.PendingRow$FrontEnd)
    public long getColumnCount()
    public long getLink(long)
    public void setLong(long,long)
    public void setBoolean(long,boolean)
    public void setFloat(long,float)
    public void setDouble(long,double)
    public void setDate(long,java.util.Date)
    public void setString(long,java.lang.String)
    public void setBinaryByteArray(long,byte[])
    public void setLink(long,long)
    public void nullifyLink(long)
    public void setNull(long)
    public void checkIfAttached()
    public boolean hasColumn(java.lang.String)
    public io.realm.internal.Row freeze(io.realm.internal.OsSharedRealm)
    public boolean isLoaded()
    private static final java.lang.String QUERY_NOT_RETURNED_MESSAGE
    private static final java.lang.String PROXY_NOT_SET_MESSAGE
    private static final java.lang.String QUERY_EXECUTED_MESSAGE
androidx.appcompat.app.ActionBar$NavigationMode
androidx.appcompat.widget.AbsActionBarView$1
androidx.appcompat.view.menu.MenuPopupHelper:
    public void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)
    public void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View)
    public int getGravity()
    public void show(int,int)
    public android.widget.ListView getListView()
    private static final int TOUCH_EPICENTER_SIZE_DP
com.google.android.material.shape.ShapeAppearancePathProvider:
    void setEdgeIntersectionCheckEnable(boolean)
androidx.viewpager2.widget.FakeDrag
com.google.android.material.internal.ViewUtils:
    private void <init>()
    public static void requestFocusAndShowKeyboard(android.view.View)
    public static void doOnApplyWindowInsets(android.view.View,android.util.AttributeSet,int,int)
    public static void doOnApplyWindowInsets(android.view.View,android.util.AttributeSet,int,int,com.google.android.material.internal.ViewUtils$OnApplyWindowInsetsListener)
    public static com.google.android.material.internal.ViewOverlayImpl getOverlay(android.view.View)
    public static android.view.ViewGroup getContentView(android.view.View)
    public static com.google.android.material.internal.ViewOverlayImpl getContentViewOverlay(android.view.View)
androidx.appcompat.widget.TooltipCompat:
    private void <init>()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    private boolean isOrWillBeShown()
    private boolean isOrWillBeHidden()
    static synthetic boolean access$502(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,boolean)
    static synthetic boolean access$500(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
    static synthetic int access$602(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,int)
    static synthetic boolean access$700(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
    static synthetic boolean access$800(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
    public final boolean isExtended()
    public void addOnShowAnimationListener(android.animation.Animator$AnimatorListener)
    public void removeOnShowAnimationListener(android.animation.Animator$AnimatorListener)
    public void addOnHideAnimationListener(android.animation.Animator$AnimatorListener)
    public void removeOnHideAnimationListener(android.animation.Animator$AnimatorListener)
    public void addOnShrinkAnimationListener(android.animation.Animator$AnimatorListener)
    public void removeOnShrinkAnimationListener(android.animation.Animator$AnimatorListener)
    public void addOnExtendAnimationListener(android.animation.Animator$AnimatorListener)
    public void removeOnExtendAnimationListener(android.animation.Animator$AnimatorListener)
    public void hide()
    public void hide(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback)
    public void show()
    public void show(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback)
    public void extend()
    public void extend(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback)
    public void shrink()
    public void shrink(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback)
    private int animState
    private final com.google.android.material.floatingactionbutton.AnimatorTracker changeVisibilityTracker
    private static final int ANIM_STATE_NONE
    private static final int ANIM_STATE_HIDING
    private static final int ANIM_STATE_SHOWING
io.realm.rx.RealmObservableFactory$10$2
com.google.android.material.transition.FadeModeEvaluators$4
androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener
androidx.core.view.MenuCompat
com.google.gson.JsonParseException:
    static final long serialVersionUID
io.realm.internal.ColumnInfo$1
androidx.appcompat.widget.ResourceManagerInternal:
    private void removeDelegate(java.lang.String,androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate)
    private static boolean arrayContains(int[],int)
    private static final java.lang.String TAG
    private static final boolean DEBUG
    private static final java.lang.String SKIP_DRAWABLE_TAG
    private static final java.lang.String PLATFORM_VD_CLAZZ
androidx.recyclerview.widget.ViewBoundsCheck$ViewBounds
androidx.appcompat.widget.ActivityChooserView$3
androidx.lifecycle.Transformations
androidx.customview.R$integer
io.realm.internal.TestUtil
com.google.gson.internal.bind.TypeAdapters$31
androidx.recyclerview.widget.MessageThreadUtil
javax.annotation.meta.TypeQualifierDefault
com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable$2
androidx.cardview.R$dimen
io.realm.com_guilhermedaros_museunfc_Entities_ItemMuseuRealmProxy:
    public static java.lang.String getSimpleClassName()
    public static com.guilhermedaros.museunfc.Entities.ItemMuseu createOrUpdateUsingJsonObject(io.realm.Realm,org.json.JSONObject,boolean)
    public static com.guilhermedaros.museunfc.Entities.ItemMuseu createUsingJsonStream(io.realm.Realm,android.util.JsonReader)
    public static long insert(io.realm.Realm,com.guilhermedaros.museunfc.Entities.ItemMuseu,java.util.Map)
    public static void insert(io.realm.Realm,java.util.Iterator,java.util.Map)
    public static long insertOrUpdate(io.realm.Realm,com.guilhermedaros.museunfc.Entities.ItemMuseu,java.util.Map)
    public static void insertOrUpdate(io.realm.Realm,java.util.Iterator,java.util.Map)
    public static com.guilhermedaros.museunfc.Entities.ItemMuseu createDetachedCopy(com.guilhermedaros.museunfc.Entities.ItemMuseu,int,int,java.util.Map)
    public void realmSet$id(int)
    public void realmSet$nome(java.lang.String)
    public void realmSet$ordem(java.lang.String)
    public void realmSet$familia(java.lang.String)
    public void realmSet$descricao(java.lang.String)
    public void realmSet$distribuicaoGeografica(java.lang.String)
    public void realmSet$habitat(java.lang.String)
    public void realmSet$habitosAlimentares(java.lang.String)
    public void realmSet$reproducao(java.lang.String)
    public void realmSet$periodoDeVida(java.lang.String)
    public void realmSet$ativo(boolean)
androidx.core.app.TaskStackBuilder:
    public static androidx.core.app.TaskStackBuilder from(android.content.Context)
    public androidx.core.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent)
    public androidx.core.app.TaskStackBuilder addParentStack(java.lang.Class)
    public int getIntentCount()
    public android.content.Intent getIntent(int)
    public android.content.Intent editIntentAt(int)
    public android.app.PendingIntent getPendingIntent(int,int)
    public android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle)
    public android.content.Intent[] getIntents()
    private static final java.lang.String TAG
com.jaredrummler.materialspinner.R$id:
    private void <init>()
com.android.volley.Request$Method
androidx.recyclerview.widget.ViewBoundsCheck:
    static final int GT
    static final int EQ
    static final int LT
    static final int CVS_PVS_POS
    static final int FLAG_CVS_GT_PVS
    static final int FLAG_CVS_EQ_PVS
    static final int FLAG_CVS_LT_PVS
    static final int CVS_PVE_POS
    static final int FLAG_CVS_GT_PVE
    static final int FLAG_CVS_EQ_PVE
    static final int FLAG_CVS_LT_PVE
    static final int CVE_PVS_POS
    static final int FLAG_CVE_GT_PVS
    static final int FLAG_CVE_EQ_PVS
    static final int FLAG_CVE_LT_PVS
    static final int CVE_PVE_POS
    static final int FLAG_CVE_GT_PVE
    static final int FLAG_CVE_EQ_PVE
    static final int FLAG_CVE_LT_PVE
    static final int MASK
com.google.android.material.shape.MarkerEdgeTreatment
androidx.recyclerview.widget.ItemTouchHelper$Callback
io.realm.internal.ObjectServerFacade:
    public boolean wasDownloadInterrupted(java.lang.Throwable)
    public void addSupportForObjectLevelPermissions(io.realm.RealmConfiguration$Builder)
    public void createNativeSyncSession(io.realm.RealmConfiguration)
androidx.recyclerview.R$integer
androidx.viewpager2.widget.ViewPager2$2
com.jaredrummler.materialspinner.R$styleable:
    private void <init>()
androidx.recyclerview.widget.TileList$Tile
androidx.constraintlayout.widget.Barrier:
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public boolean allowsGoneWidget()
    public static final int LEFT
    public static final int TOP
    public static final int RIGHT
    public static final int BOTTOM
    public static final int START
    public static final int END
com.google.android.material.transition.platform.SlideDistanceProvider$GravityFlag
androidx.loader.R$dimen
androidx.lifecycle.Transformations$2$1
androidx.viewpager.widget.PagerTitleStrip$PageListener
androidx.appcompat.app.ActionBar$DisplayOptions
com.getkeepsafe.relinker.BuildConfig
com.guilhermedaros.museunfc.R$style
androidx.vectordrawable.animated.R$integer
com.google.android.material.bottomnavigation.BottomNavigationView
com.google.android.material.bottomsheet.BottomSheetBehavior$State
androidx.annotation.RequiresFeature
com.google.android.material.transition.platform.TransitionUtils$1
androidx.core.os.ParcelCompat
com.google.android.material.datepicker.MaterialDatePicker$InputMode
com.google.android.material.transition.platform.MaterialElevationScale
androidx.appcompat.widget.AppCompatImageButton:
    public void <init>(android.content.Context)
androidx.core.R$id:
    private void <init>()
com.google.gson.LongSerializationPolicy$2:
    public com.google.gson.JsonElement serialize(java.lang.Long)
com.rollbar.notifier.Rollbar
androidx.viewpager.widget.PagerTabStrip$1
androidx.core.content.PermissionChecker$PermissionResult
androidx.customview.R$drawable
androidx.core.util.Supplier
androidx.core.view.WindowCompat
androidx.appcompat.app.ActionBarDrawerToggle$FrameworkActionBarDelegate
com.google.android.material.snackbar.BaseTransientBottomBar$8
com.google.android.material.shape.OffsetEdgeTreatment
androidx.appcompat.widget.ActionMenuPresenter$SavedState
androidx.vectordrawable.animated.R$attr
androidx.recyclerview.widget.RecyclerView$LayoutParams:
    public boolean viewNeedsUpdate()
    public int getViewPosition()
    public int getViewAdapterPosition()
androidx.fragment.R
io.realm.Realm$3
com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemReselectedListener
io.realm.rx.RealmObservableFactory$17$1
androidx.appcompat.app.ActionBar$OnNavigationListener
com.rollbar.notifier.uncaughtexception.RollbarUncaughtExceptionHandler
androidx.core.content.SharedPreferencesCompat$EditorCompat$Helper
com.google.android.material.snackbar.Snackbar$Callback
com.google.android.material.card.MaterialCardViewHelper$1
androidx.core.view.DragStartHelper$1
com.google.android.material.tabs.TabLayout$Mode
com.caverock.androidsvg.SVG$PathInterface
androidx.vectordrawable.R$id
androidx.appcompat.widget.SearchView:
    public boolean isIconfiedByDefault()
    public boolean isSubmitButtonEnabled()
    public boolean isQueryRefinementEnabled()
    static final boolean DBG
    static final java.lang.String LOG_TAG
    private static final java.lang.String IME_OPTION_NO_MICROPHONE
com.google.android.material.transition.MaterialContainerTransform$TransitionDrawable$2
androidx.annotation.experimental.Experimental
androidx.appcompat.resources.R$attr
androidx.customview.widget.FocusStrategy:
    private void <init>()
androidx.appcompat.widget.ViewUtils:
    private void <init>()
    private static final java.lang.String TAG
com.guilhermedaros.museunfc.R$plurals
androidx.core.provider.FontsContractCompat$FontFamilyResult:
    public static final int STATUS_OK
    public static final int STATUS_WRONG_CERTIFICATES
    public static final int STATUS_UNEXPECTED_DATA_PROVIDED
io.realm.internal.InvalidRow:
    public long getColumnCount()
    public long getLink(long)
    public void setLong(long,long)
    public void setBoolean(long,boolean)
    public void setFloat(long,float)
    public void setDouble(long,double)
    public void setDate(long,java.util.Date)
    public void setString(long,java.lang.String)
    public void setBinaryByteArray(long,byte[])
    public void setLink(long,long)
    public void nullifyLink(long)
    public void setNull(long)
    public void checkIfAttached()
    public boolean hasColumn(java.lang.String)
    public io.realm.internal.Row freeze(io.realm.internal.OsSharedRealm)
    public boolean isLoaded()
io.realm.R
androidx.core.R$style
io.realm.rx.RealmObservableFactory$10
androidx.recyclerview.widget.LayoutState:
    static final int LAYOUT_START
    static final int LAYOUT_END
    static final int INVALID_LAYOUT
    static final int ITEM_DIRECTION_HEAD
    static final int ITEM_DIRECTION_TAIL
org.slf4j.helpers.SubstituteLoggerFactory:
    public java.util.List getLoggerNames()
com.google.android.material.bottomsheet.BottomSheetDialog$1
androidx.viewpager.R$styleable
javax.annotation.CheckForNull
com.google.android.material.bottomappbar.BottomAppBar$FabAlignmentMode
org.slf4j.Marker:
    public abstract java.lang.String getName()
    public abstract void add(org.slf4j.Marker)
    public abstract boolean remove(org.slf4j.Marker)
    public abstract boolean hasChildren()
    public abstract boolean hasReferences()
    public abstract java.util.Iterator iterator()
    public abstract boolean contains(org.slf4j.Marker)
    public abstract boolean contains(java.lang.String)
    public abstract boolean equals(java.lang.Object)
    public abstract int hashCode()
    public static final java.lang.String ANY_MARKER
    public static final java.lang.String ANY_NON_NULL_MARKER
androidx.core.app.JobIntentService$CompatWorkEnqueuer
androidx.activity.R$dimen
io.realm.log.RealmLog:
    public void <init>()
    public static void add(io.realm.log.RealmLogger)
    public static void setLevel(int)
    public static boolean remove(io.realm.log.RealmLogger)
    public static void clear()
    public static void registerDefaultLogger()
    public static void trace(java.lang.Throwable)
    public static varargs void trace(java.lang.String,java.lang.Object[])
    public static varargs void trace(java.lang.Throwable,java.lang.String,java.lang.Object[])
    public static void debug(java.lang.Throwable)
    public static varargs void debug(java.lang.String,java.lang.Object[])
    public static varargs void debug(java.lang.Throwable,java.lang.String,java.lang.Object[])
    public static void info(java.lang.Throwable)
    public static varargs void info(java.lang.String,java.lang.Object[])
    public static varargs void info(java.lang.Throwable,java.lang.String,java.lang.Object[])
    public static void warn(java.lang.Throwable)
    public static void error(java.lang.Throwable)
    public static void fatal(java.lang.Throwable)
    private static native void nativeAddLogger(io.realm.log.RealmLogger)
    private static native void nativeRemoveLogger(io.realm.log.RealmLogger)
    private static native void nativeClearLoggers()
    private static native void nativeRegisterDefaultLogger()
    private static native void nativeSetLogLevel(int)
    static native long nativeCreateCoreLoggerBridge(java.lang.String)
    static native void nativeCloseCoreLoggerBridge(long)
    static native void nativeLogToCoreLoggerBridge(long,int,java.lang.String)
io.realm.internal.OsResults$11
androidx.appcompat.widget.AlertDialogLayout:
    public void <init>(android.content.Context)
com.rollbar.android.Rollbar$4
com.google.gson.JsonSyntaxException:
    private static final long serialVersionUID
androidx.core.view.ViewCompat$FocusDirection
com.google.android.material.internal.CollapsingTextHelper$2
com.google.android.material.math.MathUtils:
    private void <init>()
    public static boolean geq(float,float,float)
    public static float floorMod(float,int)
    public static int floorMod(int,int)
    public static final float DEFAULT_EPSILON
androidx.appcompat.view.menu.CascadingMenuPopup$HorizPosition
androidx.activity.ComponentActivity:
    public void <init>(int)
    public java.lang.Object getLastCustomNonConfigurationInstance()
com.google.android.material.datepicker.DateFormatTextWatcher
androidx.annotation.StyleableRes
androidx.transition.R$color
androidx.core.provider.FontsContractCompat$4
androidx.transition.Visibility$Mode
io.realm.annotations.Ignore
androidx.transition.GhostViewPort$1
androidx.core.text.HtmlCompat
androidx.core.view.accessibility.AccessibilityRecordCompat:
    public void <init>(java.lang.Object)
    public static androidx.core.view.accessibility.AccessibilityRecordCompat obtain(androidx.core.view.accessibility.AccessibilityRecordCompat)
    public static androidx.core.view.accessibility.AccessibilityRecordCompat obtain()
    public static int getMaxScrollX(android.view.accessibility.AccessibilityRecord)
    public static int getMaxScrollY(android.view.accessibility.AccessibilityRecord)
    public java.lang.Object getImpl()
    public void setSource(android.view.View)
    public void setSource(android.view.View,int)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat getSource()
    public int getWindowId()
    public boolean isChecked()
    public void setChecked(boolean)
    public boolean isEnabled()
    public void setEnabled(boolean)
    public boolean isPassword()
    public void setPassword(boolean)
    public boolean isFullScreen()
    public void setFullScreen(boolean)
    public boolean isScrollable()
    public void setScrollable(boolean)
    public int getItemCount()
    public void setItemCount(int)
    public int getCurrentItemIndex()
    public void setCurrentItemIndex(int)
    public int getFromIndex()
    public void setFromIndex(int)
    public int getToIndex()
    public void setToIndex(int)
    public int getScrollX()
    public void setScrollX(int)
    public int getScrollY()
    public void setScrollY(int)
    public int getMaxScrollX()
    public void setMaxScrollX(int)
    public int getMaxScrollY()
    public void setMaxScrollY(int)
    public int getAddedCount()
    public void setAddedCount(int)
    public int getRemovedCount()
    public void setRemovedCount(int)
    public java.lang.CharSequence getClassName()
    public void setClassName(java.lang.CharSequence)
    public java.util.List getText()
    public java.lang.CharSequence getBeforeText()
    public void setBeforeText(java.lang.CharSequence)
    public java.lang.CharSequence getContentDescription()
    public void setContentDescription(java.lang.CharSequence)
    public android.os.Parcelable getParcelableData()
    public void setParcelableData(android.os.Parcelable)
    public void recycle()
    public int hashCode()
    public boolean equals(java.lang.Object)
    private final android.view.accessibility.AccessibilityRecord mRecord
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat:
    private static void dumpKeyframes(java.lang.Object[],java.lang.String)
    private void <init>()
    private static final java.lang.String TAG
    private static final int TOGETHER
    private static final int MAX_NUM_POINTS
    private static final int VALUE_TYPE_FLOAT
    private static final int VALUE_TYPE_INT
    private static final int VALUE_TYPE_PATH
    private static final int VALUE_TYPE_COLOR
    private static final int VALUE_TYPE_UNDEFINED
    private static final boolean DBG_ANIMATOR_INFLATER
androidx.versionedparcelable.VersionedParcelStream$FieldBuffer
androidx.appcompat.app.ActionBar$Tab:
    public abstract int getPosition()
    public abstract androidx.appcompat.app.ActionBar$Tab setIcon(android.graphics.drawable.Drawable)
    public abstract androidx.appcompat.app.ActionBar$Tab setIcon(int)
    public abstract androidx.appcompat.app.ActionBar$Tab setText(java.lang.CharSequence)
    public abstract androidx.appcompat.app.ActionBar$Tab setText(int)
    public abstract androidx.appcompat.app.ActionBar$Tab setCustomView(android.view.View)
    public abstract androidx.appcompat.app.ActionBar$Tab setCustomView(int)
    public abstract androidx.appcompat.app.ActionBar$Tab setTag(java.lang.Object)
    public abstract java.lang.Object getTag()
    public abstract androidx.appcompat.app.ActionBar$Tab setTabListener(androidx.appcompat.app.ActionBar$TabListener)
    public abstract androidx.appcompat.app.ActionBar$Tab setContentDescription(int)
    public abstract androidx.appcompat.app.ActionBar$Tab setContentDescription(java.lang.CharSequence)
    public static final int INVALID_POSITION
io.realm.internal.OsResults:
    public static io.realm.internal.OsResults createForBacklinks(io.realm.internal.OsSharedRealm,io.realm.internal.UncheckedRow,io.realm.internal.Table,java.lang.String)
    public static io.realm.internal.OsResults createFromQuery(io.realm.internal.OsSharedRealm,io.realm.internal.TableQuery)
    private void addTypeSpecificList(java.lang.String,io.realm.RealmList,io.realm.internal.OsResults$AddListTypeDelegate)
    private static native long nativeFreeze(long,long)
    private static native long nativeLastRow(long)
    private static native boolean nativeContains(long,long)
    private static native java.lang.Object nativeAggregate(long,long,byte)
    private static native long nativeSort(long,io.realm.internal.core.QueryDescriptor)
    private static native long nativeDistinct(long,io.realm.internal.core.QueryDescriptor)
    private static native boolean nativeDeleteFirst(long)
    private static native boolean nativeDeleteLast(long)
    private static native void nativeDelete(long,long)
    private static native void nativeSetNull(long,java.lang.String)
    private static native void nativeSetBoolean(long,java.lang.String,boolean)
    private static native void nativeSetInt(long,java.lang.String,long)
    private static native void nativeSetFloat(long,java.lang.String,float)
    private static native void nativeSetDouble(long,java.lang.String,double)
    private static native void nativeSetString(long,java.lang.String,java.lang.String)
    private static native void nativeSetBinary(long,java.lang.String,byte[])
    private static native void nativeSetTimestamp(long,java.lang.String,long)
    private static native void nativeSetObject(long,java.lang.String,long)
    private static native void nativeSetList(long,java.lang.String,long)
    private native void nativeStartListening(long)
    private static native long nativeWhere(long)
    private static native java.lang.String toJSON(long,int)
    private static native long nativeIndexOf(long,long)
    private static native long nativeCreateResultsFromBacklinks(long,long,long,long)
    public io.realm.internal.OsResults freeze(io.realm.internal.OsSharedRealm)
    public io.realm.internal.UncheckedRow lastUncheckedRow()
    public io.realm.internal.Table getTable()
    public io.realm.internal.TableQuery where()
    public java.lang.String toJSON(int)
    public java.lang.Number aggregateNumber(io.realm.internal.OsResults$Aggregate,long)
    public java.util.Date aggregateDate(io.realm.internal.OsResults$Aggregate,long)
    public io.realm.internal.OsResults sort(io.realm.internal.core.QueryDescriptor)
    public io.realm.internal.OsResults distinct(io.realm.internal.core.QueryDescriptor)
    public boolean contains(io.realm.internal.UncheckedRow)
    public int indexOf(io.realm.internal.UncheckedRow)
    public void delete(long)
    public boolean deleteFirst()
    public boolean deleteLast()
    public void setNull(java.lang.String)
    public void setBoolean(java.lang.String,boolean)
    public void setInt(java.lang.String,long)
    public void setFloat(java.lang.String,float)
    public void setDouble(java.lang.String,double)
    public void setString(java.lang.String,java.lang.String)
    public void setBlob(java.lang.String,byte[])
    public void setDate(java.lang.String,java.util.Date)
    public void setObject(java.lang.String,io.realm.internal.Row)
    public void setStringList(java.lang.String,io.realm.RealmList)
    public void setByteList(java.lang.String,io.realm.RealmList)
    public void setShortList(java.lang.String,io.realm.RealmList)
    public void setIntegerList(java.lang.String,io.realm.RealmList)
    public void setLongList(java.lang.String,io.realm.RealmList)
    public void setBooleanList(java.lang.String,io.realm.RealmList)
    public void setByteArrayList(java.lang.String,io.realm.RealmList)
    public void setDateList(java.lang.String,io.realm.RealmList)
    public void setFloatList(java.lang.String,io.realm.RealmList)
    public void setDoubleList(java.lang.String,io.realm.RealmList)
    public void setModelList(java.lang.String,io.realm.RealmList)
    public void addListener(java.lang.Object,io.realm.OrderedRealmCollectionChangeListener)
    public void addListener(java.lang.Object,io.realm.RealmChangeListener)
    public void removeAllListeners()
    private static final java.lang.String CLOSED_REALM_MESSAGE
    public static final byte AGGREGATE_FUNCTION_MINIMUM
    public static final byte AGGREGATE_FUNCTION_MAXIMUM
    public static final byte AGGREGATE_FUNCTION_AVERAGE
    public static final byte AGGREGATE_FUNCTION_SUM
    public static final byte MODE_EMPTY
    public static final byte MODE_TABLE
    public static final byte MODE_LIST
    public static final byte MODE_QUERY
    public static final byte MODE_LINK_LIST
    public static final byte MODE_TABLEVIEW
androidx.core.provider.FontsContractCompat$4$4
com.rollbar.jvmti.ThrowableCache$1
com.caverock.androidsvg.SVGParser$SVGAttr
androidx.transition.Transition:
    public void <init>(android.content.Context,android.util.AttributeSet)
    private static int[] parseMatchOrder(java.lang.String)
    private static boolean isValidMatch(int)
    private static boolean alreadyContains(int[],int)
    private static java.util.ArrayList excludeObject(java.util.ArrayList,java.lang.Object,boolean)
    private java.util.ArrayList excludeId(java.util.ArrayList,int,boolean)
    private java.util.ArrayList excludeView(java.util.ArrayList,android.view.View,boolean)
    private java.util.ArrayList excludeType(java.util.ArrayList,java.lang.Class,boolean)
    public varargs void setMatchOrder(int[])
    public androidx.transition.Transition addTarget(int)
    public androidx.transition.Transition addTarget(java.lang.String)
    public androidx.transition.Transition addTarget(java.lang.Class)
    public androidx.transition.Transition removeTarget(int)
    public androidx.transition.Transition removeTarget(java.lang.String)
    public androidx.transition.Transition removeTarget(java.lang.Class)
    public androidx.transition.Transition excludeTarget(android.view.View,boolean)
    public androidx.transition.Transition excludeTarget(int,boolean)
    public androidx.transition.Transition excludeTarget(java.lang.String,boolean)
    public androidx.transition.Transition excludeChildren(android.view.View,boolean)
    public androidx.transition.Transition excludeChildren(int,boolean)
    public androidx.transition.Transition excludeTarget(java.lang.Class,boolean)
    public androidx.transition.Transition excludeChildren(java.lang.Class,boolean)
    void forceToEnd(android.view.ViewGroup)
    public android.graphics.Rect getEpicenter()
    androidx.transition.Transition setSceneRoot(android.view.ViewGroup)
    void setCanRemoveViews(boolean)
    private static final java.lang.String LOG_TAG
    static final boolean DBG
    public static final int MATCH_INSTANCE
    private static final int MATCH_FIRST
    public static final int MATCH_NAME
    public static final int MATCH_ID
    public static final int MATCH_ITEM_ID
    private static final int MATCH_LAST
    private static final java.lang.String MATCH_INSTANCE_STR
    private static final java.lang.String MATCH_NAME_STR
    private static final java.lang.String MATCH_ID_STR
    private static final java.lang.String MATCH_ITEM_ID_STR
com.google.gson.internal.bind.TreeTypeAdapter$SingleTypeFactory
com.caverock.androidsvg.SVG$SvgContainer
androidx.annotation.FloatRange
com.google.android.material.R
com.caverock.androidsvg.CSSParser$CSSTextScanner
io.realm.internal.async.BgPriorityCallable
com.google.android.material.transition.platform.MaterialContainerTransform$2
androidx.appcompat.graphics.drawable.DrawerArrowDrawable$ArrowDirection
com.google.android.material.slider.BaseSlider$AccessibilityHelper
androidx.transition.TransitionUtils:
    private void <init>()
    private static final int MAX_IMAGE_SIZE
androidx.core.view.ViewPropertyAnimatorCompat:
    public androidx.core.view.ViewPropertyAnimatorCompat alphaBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat translationX(float)
    public androidx.core.view.ViewPropertyAnimatorCompat withEndAction(java.lang.Runnable)
    public android.view.animation.Interpolator getInterpolator()
    public long getStartDelay()
    public androidx.core.view.ViewPropertyAnimatorCompat rotation(float)
    public androidx.core.view.ViewPropertyAnimatorCompat rotationBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat rotationX(float)
    public androidx.core.view.ViewPropertyAnimatorCompat rotationXBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat rotationY(float)
    public androidx.core.view.ViewPropertyAnimatorCompat rotationYBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat scaleX(float)
    public androidx.core.view.ViewPropertyAnimatorCompat scaleXBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat scaleY(float)
    public androidx.core.view.ViewPropertyAnimatorCompat scaleYBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat x(float)
    public androidx.core.view.ViewPropertyAnimatorCompat xBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat y(float)
    public androidx.core.view.ViewPropertyAnimatorCompat yBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat translationXBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat translationYBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat translationZBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat translationZ(float)
    public androidx.core.view.ViewPropertyAnimatorCompat z(float)
    public androidx.core.view.ViewPropertyAnimatorCompat zBy(float)
    public androidx.core.view.ViewPropertyAnimatorCompat withLayer()
    public androidx.core.view.ViewPropertyAnimatorCompat withStartAction(java.lang.Runnable)
    static final int LISTENER_TAG_ID
io.realm.RealmConfiguration:
    public java.util.Set getRealmObjectClasses()
    public io.realm.rx.RxObservableFactory getRxFactory()
    public static final java.lang.String DEFAULT_REALM_NAME
    public static final int KEY_LENGTH
com.google.android.material.snackbar.ContentViewCallback
androidx.core.content.res.ComplexColorCompat:
    private static final java.lang.String LOG_TAG
com.google.android.material.transition.platform.MaskEvaluator
androidx.fragment.app.FragmentTabHost
javax.annotation.ParametersAreNullableByDefault
androidx.viewpager2.R$styleable
com.google.android.material.datepicker.MaterialCalendar:
    static com.google.android.material.datepicker.MaterialCalendar newInstance(com.google.android.material.datepicker.DateSelector,int,com.google.android.material.datepicker.CalendarConstraints)
    private static final java.lang.String THEME_RES_ID_KEY
    private static final java.lang.String GRID_SELECTOR_KEY
    private static final java.lang.String CALENDAR_CONSTRAINTS_KEY
    private static final java.lang.String CURRENT_MONTH_KEY
    private static final int SMOOTH_SCROLL_MAX
com.google.android.material.datepicker.MaterialDatePicker$2
androidx.appcompat.widget.AppCompatCheckedTextView:
    public void <init>(android.content.Context)
androidx.viewpager2.adapter.FragmentStateAdapter:
    public void <init>(androidx.fragment.app.FragmentActivity)
    public void <init>(androidx.fragment.app.Fragment)
    public void <init>(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle)
    private boolean isFragmentViewBound(long)
    private java.lang.Long itemForViewHolder(int)
    private void ensureFragment(int)
    private void scheduleViewAttach(androidx.fragment.app.Fragment,android.widget.FrameLayout)
    private void removeFragment(long)
    private void scheduleGracePeriodEnd()
    private static java.lang.String createKey(java.lang.String,long)
    private static boolean isValidKey(java.lang.String,java.lang.String)
    private static long parseIdFromKey(java.lang.String,java.lang.String)
    public void onAttachedToRecyclerView(androidx.recyclerview.widget.RecyclerView)
    public void onDetachedFromRecyclerView(androidx.recyclerview.widget.RecyclerView)
    public abstract androidx.fragment.app.Fragment createFragment(int)
    public final androidx.viewpager2.adapter.FragmentViewHolder onCreateViewHolder(android.view.ViewGroup,int)
    public final void onBindViewHolder(androidx.viewpager2.adapter.FragmentViewHolder,int)
    void gcFragments()
    public final void onViewAttachedToWindow(androidx.viewpager2.adapter.FragmentViewHolder)
    void addViewToContainer(android.view.View,android.widget.FrameLayout)
    public final void onViewRecycled(androidx.viewpager2.adapter.FragmentViewHolder)
    public final boolean onFailedToRecycleView(androidx.viewpager2.adapter.FragmentViewHolder)
    public long getItemId(int)
    public boolean containsItem(long)
    public final void setHasStableIds(boolean)
    public final android.os.Parcelable saveState()
    public final void restoreState(android.os.Parcelable)
    public synthetic bridge void onViewAttachedToWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public synthetic bridge boolean onFailedToRecycleView(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public synthetic bridge void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public synthetic bridge void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)
    public synthetic bridge androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int)
    final androidx.lifecycle.Lifecycle mLifecycle
    final androidx.fragment.app.FragmentManager mFragmentManager
    final androidx.collection.LongSparseArray mFragments
    private final androidx.collection.LongSparseArray mSavedStates
    private final androidx.collection.LongSparseArray mItemIdToViewHolder
    private androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer mFragmentMaxLifecycleEnforcer
    boolean mIsInGracePeriod
    private boolean mHasStaleFragments
    private static final java.lang.String KEY_PREFIX_FRAGMENT
    private static final java.lang.String KEY_PREFIX_STATE
    private static final long GRACE_WINDOW_TIME_MS
androidx.recyclerview.widget.ItemTouchUIUtilImpl
com.guilhermedaros.museunfc.Models.ResponseItem:
    public void setData(java.util.List)
com.google.android.material.transition.platform.VisibilityAnimatorProvider
io.realm.sync.permissions.Permission$1
androidx.customview.widget.ExploreByTouchHelper:
    public final void invalidateRoot()
    public final void invalidateVirtualView(int)
    public final void invalidateVirtualView(int,int)
    public int getFocusedVirtualView()
    public static final int INVALID_ID
    public static final int HOST_ID
    private static final java.lang.String DEFAULT_CLASS_NAME
com.caverock.androidsvg.SVGExternalFileResolver
com.google.android.material.datepicker.CompositeDateValidator
com.google.android.material.snackbar.BaseTransientBottomBar$13
androidx.annotation.CheckResult
com.jaredrummler.materialspinner.BuildConfig
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ChangeSizeStrategy
io.realm.internal.OsList:
    private void <init>(io.realm.internal.OsSharedRealm,long,io.realm.internal.Table)
    private static native long nativeGetRow(long,long)
    private static native void nativeAddRow(long,long)
    private static native void nativeInsertRow(long,long,long)
    private static native void nativeSetRow(long,long,long)
    private static native void nativeMove(long,long,long)
    private static native void nativeRemove(long,long)
    private static native void nativeRemoveAll(long)
    private static native long nativeGetQuery(long)
    private static native boolean nativeIsValid(long)
    private static native void nativeDelete(long,long)
    private static native void nativeDeleteAll(long)
    private static native void nativeAddNull(long)
    private static native void nativeInsertNull(long,long)
    private static native void nativeSetNull(long,long)
    private static native void nativeAddLong(long,long)
    private static native void nativeInsertLong(long,long,long)
    private static native void nativeSetLong(long,long,long)
    private static native void nativeAddDouble(long,double)
    private static native void nativeInsertDouble(long,long,double)
    private static native void nativeSetDouble(long,long,double)
    private static native void nativeAddFloat(long,float)
    private static native void nativeInsertFloat(long,long,float)
    private static native void nativeSetFloat(long,long,float)
    private static native void nativeAddBoolean(long,boolean)
    private static native void nativeInsertBoolean(long,long,boolean)
    private static native void nativeSetBoolean(long,long,boolean)
    private static native void nativeAddBinary(long,byte[])
    private static native void nativeInsertBinary(long,long,byte[])
    private static native void nativeSetBinary(long,long,byte[])
    private static native void nativeAddDate(long,long)
    private static native void nativeInsertDate(long,long,long)
    private static native void nativeSetDate(long,long,long)
    private static native void nativeAddString(long,java.lang.String)
    private static native void nativeInsertString(long,long,java.lang.String)
    private static native void nativeSetString(long,long,java.lang.String)
    private static native java.lang.Object nativeGetValue(long,long)
    private native void nativeStartListening(long)
    private native void nativeStopListening(long)
    private static native long nativeFreeze(long,long)
    public io.realm.internal.UncheckedRow getUncheckedRow(long)
    public void addRow(long)
    public void insertRow(long,long)
    public void setRow(long,long)
    public void addNull()
    public void insertNull(long)
    public void setNull(long)
    public void addLong(long)
    public void insertLong(long,long)
    public void setLong(long,long)
    public void addDouble(double)
    public void insertDouble(long,double)
    public void setDouble(long,double)
    public void addFloat(float)
    public void insertFloat(long,float)
    public void setFloat(long,float)
    public void addBoolean(boolean)
    public void insertBoolean(long,boolean)
    public void setBoolean(long,boolean)
    public void addBinary(byte[])
    public void insertBinary(long,byte[])
    public void setBinary(long,byte[])
    public void addString(java.lang.String)
    public void insertString(long,java.lang.String)
    public void setString(long,java.lang.String)
    public void addDate(java.util.Date)
    public void insertDate(long,java.util.Date)
    public void setDate(long,java.util.Date)
    public java.lang.Object getValue(long)
    public void move(long,long)
    public void remove(long)
    public void removeAll()
    public boolean isEmpty()
    public io.realm.internal.TableQuery getQuery()
    public boolean isValid()
    public void delete(long)
    public void deleteAll()
    public io.realm.internal.Table getTargetTable()
    public void addListener(java.lang.Object,io.realm.OrderedRealmCollectionChangeListener)
    public void addListener(java.lang.Object,io.realm.RealmChangeListener)
    public void removeListener(java.lang.Object,io.realm.OrderedRealmCollectionChangeListener)
    public void removeListener(java.lang.Object,io.realm.RealmChangeListener)
    public void removeAllListeners()
    public io.realm.internal.OsList freeze(io.realm.internal.OsSharedRealm)
androidx.core.graphics.drawable.WrappedDrawableApi21:
    private static final java.lang.String TAG
com.google.android.material.resources.TextAppearanceConfig:
    public void <init>()
    public static void setShouldLoadFontSynchronously(boolean)
androidx.core.app.NotificationCompat$Action
io.realm.internal.Table:
    private void verifyColumnName(java.lang.String)
    private boolean isPrimaryKey(long)
    public static void throwDuplicatePrimaryKeyException(java.lang.Object)
    private static void throwImmutable()
    private native boolean nativeIsValid(long)
    private native long nativeAddColumn(long,int,java.lang.String,boolean)
    private native long nativeAddPrimitiveListColumn(long,int,java.lang.String,boolean)
    private native long nativeAddColumnLink(long,int,java.lang.String,long)
    private native void nativeRenameColumn(long,long,java.lang.String)
    private native void nativeRemoveColumn(long,long)
    private native boolean nativeIsColumnNullable(long,long)
    private native void nativeConvertColumnToNullable(long,long,boolean)
    private native void nativeConvertColumnToNotNullable(long,long,boolean)
    private native void nativeClear(long,boolean)
    private native void nativeMoveLastOver(long,long)
    private native long nativeGetLong(long,long,long)
    private native boolean nativeGetBoolean(long,long,long)
    private native float nativeGetFloat(long,long,long)
    private native double nativeGetDouble(long,long,long)
    private native long nativeGetTimestamp(long,long,long)
    private native java.lang.String nativeGetString(long,long,long)
    private native byte[] nativeGetByteArray(long,long,long)
    private native long nativeGetLink(long,long,long)
    private native boolean nativeIsNull(long,long,long)
    public static native void nativeSetLong(long,long,long,long,boolean)
    public static native void nativeIncrementLong(long,long,long,long)
    public static native void nativeSetBoolean(long,long,long,boolean,boolean)
    public static native void nativeSetFloat(long,long,long,float,boolean)
    public static native void nativeSetDouble(long,long,long,double,boolean)
    public static native void nativeSetTimestamp(long,long,long,long,boolean)
    public static native void nativeSetString(long,long,long,java.lang.String,boolean)
    public static native void nativeSetNull(long,long,long,boolean)
    public static native void nativeSetByteArray(long,long,long,byte[],boolean)
    public static native void nativeSetLink(long,long,long,long,boolean)
    private native void nativeAddSearchIndex(long,long)
    private native void nativeRemoveSearchIndex(long,long)
    private native boolean nativeHasSearchIndex(long,long)
    private native boolean nativeIsNullLink(long,long,long)
    public static native void nativeNullifyLink(long,long,long)
    private native long nativeCountLong(long,long,long)
    private native long nativeCountFloat(long,long,float)
    private native long nativeCountDouble(long,long,double)
    private native long nativeCountString(long,long,java.lang.String)
    private native long nativeFindFirstBool(long,long,boolean)
    private native long nativeFindFirstFloat(long,long,float)
    private native long nativeFindFirstDouble(long,long,double)
    private native long nativeFindFirstTimestamp(long,long,long)
    public static native long nativeFindFirstString(long,long,java.lang.String)
    public static native long nativeFindFirstNull(long,long)
    private native boolean nativeHasSameSchema(long,long)
    private static native long nativeFreeze(long,long)
    public io.realm.internal.Table getTable()
    public boolean isValid()
    public long addColumn(io.realm.RealmFieldType,java.lang.String,boolean)
    public long addColumn(io.realm.RealmFieldType,java.lang.String)
    public long addColumnLink(io.realm.RealmFieldType,java.lang.String,io.realm.internal.Table)
    public void removeColumn(long)
    public void renameColumn(long,java.lang.String)
    public boolean isColumnNullable(long)
    public void convertColumnToNullable(long)
    public void convertColumnToNotNullable(long)
    public boolean isEmpty()
    public void clear(boolean)
    public void moveLastOver(long)
    public long getLong(long,long)
    public boolean getBoolean(long,long)
    public float getFloat(long,long)
    public double getDouble(long,long)
    public java.util.Date getDate(long,long)
    public java.lang.String getString(long,long)
    public byte[] getBinaryByteArray(long,long)
    public long getLink(long,long)
    public void setLong(long,long,long,boolean)
    public void incrementLong(long,long,long)
    public void setBoolean(long,long,boolean,boolean)
    public void setFloat(long,long,float,boolean)
    public void setDouble(long,long,double,boolean)
    public void setDate(long,long,java.util.Date,boolean)
    public void setString(long,long,java.lang.String,boolean)
    public void setBinaryByteArray(long,long,byte[],boolean)
    public void setLink(long,long,long,boolean)
    public void setNull(long,long,boolean)
    public void addSearchIndex(long)
    public void removeSearchIndex(long)
    public boolean hasSearchIndex(long)
    public boolean isNullLink(long,long)
    public void nullifyLink(long,long)
    boolean isImmutable()
    void checkImmutable()
    public long count(long,long)
    public long count(long,float)
    public long count(long,double)
    public long count(long,java.lang.String)
    public long findFirstBoolean(long,boolean)
    public long findFirstFloat(long,float)
    public long findFirstDouble(long,double)
    public long findFirstDate(long,java.util.Date)
    public long findFirstString(long,java.lang.String)
    public long findFirstNull(long)
    public boolean hasSameSchema(io.realm.internal.Table)
    public io.realm.internal.Table freeze(io.realm.internal.OsSharedRealm)
    private static final int TABLE_NAME_MAX_LENGTH
    public static final long INFINITE
    public static final boolean NULLABLE
    public static final boolean NOT_NULLABLE
    public static final int NO_MATCH
    public static final int MAX_BINARY_SIZE
    public static final int MAX_STRING_SIZE
androidx.appcompat.R$style:
    private void <init>()
androidx.recyclerview.widget.AsyncDifferConfig
com.google.android.material.internal.ParcelableSparseIntArray$1
androidx.core.content.res.ConfigurationHelper
com.google.android.material.transition.platform.MaterialSharedAxis
org.slf4j.MDC$1
androidx.appcompat.resources.R$id
androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments:
    public int getRow()
    public int getColumn()
io.realm.internal.OsResults$1
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon:
    protected void onBoundsChange(android.graphics.Rect)
androidx.viewpager.widget.ViewPager:
    public void <init>(android.content.Context)
    public void addOnAdapterChangeListener(androidx.viewpager.widget.ViewPager$OnAdapterChangeListener)
    public void removeOnAdapterChangeListener(androidx.viewpager.widget.ViewPager$OnAdapterChangeListener)
    public void addOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener)
    public void removeOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener)
    public void clearOnPageChangeListeners()
    public void setPageTransformer(boolean,androidx.viewpager.widget.ViewPager$PageTransformer)
    public void setPageTransformer(boolean,androidx.viewpager.widget.ViewPager$PageTransformer,int)
    androidx.viewpager.widget.ViewPager$OnPageChangeListener setInternalPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener)
    void smoothScrollTo(int,int)
    public boolean beginFakeDrag()
    public void endFakeDrag()
    public void fakeDragBy(float)
    public boolean isFakeDragging()
    private long mFakeDragBeginTime
    private static final java.lang.String TAG
    private static final boolean DEBUG
    private static final boolean USE_CACHE
    private static final int DEFAULT_OFFSCREEN_PAGES
    private static final int MAX_SETTLE_DURATION
    private static final int MIN_DISTANCE_FOR_FLING
    private static final int DEFAULT_GUTTER_SIZE
    private static final int MIN_FLING_VELOCITY
    private static final int INVALID_POINTER
    private static final int CLOSE_ENOUGH
    private static final int DRAW_ORDER_DEFAULT
    private static final int DRAW_ORDER_FORWARD
    private static final int DRAW_ORDER_REVERSE
    public static final int SCROLL_STATE_IDLE
    public static final int SCROLL_STATE_DRAGGING
    public static final int SCROLL_STATE_SETTLING
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper:
    private static final java.lang.String TAG
    private static final int DEFAULT_AUTO_SIZE_MIN_TEXT_SIZE_IN_SP
    private static final int DEFAULT_AUTO_SIZE_MAX_TEXT_SIZE_IN_SP
    private static final int DEFAULT_AUTO_SIZE_GRANULARITY_IN_PX
    static final float UNSET_AUTO_SIZE_UNIFORM_CONFIGURATION_VALUE
    private static final int VERY_WIDE
com.google.android.material.internal.ScrimInsetsFrameLayout
androidx.vectordrawable.graphics.drawable.Animatable2Compat
com.caverock.androidsvg.SVG$PathDefinition
androidx.core.app.FrameMetricsAggregator
com.google.android.material.internal.NavigationMenuPresenter$SeparatorViewHolder
androidx.fragment.R$drawable
androidx.core.graphics.PaintCompat
androidx.recyclerview.R$attr:
    private void <init>()
javax.annotation.Nonnull
androidx.constraintlayout.solver.widgets.Rectangle:
    public void setBounds(int,int,int,int)
    void grow(int,int)
    boolean intersects(androidx.constraintlayout.solver.widgets.Rectangle)
    public boolean contains(int,int)
    public int getCenterX()
    public int getCenterY()
    public int x
    public int y
    public int width
    public int height
com.google.android.material.chip.Chip:
    public void <init>(android.content.Context)
    public boolean isChipIconVisible()
    public boolean isChipIconEnabled()
    public boolean isCloseIconEnabled()
    public boolean isCheckedIconVisible()
    public boolean isCheckedIconEnabled()
    private static final java.lang.String TAG
    private static final int CHIP_BODY_VIRTUAL_ID
    private static final int CLOSE_ICON_VIRTUAL_ID
    private static final java.lang.String NAMESPACE_ANDROID
    private static final int MIN_TOUCH_TARGET_DP
    private static final java.lang.String BUTTON_ACCESSIBILITY_CLASS_NAME
    private static final java.lang.String COMPOUND_BUTTON_ACCESSIBILITY_CLASS_NAME
    private static final java.lang.String GENERIC_VIEW_ACCESSIBILITY_CLASS_NAME
com.google.gson.reflect.TypeToken:
    private static boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.GenericArrayType)
    private static boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map)
    private static boolean typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map)
    private static varargs java.lang.AssertionError buildUnexpectedTypeError(java.lang.reflect.Type,java.lang.Class[])
    private static boolean matches(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map)
    public static varargs com.google.gson.reflect.TypeToken getParameterized(java.lang.reflect.Type,java.lang.reflect.Type[])
    public static com.google.gson.reflect.TypeToken getArray(java.lang.reflect.Type)
    public boolean isAssignableFrom(java.lang.Class)
    public boolean isAssignableFrom(java.lang.reflect.Type)
    public boolean isAssignableFrom(com.google.gson.reflect.TypeToken)
androidx.viewpager.R$layout
javax.annotation.PropertyKey
androidx.viewpager2.R
androidx.appcompat.R$anim
androidx.transition.ChangeTransform$PathAnimatorMatrix
io.realm.Realm$Callback
com.guilhermedaros.museunfc.Entities.ItemMuseu:
    public void <init>(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)
    public void setId(int)
    public void setNome(java.lang.String)
    public void setOrdem(java.lang.String)
    public void setFamilia(java.lang.String)
    public void setDescricao(java.lang.String)
    public void setDistribuicaoGeografica(java.lang.String)
    public void setHabitat(java.lang.String)
    public void setHabitosAlimentares(java.lang.String)
    public void setReproducao(java.lang.String)
    public void setPeriodoDeVida(java.lang.String)
    public boolean isAtivo()
    public void setAtivo(boolean)
    public void realmSet$id(int)
    public void realmSet$nome(java.lang.String)
    public void realmSet$ordem(java.lang.String)
    public void realmSet$familia(java.lang.String)
    public void realmSet$descricao(java.lang.String)
    public void realmSet$distribuicaoGeografica(java.lang.String)
    public void realmSet$habitat(java.lang.String)
    public void realmSet$habitosAlimentares(java.lang.String)
    public void realmSet$reproducao(java.lang.String)
    public void realmSet$periodoDeVida(java.lang.String)
    public void realmSet$ativo(boolean)
androidx.viewpager.R$string
androidx.core.app.ActivityRecreator:
    private void <init>()
    private static final java.lang.String LOG_TAG
com.rollbar.notifier.config.ConfigProvider
com.google.android.material.tabs.TabLayout$AdapterChangeListener
com.rollbar.android.Rollbar$3
androidx.fragment.app.FragmentPagerAdapter:
    private static final java.lang.String TAG
    private static final boolean DEBUG
    public static final int BEHAVIOR_SET_USER_VISIBLE_HINT
    public static final int BEHAVIOR_RESUME_ONLY_CURRENT_FRAGMENT
com.google.android.material.shape.MaterialShapeDrawable$CompatibilityShadowMode
androidx.annotation.IntegerRes
com.rollbar.notifier.config.ConfigBuilder$ConfigImpl
io.realm.internal.modules.package-info
androidx.core.R
io.realm.com_guilhermedaros_museunfc_Entities_ItemMuseuRealmProxy$ClassNameHelper
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat:
    public static androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean)
    public int getColumnIndex()
    public int getColumnSpan()
    public int getRowIndex()
    public int getRowSpan()
    public boolean isHeading()
    public boolean isSelected()
com.google.gson.internal.bind.TypeAdapters$27:
    private static final java.lang.String YEAR
    private static final java.lang.String MONTH
    private static final java.lang.String DAY_OF_MONTH
    private static final java.lang.String HOUR_OF_DAY
    private static final java.lang.String MINUTE
    private static final java.lang.String SECOND
androidx.core.view.ViewPropertyAnimatorListenerAdapter:
    public void onAnimationEnd(android.view.View)
androidx.constraintlayout.widget.R
androidx.transition.PropertyValuesHolderUtils:
    private void <init>()
androidx.core.graphics.BlendModeUtils
com.google.android.material.transition.ScaleProvider
com.google.android.material.internal.Experimental
com.caverock.androidsvg.SVG
com.google.gson.internal.LinkedHashTreeMap$1
androidx.fragment.app.FragmentManagerImpl:
    public boolean executePendingTransactions()
    public void popBackStack()
    public void popBackStack(java.lang.String,int)
    public boolean popBackStackImmediate(java.lang.String,int)
    public void popBackStack(int,int)
    public boolean popBackStackImmediate(int,int)
    public androidx.fragment.app.FragmentManager$BackStackEntry getBackStackEntryAt(int)
    public void addOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener)
    public void removeOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener)
    java.util.List getActiveFragments()
    int getActiveFragmentCount()
    public androidx.fragment.app.Fragment$SavedState saveFragmentInstanceState(androidx.fragment.app.Fragment)
    public void enqueueAction(androidx.fragment.app.FragmentManagerImpl$OpGenerator,boolean)
    public int allocBackStackIndex(androidx.fragment.app.BackStackRecord)
    androidx.fragment.app.FragmentManagerNonConfig retainNonConfig()
    void restoreAllState(android.os.Parcelable,androidx.fragment.app.FragmentManagerNonConfig)
    public void registerFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean)
    public void unregisterFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks)
    static final java.lang.String TAG
    static final java.lang.String TARGET_REQUEST_CODE_STATE_TAG
    static final java.lang.String TARGET_STATE_TAG
    static final java.lang.String VIEW_STATE_TAG
    static final java.lang.String USER_VISIBLE_HINT_TAG
    static final int ANIM_DUR
    public static final int ANIM_STYLE_OPEN_ENTER
    public static final int ANIM_STYLE_OPEN_EXIT
    public static final int ANIM_STYLE_CLOSE_ENTER
    public static final int ANIM_STYLE_CLOSE_EXIT
    public static final int ANIM_STYLE_FADE_ENTER
    public static final int ANIM_STYLE_FADE_EXIT
androidx.core.content.pm.ShortcutInfoCompat
io.realm.internal.objectstore.OsObjectBuilder$4:
    public void handleItem(long,java.lang.Short)
    public synthetic bridge void handleItem(long,java.lang.Object)
androidx.core.app.NotificationCompat$Extender
androidx.core.graphics.TypefaceCompatApi24Impl:
    private static final java.lang.String TAG
    private static final java.lang.String FONT_FAMILY_CLASS
    private static final java.lang.String ADD_FONT_WEIGHT_STYLE_METHOD
    private static final java.lang.String CREATE_FROM_FAMILIES_WITH_DEFAULT_METHOD
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup:
    private static final int MIN_SIZE
com.google.android.material.datepicker.Month:
    static com.google.android.material.datepicker.Month create(long)
androidx.core.view.LayoutInflaterCompat$Factory2Wrapper
androidx.appcompat.widget.DropDownListView:
    public int lookForSelectablePosition(int,boolean)
    public static final int INVALID_POSITION
    public static final int NO_POSITION
androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter
androidx.appcompat.graphics.drawable.DrawerArrowDrawable
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder
androidx.coordinatorlayout.widget.CoordinatorLayout:
    public void <init>(android.content.Context)
    public boolean doViewsOverlap(android.view.View,android.view.View)
    static final java.lang.String TAG
    private static final int TYPE_ON_INTERCEPT
    private static final int TYPE_ON_TOUCH
    static final int EVENT_PRE_DRAW
    static final int EVENT_NESTED_SCROLL
    static final int EVENT_VIEW_REMOVED
io.realm.annotations.LinkingObjects
androidx.transition.Styleable
androidx.transition.Styleable$ChangeBounds
com.google.android.material.transition.platform.FadeModeEvaluator
com.google.android.material.R$animator:
    private void <init>()
com.caverock.androidsvg.SVG$Box
androidx.appcompat.R$attr:
    private void <init>()
androidx.appcompat.view.menu.ListMenuItemView:
    public boolean showsIcon()
    private static final java.lang.String TAG
com.google.android.material.shape.CornerTreatment:
    public void getCornerPath(float,float,com.google.android.material.shape.ShapePath)
io.realm.rx.RealmObservableFactory$6$1
androidx.loader.R
com.android.volley.VolleyLog$MarkerLog:
    private static final long MIN_DURATION_FOR_LOGGING_MS
com.google.gson.Gson:
    private static void assertFullConsumption(java.lang.Object,com.google.gson.stream.JsonReader)
    public com.google.gson.GsonBuilder newBuilder()
    public com.google.gson.internal.Excluder excluder()
    public com.google.gson.FieldNamingStrategy fieldNamingStrategy()
    public boolean serializeNulls()
    public boolean htmlSafe()
    public com.google.gson.JsonElement toJsonTree(java.lang.Object)
    public com.google.gson.JsonElement toJsonTree(java.lang.Object,java.lang.reflect.Type)
    public java.lang.String toJson(java.lang.Object)
    public java.lang.String toJson(java.lang.Object,java.lang.reflect.Type)
    public void toJson(java.lang.Object,java.lang.Appendable)
    public void toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable)
    public void toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter)
    public java.lang.String toJson(com.google.gson.JsonElement)
    public void toJson(com.google.gson.JsonElement,java.lang.Appendable)
    public com.google.gson.stream.JsonWriter newJsonWriter(java.io.Writer)
    public com.google.gson.stream.JsonReader newJsonReader(java.io.Reader)
    public void toJson(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter)
    public java.lang.Object fromJson(java.lang.String,java.lang.Class)
    public java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)
    public java.lang.Object fromJson(java.io.Reader,java.lang.Class)
    public java.lang.Object fromJson(java.io.Reader,java.lang.reflect.Type)
    static final boolean DEFAULT_JSON_NON_EXECUTABLE
    static final boolean DEFAULT_LENIENT
    static final boolean DEFAULT_PRETTY_PRINT
    static final boolean DEFAULT_ESCAPE_HTML
    static final boolean DEFAULT_SERIALIZE_NULLS
    static final boolean DEFAULT_COMPLEX_MAP_KEYS
    static final boolean DEFAULT_SPECIALIZE_FLOAT_VALUES
    private static final java.lang.String JSON_NON_EXECUTABLE_PREFIX
androidx.appcompat.resources.R$drawable:
    private void <init>()
androidx.cardview.widget.CardViewImpl:
    public abstract void initialize(androidx.cardview.widget.CardViewDelegate,android.content.Context,android.content.res.ColorStateList,float,float,float)
    public abstract void updatePadding(androidx.cardview.widget.CardViewDelegate)
com.rollbar.Rollbar$6
com.rollbar.notifier.transformer.TransformerPipeline
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl:
    private static final long serialVersionUID
androidx.cursoradapter.R
io.realm.sync.Subscription$State
androidx.appcompat.widget.ActivityChooserModel$ActivitySorter
io.realm.rx.RealmObservableFactory$5
androidx.core.provider.FontsContractCompat:
    private void <init>()
    public static void resetCache()
    public static void requestFont(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler)
    private static void requestFontInternal(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler)
    public static android.graphics.Typeface buildTypeface(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[])
    public static final java.lang.String PARCEL_FONT_RESULTS
    static final int RESULT_CODE_PROVIDER_NOT_FOUND
    static final int RESULT_CODE_WRONG_CERTIFICATES
    private static final int BACKGROUND_THREAD_KEEP_ALIVE_DURATION_MS
androidx.core.content.FileProvider$SimplePathStrategy
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior:
    public void setAutoHideEnabled(boolean)
    public boolean isAutoHideEnabled()
    public void setAutoShrinkEnabled(boolean)
    public boolean isAutoShrinkEnabled()
    void setInternalAutoHideCallback(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback)
    void setInternalAutoShrinkCallback(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback)
    private static final boolean AUTO_HIDE_DEFAULT
    private static final boolean AUTO_SHRINK_DEFAULT
javax.annotation.MatchesPattern$Checker
com.google.android.material.transition.MaterialContainerTransform
com.caverock.androidsvg.SVG$SvgObject
androidx.core.app.AppOpsManagerCompat:
    private void <init>()
    public static int noteOp(android.content.Context,java.lang.String,int,java.lang.String)
    public static int noteOpNoThrow(android.content.Context,java.lang.String,int,java.lang.String)
    public static int noteProxyOp(android.content.Context,java.lang.String,java.lang.String)
    public static final int MODE_ALLOWED
    public static final int MODE_IGNORED
    public static final int MODE_ERRORED
    public static final int MODE_DEFAULT
androidx.recyclerview.widget.LinearLayoutManager:
    public void <init>(android.content.Context)
    private void logChildren()
    public boolean getRecycleChildrenOnDetach()
    public void setRecycleChildrenOnDetach(boolean)
    public boolean getStackFromEnd()
    public boolean getReverseLayout()
    public void scrollToPositionWithOffset(int,int)
    public void setSmoothScrollbarEnabled(boolean)
    public void setInitialPrefetchItemCount(int)
    public int getInitialPrefetchItemCount()
    public int findFirstCompletelyVisibleItemPosition()
    public int findLastCompletelyVisibleItemPosition()
    void validateChildOrder()
    public void prepareForDrop(android.view.View,android.view.View,int,int)
    private static final java.lang.String TAG
    static final boolean DEBUG
    public static final int HORIZONTAL
    public static final int VERTICAL
    public static final int INVALID_OFFSET
    private static final float MAX_SCROLL_FACTOR
androidx.core.app.Person$Builder
com.google.android.material.transition.MaterialContainerTransform$TransitionDirection
com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable
androidx.core.os.ParcelableCompat$ParcelableCompatCreatorHoneycombMR2
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat:
    private void printGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,int)
    public float getPixelSize()
    static final java.lang.String LOGTAG
    private static final java.lang.String SHAPE_CLIP_PATH
    private static final java.lang.String SHAPE_GROUP
    private static final java.lang.String SHAPE_PATH
    private static final java.lang.String SHAPE_VECTOR
    private static final int LINECAP_BUTT
    private static final int LINECAP_ROUND
    private static final int LINECAP_SQUARE
    private static final int LINEJOIN_MITER
    private static final int LINEJOIN_ROUND
    private static final int LINEJOIN_BEVEL
    private static final int MAX_CACHED_BITMAP_SIZE
    private static final boolean DBG_VECTOR_DRAWABLE
androidx.core.text.util.FindAddress$ZipRange
androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup:
    public abstract int getHorizontalOriginalOffset()
androidx.viewpager2.widget.ViewPager2$SmoothScrollToPosition
io.realm.io_realm_sync_permissions_RoleRealmProxy$ClassNameHelper
com.google.android.material.transition.platform.FadeModeEvaluators$4
com.google.android.material.button.MaterialButton:
    public void <init>(android.content.Context)
    public void addOnCheckedChangeListener(com.google.android.material.button.MaterialButton$OnCheckedChangeListener)
    public void removeOnCheckedChangeListener(com.google.android.material.button.MaterialButton$OnCheckedChangeListener)
    public void clearOnCheckedChangeListeners()
    public static final int ICON_GRAVITY_START
    public static final int ICON_GRAVITY_TEXT_START
    public static final int ICON_GRAVITY_END
    public static final int ICON_GRAVITY_TEXT_END
    private static final java.lang.String LOG_TAG
androidx.transition.Explode
androidx.transition.Visibility:
    public void <init>(android.content.Context,android.util.AttributeSet)
    public int getMode()
    public boolean isVisible(androidx.transition.TransitionValues)
    static final java.lang.String PROPNAME_VISIBILITY
    private static final java.lang.String PROPNAME_PARENT
    private static final java.lang.String PROPNAME_SCREEN_LOCATION
    public static final int MODE_IN
    public static final int MODE_OUT
com.google.android.material.tabs.TabItem
androidx.constraintlayout.solver.LinearSystem$Row:
    public abstract boolean isEmpty()
androidx.recyclerview.widget.RecyclerView$Orientation
io.realm.rx.RealmObservableFactory$14$2
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior:
    public synthetic bridge boolean isHorizontalOffsetEnabled()
    public synthetic bridge void setHorizontalOffsetEnabled(boolean)
    public synthetic bridge boolean isVerticalOffsetEnabled()
    public synthetic bridge void setVerticalOffsetEnabled(boolean)
    public synthetic bridge int getLeftAndRightOffset()
    public synthetic bridge boolean setLeftAndRightOffset(int)
androidx.core.app.NotificationCompat$MessagingStyle$Message
androidx.transition.SidePropagation
androidx.transition.MatrixUtils$1
androidx.appcompat.widget.Toolbar$SavedState:
    public void <init>(android.os.Parcel)
com.google.android.material.shape.MaterialShapeDrawable:
    public static com.google.android.material.shape.MaterialShapeDrawable createWithElevationOverlay(android.content.Context)
    public void <init>(com.google.android.material.shape.ShapePathModel)
    public void setShapedViewModel(com.google.android.material.shape.ShapePathModel)
    public com.google.android.material.shape.ShapePathModel getShapedViewModel()
    public android.content.res.ColorStateList getStrokeColor()
    public android.content.res.ColorStateList getStrokeTintList()
    public void setStrokeTint(android.content.res.ColorStateList)
    public void setStrokeTint(int)
    public float getStrokeWidth()
    public void setCornerSize(float)
    public void setCornerSize(com.google.android.material.shape.CornerSize)
    public boolean isPointInTransparentRegion(int,int)
    public int getShadowCompatibilityMode()
    public void setShadowCompatibilityMode(int)
    public boolean isShadowEnabled()
    public void setShadowEnabled(boolean)
    public boolean isElevationOverlayInitialized()
    public float getInterpolation()
    public void setTranslationZ(float)
    public void setZ(float)
    public int getShadowElevation()
    public void setShadowElevation(int)
    public int getShadowVerticalOffset()
    public void setShadowBitmapDrawingEnable(boolean)
    public void setEdgeIntersectionCheckEnable(boolean)
    public void setShadowVerticalOffset(int)
    public int getShadowCompatRotation()
    public void setShadowRadius(int)
    public float getScale()
    public void setScale(float)
    public void setUseTintColorForShadow(boolean)
    public void setShadowColor(int)
    public android.graphics.Paint$Style getPaintStyle()
    public void setPaintStyle(android.graphics.Paint$Style)
    public void getPathForSize(int,int,android.graphics.Path)
    private static final float SHADOW_RADIUS_MULTIPLIER
    private static final float SHADOW_OFFSET_MULTIPLIER
    public static final int SHADOW_COMPAT_MODE_DEFAULT
    public static final int SHADOW_COMPAT_MODE_NEVER
    public static final int SHADOW_COMPAT_MODE_ALWAYS
androidx.recyclerview.widget.RecyclerView$ItemAnimator:
    public void setMoveDuration(long)
    public void setAddDuration(long)
    public void setRemoveDuration(long)
    public void setChangeDuration(long)
    public final void dispatchAnimationStarted(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public void onAnimationStarted(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public final boolean isRunning(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener)
    public static final int FLAG_CHANGED
    public static final int FLAG_REMOVED
    public static final int FLAG_INVALIDATED
    public static final int FLAG_MOVED
    public static final int FLAG_APPEARED_IN_PRE_LAYOUT
com.google.android.material.tabs.TabLayoutMediator$ViewPagerOnTabSelectedListener
javax.annotation.meta.Exhaustive
androidx.recyclerview.widget.ItemTouchHelper$Callback$2
androidx.constraintlayout.solver.widgets.Chain:
    void <init>()
    private static final boolean DEBUG
androidx.core.internal.view.SupportMenu:
    public abstract void setGroupDividerEnabled(boolean)
    public static final int USER_MASK
    public static final int USER_SHIFT
    public static final int CATEGORY_MASK
    public static final int CATEGORY_SHIFT
    public static final int SUPPORTED_MODIFIERS_MASK
    public static final int FLAG_KEEP_OPEN_ON_SUBMENU_OPENED
com.caverock.androidsvg.SVG$Line
com.google.android.material.button.MaterialButtonToggleGroup
com.google.android.material.internal.ParcelableSparseArray
com.google.android.material.textfield.TextInputLayout:
    public void <init>(android.content.Context)
    public void setBoxCornerRadiiResources(int,int,int,int)
    public void setBoxCornerRadii(float,float,float,float)
    public boolean isHintEnabled()
    public boolean isErrorEnabled()
    public boolean isCounterEnabled()
    public boolean isHintAnimationEnabled()
    public boolean isStartIconCheckable()
    public boolean isEndIconCheckable()
    public void removeOnEndIconChangedListener(com.google.android.material.textfield.TextInputLayout$OnEndIconChangedListener)
    public void clearOnEndIconChangedListeners()
    public void removeOnEditTextAttachedListener(com.google.android.material.textfield.TextInputLayout$OnEditTextAttachedListener)
    public void clearOnEditTextAttachedListeners()
    public boolean isPasswordVisibilityToggleEnabled()
    public void passwordVisibilityToggleRequested(boolean)
    boolean cutoutIsOpen()
    final boolean isHelperTextDisplayed()
    private static final int LABEL_SCALE_ANIMATION_DURATION
    private static final int INVALID_MAX_LENGTH
    private static final java.lang.String LOG_TAG
    public static final int BOX_BACKGROUND_NONE
    public static final int BOX_BACKGROUND_FILLED
    public static final int BOX_BACKGROUND_OUTLINE
    public static final int END_ICON_CUSTOM
    public static final int END_ICON_NONE
    public static final int END_ICON_PASSWORD_TOGGLE
    public static final int END_ICON_CLEAR_TEXT
    public static final int END_ICON_DROPDOWN_MENU
com.google.android.material.datepicker.DateValidatorPointForward
androidx.core.view.LayoutInflaterFactory
com.caverock.androidsvg.SVG$PaintReference
com.google.android.material.transition.MaterialContainerTransform$ProgressThresholds
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup:
    public void setSpanIndexCacheEnabled(boolean)
    public void setSpanGroupIndexCacheEnabled(boolean)
    public boolean isSpanIndexCacheEnabled()
    public boolean isSpanGroupIndexCacheEnabled()
com.android.volley.VolleyError:
    public void <init>(java.lang.String)
    public void <init>(java.lang.String,java.lang.Throwable)
    public long getNetworkTimeMs()
io.realm.Realm$4
androidx.recyclerview.widget.FastScroller:
    public boolean isDragging()
    boolean isVisible()
    android.graphics.drawable.Drawable getHorizontalTrackDrawable()
    android.graphics.drawable.Drawable getHorizontalThumbDrawable()
    android.graphics.drawable.Drawable getVerticalTrackDrawable()
    android.graphics.drawable.Drawable getVerticalThumbDrawable()
    private static final int STATE_HIDDEN
    private static final int STATE_VISIBLE
    private static final int STATE_DRAGGING
    private static final int DRAG_NONE
    private static final int DRAG_X
    private static final int DRAG_Y
    private static final int ANIMATION_STATE_OUT
    private static final int ANIMATION_STATE_FADING_IN
    private static final int ANIMATION_STATE_IN
    private static final int ANIMATION_STATE_FADING_OUT
    private static final int SHOW_DURATION_MS
    private static final int HIDE_DELAY_AFTER_VISIBLE_MS
    private static final int HIDE_DELAY_AFTER_DRAGGING_MS
    private static final int HIDE_DURATION_MS
    private static final int SCROLLBAR_FULL_OPAQUE
com.caverock.androidsvg.CSSParser
io.realm.internal.OsResults$9
androidx.core.R$drawable
androidx.core.view.InputDeviceCompat
androidx.viewpager.widget.ViewPager$SimpleOnPageChangeListener
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat
com.google.android.material.bottomnavigation.BottomNavigationItemView
androidx.transition.TranslationAnimationCreator$TransitionPositionListener
androidx.core.provider.FontRequest:
    public void <init>(java.lang.String,java.lang.String,java.lang.String,int)
io.realm.internal.RealmObjectProxy$CacheData
androidx.core.graphics.TypefaceCompatApi28Impl:
    private static final java.lang.String CREATE_FROM_FAMILIES_WITH_DEFAULT_METHOD
    private static final int RESOLVE_BY_FONT_TABLE
    private static final java.lang.String DEFAULT_FAMILY
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span:
    public int findFirstVisibleItemPosition()
    public int findFirstCompletelyVisibleItemPosition()
    public int findLastVisibleItemPosition()
    public int findLastCompletelyVisibleItemPosition()
    int findOneVisibleChild(int,int,boolean)
    static final int INVALID_LINE
javax.annotation.meta.TypeQualifierNickname
androidx.core.content.pm.PermissionInfoCompat$ProtectionFlags
org.slf4j.helpers.NamedLoggerBase:
    public java.lang.String getName()
    protected java.lang.Object readResolve()
    protected java.lang.String name
    private static final long serialVersionUID
io.reactivex.android.MainThreadDisposable$1
androidx.loader.app.LoaderManagerImpl$LoaderInfo:
    void <init>(int,android.os.Bundle,androidx.loader.content.Loader,androidx.loader.content.Loader)
    androidx.loader.content.Loader setCallback(androidx.lifecycle.LifecycleOwner,androidx.loader.app.LoaderManager$LoaderCallbacks)
    boolean isCallbackWaitingForData()
    public void onLoadComplete(androidx.loader.content.Loader,java.lang.Object)
androidx.core.provider.FontsContractCompat$FontRequestCallback$FontRequestFailReason
io.reactivex.android.MainThreadDisposable
io.realm.ManagedListOperator:
    void <init>(io.realm.BaseRealm,io.realm.internal.OsList,java.lang.Class)
    private void appendNull()
    public abstract boolean forRealmModel()
    public final io.realm.internal.OsList getOsList()
    public final boolean isEmpty()
    protected abstract void checkValidValue(java.lang.Object)
    protected abstract void appendValue(java.lang.Object)
    protected void insertNull(int)
    protected abstract void insertValue(int,java.lang.Object)
    protected void setNull(int)
    protected abstract void setValue(int,java.lang.Object)
    final void move(int,int)
    final void delete(int)
    final void deleteLast()
    final void deleteAll()
    final io.realm.BaseRealm realm
    final io.realm.internal.OsList osList
    final java.lang.Class clazz
    static final java.lang.String NULL_OBJECTS_NOT_ALLOWED_MESSAGE
    static final java.lang.String INVALID_OBJECT_TYPE_MESSAGE
io.realm.RealmObjectSchema$Function
com.android.volley.NetworkResponse:
    public void <init>(int,byte[],java.util.Map,boolean)
    public void <init>(byte[])
androidx.recyclerview.widget.ItemTouchHelper$5
androidx.core.net.ConnectivityManagerCompat$RestrictBackgroundStatus
com.google.gson.LongSerializationPolicy$1:
    public com.google.gson.JsonElement serialize(java.lang.Long)
com.caverock.androidsvg.SVG$Svg
com.google.gson.internal.LinkedHashTreeMap$EntrySet
com.google.android.material.R$integer:
    private void <init>()
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB:
    public void refreshVisibility()
androidx.versionedparcelable.VersionedParcelize
com.google.android.material.shape.CornerFamily
androidx.recyclerview.widget.ChildHelper:
    private static final boolean DEBUG
    private static final java.lang.String TAG
androidx.recyclerview.widget.ThreadUtil$MainThreadCallback
com.getkeepsafe.relinker.ReLinker:
    public static void loadLibrary(android.content.Context,java.lang.String)
    public static void loadLibrary(android.content.Context,java.lang.String,com.getkeepsafe.relinker.ReLinker$LoadListener)
    public static com.getkeepsafe.relinker.ReLinkerInstance force()
    public static com.getkeepsafe.relinker.ReLinkerInstance log(com.getkeepsafe.relinker.ReLinker$Logger)
    public static com.getkeepsafe.relinker.ReLinkerInstance recursively()
    private void <init>()
com.caverock.androidsvg.SVG$SvgConditionalContainer
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator:
    void <init>(androidx.core.graphics.PathParser$PathDataNode[])
com.google.android.material.shape.ShapePath$PathQuadOperation
androidx.lifecycle.ViewModelProvider$NewInstanceFactory
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams:
    public void <init>(androidx.constraintlayout.widget.ConstraintLayout$LayoutParams)
    public void reset()
    public static final int MATCH_CONSTRAINT
    public static final int PARENT_ID
    public static final int UNSET
    public static final int HORIZONTAL
    public static final int VERTICAL
    public static final int LEFT
    public static final int RIGHT
    public static final int TOP
    public static final int BOTTOM
    public static final int BASELINE
    public static final int START
    public static final int END
    public static final int MATCH_CONSTRAINT_WRAP
    public static final int MATCH_CONSTRAINT_SPREAD
    public static final int MATCH_CONSTRAINT_PERCENT
    public static final int CHAIN_SPREAD
    public static final int CHAIN_SPREAD_INSIDE
    public static final int CHAIN_PACKED
androidx.viewpager2.widget.ViewPager2$3
androidx.lifecycle.ViewModelProvider:
    public void <init>(androidx.lifecycle.ViewModelStoreOwner,androidx.lifecycle.ViewModelProvider$Factory)
    private static final java.lang.String DEFAULT_KEY
org.slf4j.helpers.BasicMarkerFactory
androidx.loader.app.LoaderManagerImpl:
    private androidx.loader.content.Loader createAndInstallLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks,androidx.loader.content.Loader)
    public androidx.loader.content.Loader initLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks)
    public androidx.loader.content.Loader restartLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks)
    public void destroyLoader(int)
    public androidx.loader.content.Loader getLoader(int)
    public boolean hasRunningLoaders()
    static final java.lang.String TAG
androidx.loader.app.LoaderManager:
    public static void enableDebugLogging(boolean)
    public abstract androidx.loader.content.Loader initLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks)
    public abstract androidx.loader.content.Loader restartLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks)
    public abstract void destroyLoader(int)
    public abstract androidx.loader.content.Loader getLoader(int)
    public boolean hasRunningLoaders()
com.google.android.material.slider.BaseSlider$SliderState$1
com.google.android.material.shape.TriangleEdgeTreatment
com.rollbar.notifier.provider.server.ServerProvider
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl:
    public void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
    public boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
    public void onCloseSubMenu(androidx.appcompat.view.menu.SubMenuBuilder)
androidx.loader.R$integer
androidx.core.graphics.TypefaceCompatApi26Impl:
    private static final java.lang.String TAG
    private static final java.lang.String FONT_FAMILY_CLASS
    private static final java.lang.String ADD_FONT_FROM_ASSET_MANAGER_METHOD
    private static final java.lang.String ADD_FONT_FROM_BUFFER_METHOD
    private static final java.lang.String CREATE_FROM_FAMILIES_WITH_DEFAULT_METHOD
    private static final java.lang.String FREEZE_METHOD
    private static final java.lang.String ABORT_CREATION_METHOD
    private static final int RESOLVE_BY_FONT_TABLE
androidx.core.view.DragStartHelper$2
androidx.arch.core.util.Function
androidx.recyclerview.widget.OrientationHelper$1:
    public void offsetChild(android.view.View,int)
com.android.volley.ClientError:
    public void <init>()
io.realm.internal.Util:
    public void <init>()
    public static java.lang.String getStackTrace(java.lang.Throwable)
    public static boolean isEmulator()
androidx.annotation.RequiresPermission$Write
androidx.core.graphics.drawable.IconCompat:
    public static androidx.core.graphics.drawable.IconCompat createWithResource(android.content.Context,int)
    public static androidx.core.graphics.drawable.IconCompat createWithResource(android.content.res.Resources,java.lang.String,int)
    public static androidx.core.graphics.drawable.IconCompat createWithBitmap(android.graphics.Bitmap)
    public static androidx.core.graphics.drawable.IconCompat createWithAdaptiveBitmap(android.graphics.Bitmap)
    public static androidx.core.graphics.drawable.IconCompat createWithData(byte[],int,int)
    public static androidx.core.graphics.drawable.IconCompat createWithContentUri(java.lang.String)
    public static androidx.core.graphics.drawable.IconCompat createWithContentUri(android.net.Uri)
    private void <init>(int)
    private android.graphics.drawable.Drawable loadDrawableInner(android.content.Context)
    private static android.content.res.Resources getResources(android.content.Context,java.lang.String)
    public static androidx.core.graphics.drawable.IconCompat createFromBundle(android.os.Bundle)
    public static androidx.core.graphics.drawable.IconCompat createFromIcon(android.content.Context,android.graphics.drawable.Icon)
    public static androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)
    public static androidx.core.graphics.drawable.IconCompat createFromIconOrNullIfZeroResId(android.graphics.drawable.Icon)
    private static int getType(android.graphics.drawable.Icon)
    private static android.net.Uri getUri(android.graphics.drawable.Icon)
    static android.graphics.Bitmap createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean)
    public int getType()
    public android.graphics.Bitmap getBitmap()
    public android.net.Uri getUri()
    public androidx.core.graphics.drawable.IconCompat setTint(int)
    public androidx.core.graphics.drawable.IconCompat setTintList(android.content.res.ColorStateList)
    public androidx.core.graphics.drawable.IconCompat setTintMode(android.graphics.PorterDuff$Mode)
    public android.graphics.drawable.Icon toIcon()
    public void checkResource(android.content.Context)
    public android.graphics.drawable.Drawable loadDrawable(android.content.Context)
    public void addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable,android.content.Context)
    public android.os.Bundle toBundle()
    private static final java.lang.String TAG
    public static final int TYPE_UNKNOWN
    private static final float ADAPTIVE_ICON_INSET_FACTOR
    private static final float DEFAULT_VIEW_PORT_SCALE
    private static final float ICON_DIAMETER_FACTOR
    private static final float BLUR_FACTOR
    private static final float KEY_SHADOW_OFFSET_FACTOR
    private static final int KEY_SHADOW_ALPHA
    private static final int AMBIENT_SHADOW_ALPHA
    private static final java.lang.String EXTRA_TYPE
    private static final java.lang.String EXTRA_OBJ
    private static final java.lang.String EXTRA_INT1
    private static final java.lang.String EXTRA_INT2
    private static final java.lang.String EXTRA_TINT_LIST
    private static final java.lang.String EXTRA_TINT_MODE
com.google.android.material.bottomnavigation.BottomNavigationMenu
androidx.core.content.res.GradientColorInflaterCompat:
    private void <init>()
    static android.graphics.Shader createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)
    private static final int TILE_MODE_CLAMP
    private static final int TILE_MODE_REPEAT
    private static final int TILE_MODE_MIRROR
androidx.constraintlayout.widget.Group
com.guilhermedaros.museunfc.Models.Response:
    public void setSucesso(java.lang.Boolean)
    public void setMensagem(java.lang.String)
    public java.lang.Integer getCodigo()
    public void setCodigo(java.lang.Integer)
    private java.lang.Integer codigo
com.google.android.material.shadow.ShadowDrawableWrapper
com.google.android.material.textview.MaterialTextView:
    public void <init>(android.content.Context)
androidx.viewpager2.widget.ScrollEventAdapter
io.realm.io_realm_sync_permissions_RealmPermissionsRealmProxy$RealmPermissionsColumnInfo:
    void <init>(io.realm.internal.OsSchemaInfo)
    void <init>(io.realm.internal.ColumnInfo,boolean)
    protected final io.realm.internal.ColumnInfo copy(boolean)
androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments:
    public int getGranularity()
    public boolean getExtendSelection()
io.realm.MutableRealmInteger$Unmanaged
androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener
androidx.customview.view.AbsSavedState:
    protected void <init>(android.os.Parcel)
com.google.android.material.button.MaterialButton$IconGravity
androidx.transition.Slide$6
com.caverock.androidsvg.SVG$PolyLine
com.google.android.material.transition.TransitionListenerAdapter
androidx.appcompat.app.AppCompatDelegate$NightMode
androidx.core.os.LocaleListPlatformWrapper
androidx.cursoradapter.widget.SimpleCursorAdapter
androidx.core.internal.view.SupportMenuItem:
    public abstract boolean requiresActionButton()
    public abstract boolean requiresOverflow()
    public static final int SHOW_AS_ACTION_NEVER
    public static final int SHOW_AS_ACTION_IF_ROOM
    public static final int SHOW_AS_ACTION_ALWAYS
    public static final int SHOW_AS_ACTION_WITH_TEXT
    public static final int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
com.google.android.material.slider.BaseSlider
com.android.volley.R
com.google.android.material.transition.platform.FadeModeEvaluators
androidx.customview.R$layout
io.realm.internal.Row:
    public abstract long getColumnCount()
    public abstract long getLink(long)
    public abstract void setLong(long,long)
    public abstract void setBoolean(long,boolean)
    public abstract void setFloat(long,float)
    public abstract void setDouble(long,double)
    public abstract void setDate(long,java.util.Date)
    public abstract void setString(long,java.lang.String)
    public abstract void setBinaryByteArray(long,byte[])
    public abstract void setLink(long,long)
    public abstract void nullifyLink(long)
    public abstract void setNull(long)
    public abstract void checkIfAttached()
    public abstract boolean hasColumn(java.lang.String)
    public abstract io.realm.internal.Row freeze(io.realm.internal.OsSharedRealm)
    public abstract boolean isLoaded()
com.google.android.material.snackbar.BaseTransientBottomBar$9
com.google.android.material.bottomsheet.BottomSheetDialog$2
com.google.android.material.tabs.TabLayout$OnTabSelectedListener
androidx.appcompat.view.menu.MenuItemImpl:
    java.lang.Runnable getCallback()
    public android.view.MenuItem setCallback(java.lang.Runnable)
    public boolean requiresOverflow()
    private static final java.lang.String TAG
    private static final int SHOW_AS_ACTION_MASK
    private static final int CHECKABLE
    private static final int CHECKED
    private static final int EXCLUSIVE
    private static final int HIDDEN
    private static final int ENABLED
    private static final int IS_ACTION
    static final int NO_ICON
com.guilhermedaros.museunfc.R$dimen
com.google.android.material.tabs.TabLayoutMediator$TabConfigurationStrategy
androidx.transition.GhostViewHolder
androidx.recyclerview.widget.SortedList$Callback
io.realm.internal.PendingRow$1
com.caverock.androidsvg.SVG$TRef
androidx.fragment.app.FragmentManager$BackStackEntry
androidx.drawerlayout.R
androidx.vectordrawable.R$drawable
androidx.core.view.DragStartHelper
com.google.android.material.datepicker.MaterialDatePicker$1
io.realm.DefaultCompactOnLaunchCallback
androidx.versionedparcelable.VersionedParcel:
    private void writeCollection(java.util.Collection,int)
    private void writeCollection(java.util.Collection)
    private int getType(java.lang.Object)
    private void writeSerializable(java.io.Serializable)
    private int readExceptionCode()
    private java.lang.Exception readException(int,java.lang.String)
    protected static java.lang.Throwable getRootCause(java.lang.Throwable)
    private java.lang.Exception createException(int,java.lang.String)
    private java.util.Collection readCollection(java.util.Collection)
    protected abstract void writeByteArray(byte[],int,int)
    protected abstract void writeLong(long)
    protected abstract void writeFloat(float)
    protected abstract void writeDouble(double)
    protected abstract void writeStrongBinder(android.os.IBinder)
    protected abstract void writeStrongInterface(android.os.IInterface)
    protected abstract void writeBundle(android.os.Bundle)
    protected abstract long readLong()
    protected abstract float readFloat()
    protected abstract double readDouble()
    protected abstract android.os.IBinder readStrongBinder()
    protected abstract android.os.Bundle readBundle()
    public void writeStrongInterface(android.os.IInterface,int)
    public void writeBundle(android.os.Bundle,int)
    public void writeByteArray(byte[],int,int,int)
    public void writeLong(long,int)
    public void writeFloat(float,int)
    public void writeDouble(double,int)
    public void writeStrongBinder(android.os.IBinder,int)
    public long readLong(long,int)
    public float readFloat(float,int)
    public double readDouble(double,int)
    public android.os.IBinder readStrongBinder(android.os.IBinder,int)
    public android.os.Bundle readBundle(android.os.Bundle,int)
    public void writeByte(byte,int)
    public void writeSize(android.util.Size,int)
    public void writeSizeF(android.util.SizeF,int)
    public void writeSparseBooleanArray(android.util.SparseBooleanArray,int)
    public void writeBooleanArray(boolean[],int)
    protected void writeBooleanArray(boolean[])
    public boolean[] readBooleanArray(boolean[],int)
    protected boolean[] readBooleanArray()
    public void writeCharArray(char[],int)
    public char[] readCharArray(char[],int)
    public void writeIntArray(int[],int)
    protected void writeIntArray(int[])
    public int[] readIntArray(int[],int)
    protected int[] readIntArray()
    public void writeLongArray(long[],int)
    protected void writeLongArray(long[])
    public long[] readLongArray(long[],int)
    protected long[] readLongArray()
    public void writeFloatArray(float[],int)
    protected void writeFloatArray(float[])
    public float[] readFloatArray(float[],int)
    protected float[] readFloatArray()
    public void writeDoubleArray(double[],int)
    protected void writeDoubleArray(double[])
    public double[] readDoubleArray(double[],int)
    protected double[] readDoubleArray()
    public void writeSet(java.util.Set,int)
    public void writeList(java.util.List,int)
    public void writeMap(java.util.Map,int)
    public void writeArray(java.lang.Object[],int)
    protected void writeArray(java.lang.Object[])
    public void writeSerializable(java.io.Serializable,int)
    public void writeException(java.lang.Exception,int)
    protected void writeNoException()
    public java.lang.Exception readException(java.lang.Exception,int)
    public byte readByte(byte,int)
    public android.util.Size readSize(android.util.Size,int)
    public android.util.SizeF readSizeF(android.util.SizeF,int)
    public android.util.SparseBooleanArray readSparseBooleanArray(android.util.SparseBooleanArray,int)
    public java.util.Set readSet(java.util.Set,int)
    public java.util.List readList(java.util.List,int)
    public java.util.Map readMap(java.util.Map,int)
    public java.lang.Object[] readArray(java.lang.Object[],int)
    protected java.lang.Object[] readArray(java.lang.Object[])
    protected java.io.Serializable readSerializable()
    private static final java.lang.String TAG
    private static final int EX_SECURITY
    private static final int EX_BAD_PARCELABLE
    private static final int EX_ILLEGAL_ARGUMENT
    private static final int EX_NULL_POINTER
    private static final int EX_ILLEGAL_STATE
    private static final int EX_NETWORK_MAIN_THREAD
    private static final int EX_UNSUPPORTED_OPERATION
    private static final int EX_PARCELABLE
    private static final int TYPE_VERSIONED_PARCELABLE
    private static final int TYPE_PARCELABLE
    private static final int TYPE_SERIALIZABLE
    private static final int TYPE_STRING
    private static final int TYPE_BINDER
    private static final int TYPE_INTEGER
    private static final int TYPE_FLOAT
androidx.transition.ChangeTransform$1
androidx.core.text.TextDirectionHeuristicCompat:
    public abstract boolean isRtl(char[],int,int)
androidx.core.app.SharedElementCallback:
    public void <init>()
    private static android.graphics.Bitmap createDrawableBitmap(android.graphics.drawable.Drawable)
    public void onRejectSharedElements(java.util.List)
    public android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)
    public android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable)
    public void onSharedElementsArrived(java.util.List,java.util.List,androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener)
    private android.graphics.Matrix mTempMatrix
    private static final int MAX_IMAGE_SIZE
    private static final java.lang.String BUNDLE_SNAPSHOT_BITMAP
    private static final java.lang.String BUNDLE_SNAPSHOT_IMAGE_SCALETYPE
    private static final java.lang.String BUNDLE_SNAPSHOT_IMAGE_MATRIX
androidx.core.graphics.drawable.IconCompat$IconType
android.support.v4.os.IResultReceiver
androidx.recyclerview.widget.SortedListAdapterCallback
com.caverock.androidsvg.SVG$Polygon
androidx.transition.Styleable$ArcMotion
com.google.android.material.transition.MaterialContainerTransform$TransitionDrawable$1
androidx.viewpager2.widget.ViewPager2$ScrollState
com.google.android.material.shape.AbsoluteCornerSize:
    public float getCornerSize()
com.google.android.material.floatingactionbutton.BorderDrawable$1
androidx.transition.ViewUtilsApi21:
    public void setAnimationMatrix(android.view.View,android.graphics.Matrix)
androidx.transition.R$drawable
androidx.transition.Styleable$ChangeTransform
com.google.android.material.snackbar.Snackbar
com.google.android.material.R$color:
    private void <init>()
com.google.android.material.internal.ViewGroupOverlayApi14
androidx.core.view.PointerIconCompat
androidx.appcompat.view.SupportMenuInflater$MenuState:
    private static final int defaultGroupId
    private static final int defaultItemId
    private static final int defaultItemCategory
    private static final int defaultItemOrder
    private static final int defaultItemCheckable
    private static final boolean defaultItemChecked
    private static final boolean defaultItemVisible
    private static final boolean defaultItemEnabled
androidx.annotation.ColorInt
io.realm.rx.RealmObservableFactory$11
androidx.recyclerview.widget.GridLayoutManager$LayoutParams:
    public void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams)
    public static final int INVALID_SPAN_ID
com.caverock.androidsvg.PreserveAspectRatio$Scale
androidx.transition.Styleable$Fade
androidx.appcompat.view.menu.StandardMenuPopup:
    public android.os.Parcelable onSaveInstanceState()
    public void onRestoreInstanceState(android.os.Parcelable)
com.google.android.material.slider.BaseSlider$AccessibilityEventSender
com.google.gson.LongSerializationPolicy:
    public abstract com.google.gson.JsonElement serialize(java.lang.Long)
com.google.android.material.transition.platform.MaterialContainerTransform$1
androidx.appcompat.widget.DialogTitle:
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public void <init>(android.content.Context)
androidx.core.app.ActivityOptionsCompat
androidx.cardview.R$style
androidx.transition.RectEvaluator:
    void <init>(android.graphics.Rect)
androidx.recyclerview.widget.AsyncListUtil$1
com.google.android.material.circularreveal.CircularRevealLinearLayout
com.google.android.material.shape.ShapePath:
    public void <init>(float,float)
    public void quadToPoint(float,float,float,float)
    public void cubicToPoint(float,float,float,float,float,float)
    private static final float ANGLE_UP
    protected static final float ANGLE_LEFT
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout:
    protected void <init>(android.content.Context)
androidx.core.text.PrecomputedTextCompat:
    public static androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)
    private void <init>(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,int[])
    private void <init>(android.text.PrecomputedText,androidx.core.text.PrecomputedTextCompat$Params)
    public static java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)
    public int getParagraphCount()
    public int getParagraphStart(int)
    public int getParagraphEnd(int)
    private final int[] mParagraphEnds
    private static final char LINE_FEED
io.realm.internal.ManageableObject
androidx.appcompat.app.ActionBar$TabListener
io.realm.rx.RealmObservableFactory$10$1
com.google.android.material.internal.ParcelableSparseBooleanArray$1
com.google.android.material.snackbar.BaseTransientBottomBar$12
com.google.android.material.button.MaterialButtonToggleGroup$CheckedStateTracker
com.caverock.androidsvg.SVG$SvgPreserveAspectRatioContainer
androidx.appcompat.widget.AbsActionBarView:
    void <init>(android.content.Context)
    public void animateToVisibility(int)
    public boolean showOverflowMenu()
    public void postShowOverflowMenu()
    public boolean hideOverflowMenu()
    public boolean isOverflowMenuShowing()
    public boolean isOverflowMenuShowPending()
    public boolean isOverflowReserved()
    public boolean canShowOverflowMenu()
    public void dismissPopupMenus()
    private static final int FADE_DURATION
androidx.drawerlayout.R$style
androidx.core.app.NotificationCompat$StreamType
com.google.android.material.slider.RangeSlider$OnChangeListener
com.google.android.material.R$drawable:
    private void <init>()
org.slf4j.event.SubstituteLoggingEvent:
    public org.slf4j.event.Level getLevel()
    public org.slf4j.Marker getMarker()
    public java.lang.String getLoggerName()
    public java.lang.String getMessage()
    public java.lang.Object[] getArgumentArray()
    public long getTimeStamp()
    public java.lang.String getThreadName()
    public java.lang.Throwable getThrowable()
androidx.core.view.LayoutInflaterCompat:
    private void <init>()
    public static void setFactory(android.view.LayoutInflater,androidx.core.view.LayoutInflaterFactory)
    public static androidx.core.view.LayoutInflaterFactory getFactory(android.view.LayoutInflater)
    private static final java.lang.String TAG
com.rollbar.android.provider.PersonProvider
androidx.appcompat.widget.ActivityChooserView$2
androidx.core.view.MotionEventCompat:
    public static int getActionMasked(android.view.MotionEvent)
    public static int getActionIndex(android.view.MotionEvent)
    public static int findPointerIndex(android.view.MotionEvent,int)
    public static int getPointerId(android.view.MotionEvent,int)
    public static float getX(android.view.MotionEvent,int)
    public static float getY(android.view.MotionEvent,int)
    public static int getPointerCount(android.view.MotionEvent)
    public static int getSource(android.view.MotionEvent)
    public static float getAxisValue(android.view.MotionEvent,int)
    public static float getAxisValue(android.view.MotionEvent,int,int)
    public static int getButtonState(android.view.MotionEvent)
    private void <init>()
    public static final int ACTION_MASK
    public static final int ACTION_POINTER_DOWN
    public static final int ACTION_POINTER_UP
    public static final int ACTION_HOVER_MOVE
    public static final int ACTION_SCROLL
    public static final int ACTION_POINTER_INDEX_MASK
    public static final int ACTION_POINTER_INDEX_SHIFT
    public static final int ACTION_HOVER_ENTER
    public static final int ACTION_HOVER_EXIT
    public static final int AXIS_X
    public static final int AXIS_Y
    public static final int AXIS_PRESSURE
    public static final int AXIS_SIZE
    public static final int AXIS_TOUCH_MAJOR
    public static final int AXIS_TOUCH_MINOR
    public static final int AXIS_TOOL_MAJOR
    public static final int AXIS_TOOL_MINOR
    public static final int AXIS_ORIENTATION
    public static final int AXIS_VSCROLL
    public static final int AXIS_HSCROLL
    public static final int AXIS_Z
    public static final int AXIS_RX
    public static final int AXIS_RY
    public static final int AXIS_RZ
    public static final int AXIS_HAT_X
    public static final int AXIS_HAT_Y
    public static final int AXIS_LTRIGGER
    public static final int AXIS_RTRIGGER
    public static final int AXIS_THROTTLE
    public static final int AXIS_RUDDER
    public static final int AXIS_WHEEL
    public static final int AXIS_GAS
    public static final int AXIS_BRAKE
    public static final int AXIS_DISTANCE
    public static final int AXIS_TILT
    public static final int AXIS_SCROLL
    public static final int AXIS_RELATIVE_X
    public static final int AXIS_RELATIVE_Y
    public static final int AXIS_GENERIC_1
    public static final int AXIS_GENERIC_2
    public static final int AXIS_GENERIC_3
    public static final int AXIS_GENERIC_4
    public static final int AXIS_GENERIC_5
    public static final int AXIS_GENERIC_6
    public static final int AXIS_GENERIC_7
    public static final int AXIS_GENERIC_8
    public static final int AXIS_GENERIC_9
    public static final int AXIS_GENERIC_10
    public static final int AXIS_GENERIC_11
    public static final int AXIS_GENERIC_12
    public static final int AXIS_GENERIC_13
    public static final int AXIS_GENERIC_14
    public static final int AXIS_GENERIC_15
    public static final int AXIS_GENERIC_16
    public static final int BUTTON_PRIMARY
androidx.core.app.JobIntentService$CompatJobEngine
androidx.core.view.NestedScrollingChildHelper:
    public boolean dispatchNestedScroll(int,int,int,int,int[],int)
    public void onDetachedFromWindow()
    public void onStopNestedScroll(android.view.View)
androidx.vectordrawable.animated.R$id
androidx.core.view.DragAndDropPermissionsCompat
androidx.transition.Styleable$PatternPathMotion
com.google.android.material.internal.CollapsingTextHelper:
    public void setCollapsedTextSize(float)
    public int getExpandedTextGravity()
    public int getCollapsedTextGravity()
    public void setExpandedTextAppearance(int)
    public void setExpandedTypeface(android.graphics.Typeface)
    public android.graphics.Typeface getCollapsedTypeface()
    public android.graphics.Typeface getExpandedTypeface()
    public float getCollapsedTextSize()
    public float getExpandedTextSize()
    public java.lang.CharSequence getText()
    public void setMaxLines(int)
    public int getMaxLines()
    public android.content.res.ColorStateList getExpandedTextColor()
    private static final java.lang.String TAG
    private static final java.lang.String ELLIPSIS_NORMAL
    private static final boolean DEBUG_DRAW
androidx.customview.R$dimen
androidx.core.provider.FontsContractCompat$4$5
androidx.appcompat.widget.AppCompatRadioButton:
    public void <init>(android.content.Context)
androidx.core.content.ContextCompat$LegacyServiceMapHolder
androidx.drawerlayout.R$attr
androidx.vectordrawable.R
androidx.appcompat.app.AppCompatDelegateImpl:
    void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback)
    void <init>(android.content.Context,android.app.Activity,androidx.appcompat.app.AppCompatCallback)
    public boolean hasWindowFeature(int)
    public void setHandleNativeActionModesEnabled(boolean)
    android.view.ViewGroup getSubDecor()
    public void setLocalNightMode(int)
    public final androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate()
    private static final boolean DEBUG
    static final java.lang.String EXCEPTION_HANDLER_MESSAGE_SUFFIX
io.realm.rx.RealmObservableFactory$7$2
com.google.android.material.snackbar.BaseTransientBottomBar$BehaviorDelegate:
    public void setBaseTransientBottomBar(com.google.android.material.snackbar.BaseTransientBottomBar)
com.caverock.androidsvg.CSSParser$Rule
androidx.viewpager2.widget.MarginPageTransformer
androidx.activity.R$attr
androidx.recyclerview.R$dimen:
    private void <init>()
com.google.android.material.circularreveal.CircularRevealRelativeLayout
com.google.android.material.floatingactionbutton.FloatingActionButton$ShadowDelegateImpl:
    public float getRadius()
io.realm.RealmObject:
    public static void deleteFromRealm(io.realm.RealmModel)
    public static io.realm.RealmModel freeze(io.realm.RealmModel)
    public static boolean isLoaded(io.realm.RealmModel)
    public static boolean isManaged(io.realm.RealmModel)
    public static io.realm.Realm getRealm(io.realm.RealmModel)
    public static boolean load(io.realm.RealmModel)
    public static void addChangeListener(io.realm.RealmModel,io.realm.RealmObjectChangeListener)
    public static void addChangeListener(io.realm.RealmModel,io.realm.RealmChangeListener)
    public static void removeChangeListener(io.realm.RealmModel,io.realm.RealmObjectChangeListener)
    public static void removeChangeListener(io.realm.RealmModel,io.realm.RealmChangeListener)
    public static void removeAllChangeListeners(io.realm.RealmModel)
    public static io.reactivex.Flowable asFlowable(io.realm.RealmModel)
    public static io.reactivex.Observable asChangesetObservable(io.realm.RealmModel)
    public final void deleteFromRealm()
    public final boolean isValid()
    public final boolean isFrozen()
    public final io.realm.RealmModel freeze()
    public final boolean isLoaded()
    public boolean isManaged()
    public io.realm.Realm getRealm()
    public final boolean load()
    public final void addChangeListener(io.realm.RealmObjectChangeListener)
    public final void addChangeListener(io.realm.RealmChangeListener)
    public final void removeChangeListener(io.realm.RealmObjectChangeListener)
    public final void removeChangeListener(io.realm.RealmChangeListener)
    public final void removeAllChangeListeners()
    public final io.reactivex.Flowable asFlowable()
    public final io.reactivex.Observable asChangesetObservable()
    static final java.lang.String MSG_NULL_OBJECT
    static final java.lang.String MSG_DELETED_OBJECT
    static final java.lang.String MSG_DYNAMIC_OBJECT
androidx.annotation.Size
androidx.cursoradapter.widget.SimpleCursorAdapter$CursorToStringConverter
androidx.constraintlayout.solver.widgets.ConstraintTableLayout$VerticalSlice
androidx.coordinatorlayout.R$string
io.realm.DoubleListOperator
com.google.android.material.animation.MatrixEvaluator:
    public synthetic bridge java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)
com.google.android.material.snackbar.BaseTransientBottomBar
com.google.android.material.tabs.TabLayout$ViewPagerOnTabSelectedListener
com.google.android.material.datepicker.RangeDateSelector
androidx.vectordrawable.animated.R$drawable
com.google.android.material.transition.platform.ScaleProvider
io.realm.ProxyState:
    public void <init>()
    public boolean getAcceptDefaultValue$realm()
    public java.util.List getExcludeFields$realm()
    public void addChangeListener(io.realm.RealmObjectChangeListener)
    public void removeChangeListener(io.realm.RealmObjectChangeListener)
    public void removeAllChangeListeners()
    public boolean isUnderConstruction()
    public boolean isLoaded()
    public void load()
    public void checkValidObject(io.realm.RealmModel)
androidx.viewpager2.widget.CompositeOnPageChangeCallback
androidx.annotation.StringDef
androidx.core.graphics.TypefaceCompatUtil:
    private void <init>()
    private static final java.lang.String TAG
    private static final java.lang.String CACHE_FILE_PREFIX
com.android.volley.toolbox.ImageLoader$BatchedImageRequest
org.slf4j.helpers.SubstituteLogger:
    public boolean isTraceEnabled()
    public void trace(java.lang.String)
    public void trace(java.lang.String,java.lang.Object)
    public void trace(java.lang.String,java.lang.Object,java.lang.Object)
    public varargs void trace(java.lang.String,java.lang.Object[])
    public void trace(java.lang.String,java.lang.Throwable)
    public boolean isTraceEnabled(org.slf4j.Marker)
    public void trace(org.slf4j.Marker,java.lang.String)
    public void trace(org.slf4j.Marker,java.lang.String,java.lang.Object)
    public void trace(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)
    public varargs void trace(org.slf4j.Marker,java.lang.String,java.lang.Object[])
    public void trace(org.slf4j.Marker,java.lang.String,java.lang.Throwable)
    public boolean isDebugEnabled()
    public void debug(java.lang.String)
    public void debug(java.lang.String,java.lang.Object,java.lang.Object)
    public varargs void debug(java.lang.String,java.lang.Object[])
    public void debug(java.lang.String,java.lang.Throwable)
    public boolean isDebugEnabled(org.slf4j.Marker)
    public void debug(org.slf4j.Marker,java.lang.String)
    public void debug(org.slf4j.Marker,java.lang.String,java.lang.Object)
    public void debug(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)
    public varargs void debug(org.slf4j.Marker,java.lang.String,java.lang.Object[])
    public void debug(org.slf4j.Marker,java.lang.String,java.lang.Throwable)
    public boolean isInfoEnabled()
    public void info(java.lang.String)
    public void info(java.lang.String,java.lang.Object)
    public void info(java.lang.String,java.lang.Object,java.lang.Object)
    public varargs void info(java.lang.String,java.lang.Object[])
    public void info(java.lang.String,java.lang.Throwable)
    public boolean isInfoEnabled(org.slf4j.Marker)
    public void info(org.slf4j.Marker,java.lang.String)
    public void info(org.slf4j.Marker,java.lang.String,java.lang.Object)
    public void info(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)
    public varargs void info(org.slf4j.Marker,java.lang.String,java.lang.Object[])
    public void info(org.slf4j.Marker,java.lang.String,java.lang.Throwable)
    public boolean isWarnEnabled()
    public void warn(java.lang.String)
    public void warn(java.lang.String,java.lang.Object)
    public void warn(java.lang.String,java.lang.Object,java.lang.Object)
    public varargs void warn(java.lang.String,java.lang.Object[])
    public void warn(java.lang.String,java.lang.Throwable)
    public boolean isWarnEnabled(org.slf4j.Marker)
    public void warn(org.slf4j.Marker,java.lang.String)
    public void warn(org.slf4j.Marker,java.lang.String,java.lang.Object)
    public void warn(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)
    public varargs void warn(org.slf4j.Marker,java.lang.String,java.lang.Object[])
    public void warn(org.slf4j.Marker,java.lang.String,java.lang.Throwable)
    public boolean isErrorEnabled()
    public void error(java.lang.String)
    public void error(java.lang.String,java.lang.Object,java.lang.Object)
    public varargs void error(java.lang.String,java.lang.Object[])
    public boolean isErrorEnabled(org.slf4j.Marker)
    public void error(org.slf4j.Marker,java.lang.String)
    public void error(org.slf4j.Marker,java.lang.String,java.lang.Object)
    public void error(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)
    public varargs void error(org.slf4j.Marker,java.lang.String,java.lang.Object[])
    public void error(org.slf4j.Marker,java.lang.String,java.lang.Throwable)
com.rollbar.jvmti.CacheFrame
androidx.appcompat.app.ResourcesFlusher:
    private void <init>()
    private static final java.lang.String TAG
com.caverock.androidsvg.SVG$Text
androidx.recyclerview.widget.DiffUtil$ItemCallback
androidx.transition.ImageViewUtils
androidx.versionedparcelable.ParcelUtils
androidx.appcompat.app.AlertController$ButtonHandler:
    private static final int MSG_DISMISS_DIALOG
com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator
androidx.recyclerview.widget.MessageThreadUtil$MessageQueue
com.android.volley.RequestQueue$RequestFilter
com.google.android.material.bottomappbar.BottomAppBar$3
androidx.core.view.accessibility.AccessibilityEventCompat:
    private void <init>()
    public static int getRecordCount(android.view.accessibility.AccessibilityEvent)
    public static void appendRecord(android.view.accessibility.AccessibilityEvent,androidx.core.view.accessibility.AccessibilityRecordCompat)
    public static androidx.core.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int)
    public static androidx.core.view.accessibility.AccessibilityRecordCompat asRecord(android.view.accessibility.AccessibilityEvent)
    public static void setMovementGranularity(android.view.accessibility.AccessibilityEvent,int)
    public static int getMovementGranularity(android.view.accessibility.AccessibilityEvent)
    public static void setAction(android.view.accessibility.AccessibilityEvent,int)
    public static int getAction(android.view.accessibility.AccessibilityEvent)
    public static final int TYPE_VIEW_HOVER_ENTER
    public static final int TYPE_VIEW_HOVER_EXIT
    public static final int TYPE_TOUCH_EXPLORATION_GESTURE_START
    public static final int TYPE_TOUCH_EXPLORATION_GESTURE_END
    public static final int TYPE_WINDOW_CONTENT_CHANGED
    public static final int TYPE_VIEW_SCROLLED
    public static final int TYPE_VIEW_TEXT_SELECTION_CHANGED
    public static final int TYPE_ANNOUNCEMENT
    public static final int TYPE_VIEW_ACCESSIBILITY_FOCUSED
    public static final int TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED
    public static final int TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY
    public static final int TYPE_GESTURE_DETECTION_START
    public static final int TYPE_GESTURE_DETECTION_END
    public static final int TYPE_TOUCH_INTERACTION_START
    public static final int TYPE_TOUCH_INTERACTION_END
    public static final int TYPE_WINDOWS_CHANGED
    public static final int TYPE_VIEW_CONTEXT_CLICKED
    public static final int TYPE_ASSIST_READING_CONTEXT
    public static final int CONTENT_CHANGE_TYPE_UNDEFINED
    public static final int CONTENT_CHANGE_TYPE_SUBTREE
    public static final int CONTENT_CHANGE_TYPE_TEXT
    public static final int CONTENT_CHANGE_TYPE_CONTENT_DESCRIPTION
    public static final int CONTENT_CHANGE_TYPE_PANE_TITLE
    public static final int CONTENT_CHANGE_TYPE_PANE_APPEARED
    public static final int CONTENT_CHANGE_TYPE_PANE_DISAPPEARED
    public static final int TYPES_ALL_MASK
androidx.core.content.res.FontResourcesParserCompat:
    private void <init>()
    private static final int NORMAL_WEIGHT
    private static final int ITALIC
    public static final int FETCH_STRATEGY_BLOCKING
    public static final int FETCH_STRATEGY_ASYNC
    public static final int INFINITE_TIMEOUT_VALUE
    private static final int DEFAULT_TIMEOUT_MILLIS
com.google.android.material.datepicker.SingleDateSelector
org.slf4j.spi.MarkerFactoryBinder
androidx.fragment.app.FragmentActivity$HostCallbacks:
    public void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int)
    public void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)
    public void onStartIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
    public void onRequestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int)
    public boolean onShouldShowRequestPermissionRationale(java.lang.String)
androidx.recyclerview.widget.AdapterHelper:
    varargs androidx.recyclerview.widget.AdapterHelper addUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp[])
    boolean onItemRangeChanged(int,int,java.lang.Object)
    boolean onItemRangeInserted(int,int)
    boolean onItemRangeRemoved(int,int)
    boolean onItemRangeMoved(int,int,int)
    static final int POSITION_TYPE_INVISIBLE
    static final int POSITION_TYPE_NEW_OR_LAID_OUT
    private static final boolean DEBUG
    private static final java.lang.String TAG
com.google.android.material.slider.BaseSlider$SliderState
com.android.volley.AuthFailureError:
    public void <init>()
    public void <init>(android.content.Intent)
    public void <init>(java.lang.String)
    public void <init>(java.lang.String,java.lang.Exception)
    public android.content.Intent getResolutionIntent()
androidx.core.hardware.display.DisplayManagerCompat
androidx.core.app.FrameMetricsAggregator$MetricType
androidx.core.widget.TextViewCompat:
    private void <init>()
    private static java.lang.reflect.Field retrieveField(java.lang.String)
    private static int retrieveIntFromField(java.lang.reflect.Field,android.widget.TextView)
    public static void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
    public static void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int)
    public static int getMaxLines(android.widget.TextView)
    public static int getMinLines(android.widget.TextView)
    public static void setAutoSizeTextTypeWithDefaults(android.widget.TextView,int)
    public static void setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView,int,int,int,int)
    public static void setAutoSizeTextTypeUniformWithPresetSizes(android.widget.TextView,int[],int)
    public static int getAutoSizeTextType(android.widget.TextView)
    public static int getAutoSizeStepGranularity(android.widget.TextView)
    public static int getAutoSizeMinTextSize(android.widget.TextView)
    public static int getAutoSizeMaxTextSize(android.widget.TextView)
    public static int[] getAutoSizeTextAvailableSizes(android.widget.TextView)
    public static void setCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback)
    public static android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView)
    public static android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView)
    private static final java.lang.String LOG_TAG
    public static final int AUTO_SIZE_TEXT_TYPE_NONE
    public static final int AUTO_SIZE_TEXT_TYPE_UNIFORM
    private static java.lang.reflect.Field sMaximumField
    private static boolean sMaximumFieldFetched
    private static java.lang.reflect.Field sMaxModeField
    private static boolean sMaxModeFieldFetched
    private static java.lang.reflect.Field sMinimumField
    private static boolean sMinimumFieldFetched
    private static java.lang.reflect.Field sMinModeField
    private static boolean sMinModeFieldFetched
    private static final int LINES
androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback
io.realm.BaseRealm$3
com.caverock.androidsvg.SVGAndroidRenderer$PathTextDrawer
io.realm.internal.OsObjectSchemaInfo$Builder:
    public io.realm.internal.OsObjectSchemaInfo$Builder addPersistedValueListProperty(java.lang.String,io.realm.RealmFieldType,boolean)
    public io.realm.internal.OsObjectSchemaInfo$Builder addPersistedLinkProperty(java.lang.String,io.realm.RealmFieldType,java.lang.String)
    public io.realm.internal.OsObjectSchemaInfo$Builder addComputedLinkProperty(java.lang.String,java.lang.String,java.lang.String)
androidx.core.graphics.PathParser:
    public static boolean interpolatePathDataNodes(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[],float)
    private void <init>()
    private static final java.lang.String LOGTAG
io.realm.internal.async.RealmAsyncTaskImpl:
    public void cancel()
    public boolean isCancelled()
com.google.android.material.datepicker.MaterialCalendarGridView:
    public void <init>(android.content.Context)
com.google.android.material.button.MaterialButtonToggleGroup$OnButtonCheckedListener
io.realm.DynamicRealmObject:
    public void <init>(io.realm.RealmModel)
    private io.realm.RealmFieldType classToRealmType(java.lang.Class)
    private void setValue(java.lang.String,java.lang.Object)
    private void setModelList(java.lang.String,io.realm.RealmList)
    private void setValueList(java.lang.String,io.realm.RealmList,io.realm.RealmFieldType)
    private io.realm.ManagedListOperator getOperator(io.realm.BaseRealm,io.realm.internal.OsList,io.realm.RealmFieldType,java.lang.Class)
    private void checkFieldType(java.lang.String,long,io.realm.RealmFieldType)
    private void checkIsPrimaryKey(java.lang.String)
    public java.lang.Object get(java.lang.String)
    public boolean getBoolean(java.lang.String)
    public int getInt(java.lang.String)
    public short getShort(java.lang.String)
    public long getLong(java.lang.String)
    public byte getByte(java.lang.String)
    public float getFloat(java.lang.String)
    public double getDouble(java.lang.String)
    public byte[] getBlob(java.lang.String)
    public java.lang.String getString(java.lang.String)
    public java.util.Date getDate(java.lang.String)
    public io.realm.DynamicRealmObject getObject(java.lang.String)
    public io.realm.RealmList getList(java.lang.String)
    public io.realm.RealmList getList(java.lang.String,java.lang.Class)
    public boolean isNull(java.lang.String)
    public boolean hasField(java.lang.String)
    public void set(java.lang.String,java.lang.Object)
    public void setBoolean(java.lang.String,boolean)
    public void setShort(java.lang.String,short)
    public void setInt(java.lang.String,int)
    public void setLong(java.lang.String,long)
    public void setByte(java.lang.String,byte)
    public void setFloat(java.lang.String,float)
    public void setDouble(java.lang.String,double)
    public void setString(java.lang.String,java.lang.String)
    public void setBlob(java.lang.String,byte[])
    public void setDate(java.lang.String,java.util.Date)
    public void setObject(java.lang.String,io.realm.DynamicRealmObject)
    public void setList(java.lang.String,io.realm.RealmList)
    public void setNull(java.lang.String)
    public java.lang.String getType()
    public io.realm.RealmFieldType getFieldType(java.lang.String)
    public io.realm.RealmResults linkingObjects(java.lang.String,java.lang.String)
    public io.realm.DynamicRealm getDynamicRealm()
    static final java.lang.String MSG_LINK_QUERY_NOT_SUPPORTED
com.android.volley.toolbox.BasicNetwork:
    protected static java.util.Map convertHeaders(com.android.volley.Header[])
    protected void logError(java.lang.String,java.lang.String,long)
    private static final int SLOW_REQUEST_THRESHOLD_MS
    private static final int DEFAULT_POOL_SIZE
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback$1
androidx.core.content.PermissionChecker:
    private void <init>()
    public static int checkCallingPermission(android.content.Context,java.lang.String,java.lang.String)
    public static int checkCallingOrSelfPermission(android.content.Context,java.lang.String)
    public static final int PERMISSION_GRANTED
    public static final int PERMISSION_DENIED
    public static final int PERMISSION_DENIED_APP_OP
androidx.fragment.app.FragmentTabHost$TabInfo
androidx.core.view.DragStartHelper$OnDragStartListener
androidx.core.app.NotificationCompatSideChannelService
org.slf4j.helpers.BasicMDCAdapter$1
com.google.android.material.imageview.ShapeableImageView
androidx.cardview.widget.CardViewDelegate:
    public abstract void setCardBackground(android.graphics.drawable.Drawable)
androidx.transition.AutoTransition:
    public void <init>(android.content.Context,android.util.AttributeSet)
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager:
    private void unregisterForLayoutCallback(android.view.View)
    void addAccessibilityPane(android.view.View)
    void removeAccessibilityPane(android.view.View)
com.google.android.material.datepicker.RangeDateSelector$3
androidx.loader.content.ModernAsyncTask$InternalHandler
androidx.transition.Transition$EpicenterCallback:
    public abstract android.graphics.Rect onGetEpicenter(androidx.transition.Transition)
io.realm.internal.android.JsonUtils
androidx.appcompat.view.ActionMode:
    public boolean isUiFocusable()
com.google.android.material.transition.platform.MaterialContainerTransformSharedElementCallback$1
androidx.recyclerview.widget.AsyncListDiffer$1$1
androidx.core.widget.PopupMenuCompat
androidx.constraintlayout.solver.Pools$SimplePool:
    private boolean isInPool(java.lang.Object)
com.caverock.androidsvg.SVG$Defs
io.realm.com_guilhermedaros_museunfc_Entities_UsuarioRealmProxy$UsuarioColumnInfo:
    void <init>(io.realm.internal.ColumnInfo,boolean)
    protected final io.realm.internal.ColumnInfo copy(boolean)
com.google.gson.stream.MalformedJsonException:
    public void <init>(java.lang.String,java.lang.Throwable)
    public void <init>(java.lang.Throwable)
    private static final long serialVersionUID
androidx.fragment.app.DialogFragment$1
com.google.android.material.shape.RoundedCornerTreatment:
    public void <init>(float)
com.rollbar.notifier.filter.Filter
androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment
androidx.drawerlayout.R$styleable
com.google.android.material.appbar.MaterialToolbar:
    public void <init>(android.content.Context)
androidx.cursoradapter.widget.SimpleCursorAdapter$ViewBinder
androidx.appcompat.widget.AppCompatImageHelper:
    void setInternalImageTint(android.content.res.ColorStateList)
com.getkeepsafe.relinker.ApkLibraryInstaller:
    private static final int MAX_TRIES
    private static final int COPY_BUFFER_SIZE
androidx.loader.app.LoaderManager$LoaderCallbacks
com.google.gson.internal.LinkedHashTreeMap$KeySet$1
androidx.annotation.InspectableProperty$EnumEntry
androidx.cardview.R$attr
androidx.fragment.app.FragmentController:
    public androidx.loader.app.LoaderManager getSupportLoaderManager()
    public int getActiveFragmentsCount()
    public java.util.List getActiveFragments(java.util.List)
    public void restoreAllState(android.os.Parcelable,java.util.List)
    public void restoreAllState(android.os.Parcelable,androidx.fragment.app.FragmentManagerNonConfig)
    public java.util.List retainNonConfig()
    public androidx.fragment.app.FragmentManagerNonConfig retainNestedNonConfig()
    public void dispatchReallyStop()
    public void dispatchDestroyView()
    public void doLoaderStart()
    public void doLoaderStop(boolean)
    public void doLoaderRetain()
    public void doLoaderDestroy()
    public void reportLoaderStart()
    public androidx.collection.SimpleArrayMap retainLoaderNonConfig()
    public void restoreLoaderNonConfig(androidx.collection.SimpleArrayMap)
    public void dumpLoaders(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
com.google.android.material.internal.ParcelableSparseArray$1
com.android.volley.Cache:
    public abstract void invalidate(java.lang.String,boolean)
    public abstract void remove(java.lang.String)
    public abstract void clear()
com.caverock.androidsvg.PreserveAspectRatio
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuSeparatorItem
io.realm.rx.RealmObservableFactory$16$1
io.realm.internal.OsResults$6
com.google.android.material.bottomsheet.BottomSheetBehavior:
    public static com.google.android.material.bottomsheet.BottomSheetBehavior from(android.view.View)
    public boolean isFitToContents()
    public int getPeekHeight()
    public float getHalfExpandedRatio()
    public boolean isHideable()
    public boolean getSkipCollapsed()
    public boolean isDraggable()
    public int getSaveFlags()
    public void setBottomSheetCallback(com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback)
    public void addBottomSheetCallback(com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback)
    public void removeBottomSheetCallback(com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback)
    public int getState()
    int getPeekHeightMin()
    public void disableShapeAnimations()
    public void setUpdateImportantForAccessibilityOnSiblings(boolean)
    public static final int STATE_DRAGGING
    public static final int STATE_SETTLING
    public static final int STATE_EXPANDED
    public static final int STATE_COLLAPSED
    public static final int STATE_HIDDEN
    public static final int STATE_HALF_EXPANDED
    public static final int PEEK_HEIGHT_AUTO
    public static final int SAVE_PEEK_HEIGHT
    public static final int SAVE_FIT_TO_CONTENTS
    public static final int SAVE_HIDEABLE
    public static final int SAVE_SKIP_COLLAPSED
    public static final int SAVE_ALL
    public static final int SAVE_NONE
    private static final java.lang.String TAG
    private static final int SIGNIFICANT_VEL_THRESHOLD
    private static final float HIDE_THRESHOLD
    private static final float HIDE_FRICTION
    private static final int CORNER_ANIMATION_DURATION
com.google.gson.JsonPrimitive:
    public void <init>(java.lang.Character)
    void <init>(java.lang.Object)
    public com.google.gson.JsonPrimitive deepCopy()
    public java.math.BigDecimal getAsBigDecimal()
    public java.math.BigInteger getAsBigInteger()
    public float getAsFloat()
    public short getAsShort()
    public byte getAsByte()
    public char getAsCharacter()
    public synthetic bridge com.google.gson.JsonElement deepCopy()
javax.annotation.meta.TypeQualifierValidator
androidx.core.util.PatternsCompat
com.rollbar.Rollbar$7
androidx.constraintlayout.solver.widgets.ChainHead:
    public androidx.constraintlayout.solver.widgets.ConstraintWidget getFirst()
    public androidx.constraintlayout.solver.widgets.ConstraintWidget getFirstVisibleWidget()
    public androidx.constraintlayout.solver.widgets.ConstraintWidget getLast()
    public androidx.constraintlayout.solver.widgets.ConstraintWidget getLastVisibleWidget()
    public androidx.constraintlayout.solver.widgets.ConstraintWidget getHead()
    public androidx.constraintlayout.solver.widgets.ConstraintWidget getFirstMatchConstraintWidget()
    public androidx.constraintlayout.solver.widgets.ConstraintWidget getLastMatchConstraintWidget()
    public float getTotalWeight()
com.caverock.androidsvg.SVG$Colour
io.realm.internal.OsResults$Aggregate
com.caverock.androidsvg.SVG$Switch
androidx.vectordrawable.R$string
com.google.gson.internal.Excluder:
    public com.google.gson.internal.Excluder withVersion(double)
    public varargs com.google.gson.internal.Excluder withModifiers(int[])
    public com.google.gson.internal.Excluder disableInnerClassSerialization()
    public com.google.gson.internal.Excluder excludeFieldsWithoutExposeAnnotation()
    public com.google.gson.internal.Excluder withExclusionStrategy(com.google.gson.ExclusionStrategy,boolean,boolean)
    private static final double IGNORE_VERSIONS
androidx.transition.R$id:
    private void <init>()
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory:
    public static final int DIRECTION_LEFT
    public static final int DIRECTION_TOP
    public static final int DIRECTION_RIGHT
    public static final int DIRECTION_BOTTOM
io.realm.internal.objectstore.OsObjectBuilder$9:
    public void handleItem(long,java.lang.Double)
    public synthetic bridge void handleItem(long,java.lang.Object)
androidx.recyclerview.widget.ListAdapter$1
io.realm.rx.RealmObservableFactory$8
com.rollbar.notifier.util.BodyFactory
androidx.core.content.pm.ShortcutInfoCompatSaver
com.google.android.material.button.MaterialButtonToggleGroup$CornerData
javax.annotation.ParametersAreNonnullByDefault
androidx.appcompat.widget.ActionBarOverlayLayout:
    public void <init>(android.content.Context)
    public boolean isHideOnContentScrollEnabled()
    public boolean hasIcon()
    public boolean hasLogo()
    public void saveToolbarHierarchyState(android.util.SparseArray)
    public void restoreToolbarHierarchyState(android.util.SparseArray)
    private static final java.lang.String TAG
    private static final int ACTION_BAR_ANIMATE_DELAY
io.realm.MutableRealmSchema:
    private java.lang.String checkAndGetTableNameFromClassName(java.lang.String)
    public io.realm.RealmObjectSchema get(java.lang.String)
    public java.util.Set getAll()
    public io.realm.RealmObjectSchema create(java.lang.String)
    public varargs io.realm.RealmObjectSchema createWithPrimaryKeyField(java.lang.String,java.lang.String,java.lang.Class,io.realm.FieldAttribute[])
    public void remove(java.lang.String)
    public io.realm.RealmObjectSchema rename(java.lang.String,java.lang.String)
com.android.volley.VolleyLog:
    public static void setTag(java.lang.String)
    public static varargs void wtf(java.lang.Throwable,java.lang.String,java.lang.Object[])
androidx.core.app.ShareCompat$IntentReader
androidx.annotation.MainThread
androidx.core.app.BundleCompat$BundleCompatBaseImpl
io.realm.StringListOperator
com.google.android.material.appbar.AppBarLayout$LayoutParams$ScrollFlags
io.realm.log.LogLevel
com.android.volley.toolbox.DiskBasedCache:
    public synchronized void clear()
    public synchronized void invalidate(java.lang.String,boolean)
    private static final int DEFAULT_DISK_USAGE_BYTES
    private static final float HYSTERESIS_FACTOR
    private static final int CACHE_MAGIC
com.google.android.material.ripple.RippleDrawableCompat:
    public com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
androidx.core.text.BidiFormatter$Builder:
    public void <init>(boolean)
    public void <init>(java.util.Locale)
    public androidx.core.text.BidiFormatter$Builder stereoReset(boolean)
    public androidx.core.text.BidiFormatter$Builder setTextDirectionHeuristic(androidx.core.text.TextDirectionHeuristicCompat)
com.google.android.material.tooltip.TooltipDrawable$1
io.realm.BinaryListOperator
com.google.android.material.internal.StaticLayoutBuilderCompat:
    public com.google.android.material.internal.StaticLayoutBuilderCompat setStart(int)
    public com.google.android.material.internal.StaticLayoutBuilderCompat setEnd(int)
    private static final java.lang.String TEXT_DIR_CLASS
    private static final java.lang.String TEXT_DIRS_CLASS
    private static final java.lang.String TEXT_DIR_CLASS_LTR
    private static final java.lang.String TEXT_DIR_CLASS_RTL
androidx.core.telephony.mbms.MbmsHelper
com.google.android.material.datepicker.SingleDateSelector$2
androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder:
    void <init>(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean)
com.google.android.material.internal.NavigationMenu
javax.annotation.Nonnegative
androidx.appcompat.R$interpolator
io.realm.MutableRealmInteger
androidx.annotation.NonNull
androidx.drawerlayout.R$color
androidx.core.R$string
com.google.android.material.bottomnavigation.BottomNavigationPresenter$SavedState$1
androidx.arch.core.executor.DefaultTaskExecutor$1:
    private static final java.lang.String THREAD_NAME_STEM
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl:
    public boolean isRtl(char[],int,int)
androidx.core.text.util.LinkifyCompat
androidx.lifecycle.livedata.core.R
androidx.savedstate.Recreator$SavedStateProvider
io.realm.internal.OsCollectionChangeSet:
    private static native int[] nativeGetIndices(long,int)
    public io.realm.OrderedCollectionChangeSet$State getState()
    public int[] getDeletions()
    public int[] getInsertions()
    public int[] getChanges()
    public boolean isCompleteResult()
    public static final int TYPE_DELETION
    public static final int TYPE_INSERTION
    public static final int TYPE_MODIFICATION
    public static final int MAX_ARRAY_LENGTH
androidx.vectordrawable.animated.R$color
androidx.viewpager2.widget.PageTransformerAdapter
androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment
com.google.android.material.datepicker.PickerFragment:
    abstract com.google.android.material.datepicker.DateSelector getDateSelector()
    boolean addOnSelectionChangedListener(com.google.android.material.datepicker.OnSelectionChangedListener)
    boolean removeOnSelectionChangedListener(com.google.android.material.datepicker.OnSelectionChangedListener)
    void clearOnSelectionChangedListeners()
com.caverock.androidsvg.SVG$Marker
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat:
    public void <init>(int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand)
    private static final java.lang.String TAG
com.google.android.material.datepicker.SingleDateSelector$1
androidx.core.content.pm.PermissionInfoCompat$Protection
com.google.android.material.transition.MaterialContainerTransform$FadeMode
io.realm.BaseRealm:
    static boolean compactRealm(io.realm.RealmConfiguration)
    protected static void migrateRealm(io.realm.RealmConfiguration,io.realm.RealmMigration)
    static synthetic io.realm.internal.OsSharedRealm$MigrationCallback access$000(io.realm.RealmMigration)
    public void setAutoRefresh(boolean)
    public boolean isAutoRefresh()
    public void refresh()
    protected void addListener(io.realm.RealmChangeListener)
    protected void removeListener(io.realm.RealmChangeListener)
    public abstract io.reactivex.Flowable asFlowable()
    protected void removeAllListeners()
    public void writeCopyTo(java.io.File)
    public void writeEncryptedCopyTo(java.io.File,byte[])
    public boolean waitForChange()
    public void stopWaitForChange()
    public abstract io.realm.BaseRealm freeze()
    protected void checkIfInTransaction()
    protected void checkIfPartialRealm()
    protected void checkIfValidAndInTransaction()
    void checkNotInSync()
    public long getVersion()
    public abstract boolean isEmpty()
    io.realm.RealmModel get(java.lang.Class,long,boolean,java.util.List)
    public void deleteAll()
    private static final java.lang.String INCORRECT_THREAD_CLOSE_MESSAGE
    static final java.lang.String INCORRECT_THREAD_MESSAGE
    static final java.lang.String CLOSED_REALM_MESSAGE
    private static final java.lang.String NOT_IN_TRANSACTION_MESSAGE
    static final java.lang.String LISTENER_NOT_ALLOWED_MESSAGE
    static final java.lang.String DELETE_NOT_SUPPORTED_UNDER_PARTIAL_SYNC
androidx.recyclerview.widget.RecyclerView$Adapter:
    public final void notifyItemChanged(int)
    public final void notifyItemChanged(int,java.lang.Object)
    public final void notifyItemRangeChanged(int,int)
    public final void notifyItemRangeChanged(int,int,java.lang.Object)
    public final void notifyItemInserted(int)
    public final void notifyItemMoved(int,int)
    public final void notifyItemRangeInserted(int,int)
    public final void notifyItemRemoved(int)
    public final void notifyItemRangeRemoved(int,int)
androidx.annotation.RequiresPermission
androidx.fragment.app.Fragment:
    public void <init>(int)
    public static androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String)
    public androidx.lifecycle.LifecycleOwner getViewLifecycleOwner()
    public androidx.lifecycle.LiveData getViewLifecycleOwnerLiveData()
    public final int getId()
    public final java.lang.String getTag()
    public final android.os.Bundle requireArguments()
    public void setInitialSavedState(androidx.fragment.app.Fragment$SavedState)
    public void setTargetFragment(androidx.fragment.app.Fragment,int)
    public final int getTargetRequestCode()
    public final java.lang.Object requireHost()
    public final java.lang.CharSequence getText(int)
    public final varargs java.lang.String getString(int,java.lang.Object[])
    public final androidx.fragment.app.FragmentManager requireFragmentManager()
    public final androidx.fragment.app.Fragment requireParentFragment()
    public final boolean isDetached()
    public final boolean isRemoving()
    public final boolean isInLayout()
    public final boolean isResumed()
    public final boolean isVisible()
    public final boolean hasOptionsMenu()
    public final boolean isMenuVisible()
    public void setRetainInstance(boolean)
    public void setHasOptionsMenu(boolean)
    public boolean getUserVisibleHint()
    public androidx.loader.app.LoaderManager getLoaderManager()
    public void startActivity(android.content.Intent)
    public void startActivity(android.content.Intent,android.os.Bundle)
    public void startActivityForResult(android.content.Intent,int)
    public void startActivityForResult(android.content.Intent,int,android.os.Bundle)
    public void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
    public final void requestPermissions(java.lang.String[],int)
    public boolean shouldShowRequestPermissionRationale(java.lang.String)
    public final android.view.LayoutInflater getLayoutInflater()
    public void registerForContextMenu(android.view.View)
    public void unregisterForContextMenu(android.view.View)
    public void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback)
    public void setExitSharedElementCallback(androidx.core.app.SharedElementCallback)
    public void setEnterTransition(java.lang.Object)
    public void setReturnTransition(java.lang.Object)
    public void setExitTransition(java.lang.Object)
    public void setReenterTransition(java.lang.Object)
    public void setSharedElementEnterTransition(java.lang.Object)
    public void setSharedElementReturnTransition(java.lang.Object)
    public void setAllowEnterTransitionOverlap(boolean)
    public void setAllowReturnTransitionOverlap(boolean)
    public void postponeEnterTransition()
    public final void postponeEnterTransition(long,java.util.concurrent.TimeUnit)
    static final int INITIALIZING
    static final int CREATED
    static final int ACTIVITY_CREATED
    static final int STARTED
    static final int RESUMED
androidx.core.widget.NestedScrollView:
    public void <init>(android.content.Context)
    public boolean dispatchNestedScroll(int,int,int,int,int[],int)
    public boolean isFillViewport()
    public boolean isSmoothScrollingEnabled()
    public final void smoothScrollTo(int,int)
    static final int ANIMATED_SCROLL_GAP
    static final float MAX_SCROLL_FACTOR
    private static final java.lang.String TAG
    private static final int INVALID_POINTER
io.realm.internal.EmptyLoadChangeSet:
    public io.realm.OrderedCollectionChangeSet$State getState()
    public int[] getDeletions()
    public int[] getInsertions()
    public int[] getChanges()
    public boolean isCompleteResult()
com.google.android.material.shape.ShapePathModel
androidx.recyclerview.widget.SortedList
com.google.android.material.slider.Slider$OnSliderTouchListener
androidx.appcompat.app.AlertDialog:
    protected void <init>(android.content.Context)
    protected void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener)
    public android.widget.Button getButton(int)
    public void setCustomTitle(android.view.View)
    public void setMessage(java.lang.CharSequence)
    public void setView(android.view.View)
    public void setView(android.view.View,int,int,int,int)
    void setButtonPanelLayoutHint(int)
    public void setButton(int,java.lang.CharSequence,android.os.Message)
    public void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
    public void setButton(int,java.lang.CharSequence,android.graphics.drawable.Drawable,android.content.DialogInterface$OnClickListener)
    public void setIcon(int)
    public void setIcon(android.graphics.drawable.Drawable)
    public void setIconAttribute(int)
    static final int LAYOUT_HINT_NONE
    static final int LAYOUT_HINT_SIDE
io.realm.internal.core.DescriptorOrdering:
    private static native void nativeAppendSort(long,io.realm.internal.core.QueryDescriptor)
    private static native void nativeAppendDistinct(long,io.realm.internal.core.QueryDescriptor)
    private static native void nativeAppendLimit(long,long)
    private static native void nativeAppendInclude(long,long)
    public void appendSort(io.realm.internal.core.QueryDescriptor)
    public void appendDistinct(io.realm.internal.core.QueryDescriptor)
    public void setLimit(long)
    public void appendIncludes(io.realm.internal.core.IncludeDescriptor)
androidx.transition.R$layout
com.google.android.material.datepicker.CalendarItemStyle:
    int getLeftInset()
    int getRightInset()
androidx.collection.LruCache:
    public void resize(int)
    public final java.lang.Object remove(java.lang.Object)
    public final void evictAll()
    public final synchronized int size()
    public final synchronized int maxSize()
    public final synchronized int hitCount()
    public final synchronized int missCount()
    public final synchronized int createCount()
    public final synchronized int putCount()
    public final synchronized int evictionCount()
    public final synchronized java.util.Map snapshot()
androidx.customview.R$attr
com.google.gson.JsonNull:
    public com.google.gson.JsonNull deepCopy()
    public synthetic bridge com.google.gson.JsonElement deepCopy()
androidx.core.content.ContentResolverCompat
androidx.lifecycle.viewmodel.R
androidx.appcompat.widget.ActivityChooserView$5
com.guilhermedaros.museunfc.R$animator
androidx.constraintlayout.solver.ArrayLinkedVariables:
    boolean hasAtLeastOnePositiveVariable()
    androidx.constraintlayout.solver.SolverVariable getPivotCandidate()
    int sizeInBytes()
    public void display()
    private static final boolean DEBUG
    private static final int NONE
    private static final boolean FULL_NEW_CHECK
androidx.lifecycle.ReportFragment:
    static androidx.lifecycle.ReportFragment get(android.app.Activity)
    void setProcessListener(androidx.lifecycle.ReportFragment$ActivityInitializationListener)
    private static final java.lang.String REPORT_FRAGMENT_TAG
com.caverock.androidsvg.SVG$CSSClipRect
com.caverock.androidsvg.SVG$GradientElement
com.google.android.material.snackbar.BaseTransientBottomBar$6
com.google.gson.internal.LinkedTreeMap:
    private java.lang.Object writeReplace()
androidx.appcompat.resources.R$layout
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback
com.guilhermedaros.museunfc.R$styleable
androidx.activity.R$drawable
androidx.recyclerview.widget.ListAdapter
androidx.viewpager2.adapter.FragmentStateAdapter$1
com.google.android.material.circularreveal.CircularRevealHelper$Delegate
io.realm.RealmResults:
    static io.realm.RealmResults createBacklinkResults(io.realm.BaseRealm,io.realm.internal.Row,java.lang.Class,java.lang.String)
    static io.realm.RealmResults createDynamicBacklinkResults(io.realm.DynamicRealm,io.realm.internal.CheckedRow,io.realm.internal.Table,java.lang.String)
    private io.realm.internal.Row checkRealmObjectConstraints(java.lang.String,io.realm.RealmModel)
    private java.lang.Class getListType(io.realm.RealmList)
    private void checkTypeOfListElements(io.realm.RealmList,java.lang.Class)
    private void checkForAddListener(java.lang.Object)
    private void checkForRemoveListener(java.lang.Object,boolean)
    private void checkNonEmptyFieldName(java.lang.String)
    private void checkNotNull(java.lang.Object)
    private void checkType(java.lang.String,io.realm.RealmFieldType)
    private java.lang.String mapFieldNameToInternalName(java.lang.String)
    public io.realm.RealmQuery where()
    public io.realm.RealmResults sort(java.lang.String,io.realm.Sort,java.lang.String,io.realm.Sort)
    public void setValue(java.lang.String,java.lang.Object)
    public void setNull(java.lang.String)
    public void setBoolean(java.lang.String,boolean)
    public void setByte(java.lang.String,byte)
    public void setShort(java.lang.String,short)
    public void setInt(java.lang.String,int)
    public void setLong(java.lang.String,long)
    public void setFloat(java.lang.String,float)
    public void setDouble(java.lang.String,double)
    public void setString(java.lang.String,java.lang.String)
    public void setBlob(java.lang.String,byte[])
    public void setDate(java.lang.String,java.util.Date)
    public void setObject(java.lang.String,io.realm.RealmModel)
    public void setList(java.lang.String,io.realm.RealmList)
    public boolean isFrozen()
    public io.realm.RealmResults freeze()
    public void addChangeListener(io.realm.RealmChangeListener)
    public void addChangeListener(io.realm.OrderedRealmCollectionChangeListener)
    public void removeAllChangeListeners()
    public void removeChangeListener(io.realm.RealmChangeListener)
    public void removeChangeListener(io.realm.OrderedRealmCollectionChangeListener)
    public io.reactivex.Flowable asFlowable()
    public io.reactivex.Observable asChangesetObservable()
    public java.lang.String asJSON()
    public synthetic bridge io.realm.Realm getRealm()
    public synthetic bridge io.realm.OrderedRealmCollectionSnapshot createSnapshot()
    public synthetic bridge boolean deleteFirstFromRealm()
    public synthetic bridge boolean deleteLastFromRealm()
    public synthetic bridge double average(java.lang.String)
    public synthetic bridge java.lang.Number sum(java.lang.String)
    public synthetic bridge java.util.Date maxDate(java.lang.String)
    public synthetic bridge java.lang.Number max(java.lang.String)
    public synthetic bridge java.util.Date minDate(java.lang.String)
    public synthetic bridge java.lang.Number min(java.lang.String)
    public synthetic bridge io.realm.RealmResults sort(java.lang.String[],io.realm.Sort[])
    public synthetic bridge io.realm.RealmResults sort(java.lang.String,io.realm.Sort)
    public synthetic bridge io.realm.RealmResults sort(java.lang.String)
    public synthetic bridge void deleteFromRealm(int)
    public synthetic bridge java.lang.Object last(java.lang.Object)
    public synthetic bridge java.lang.Object last()
    public synthetic bridge java.lang.Object first()
    public synthetic bridge boolean isManaged()
    public synthetic bridge boolean isValid()
    public synthetic bridge io.realm.RealmCollection freeze()
com.google.android.material.datepicker.MaterialPickerOnPositiveButtonClickListener
androidx.core.view.ViewParentCompat:
    private void <init>()
    public static boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int)
    public static void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int)
    public static void onStopNestedScroll(android.view.ViewParent,android.view.View)
    public static void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int)
    public static void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int)
    public static void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[])
    public static void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int)
    private static int[] getTempNestedScrollConsumed()
    private static final java.lang.String TAG
    private static int[] sTempNestedScrollConsumed
com.google.android.material.slider.BaseOnChangeListener
androidx.activity.R$styleable
com.google.android.material.snackbar.BaseTransientBottomBar$BaseCallback
com.google.android.material.badge.BadgeDrawable
androidx.core.widget.PopupWindowCompat:
    private void <init>()
    public static boolean getOverlapAnchor(android.widget.PopupWindow)
    public static int getWindowLayoutType(android.widget.PopupWindow)
    private static final java.lang.String TAG
    private static java.lang.reflect.Method sGetWindowLayoutTypeMethod
    private static boolean sGetWindowLayoutTypeMethodAttempted
com.android.volley.RequestQueue:
    public com.android.volley.Cache getCache()
    public void cancelAll(com.android.volley.RequestQueue$RequestFilter)
    public void cancelAll(java.lang.Object)
    public void addRequestFinishedListener(com.android.volley.RequestQueue$RequestFinishedListener)
    public void removeRequestFinishedListener(com.android.volley.RequestQueue$RequestFinishedListener)
    private static final int DEFAULT_NETWORK_THREAD_POOL_SIZE
androidx.core.content.pm.PermissionInfoCompat
androidx.core.view.ViewCompat$ScrollIndicators
androidx.core.view.NestedScrollingParentHelper:
    public void onStopNestedScroll(android.view.View)
androidx.transition.Slide$CalculateSlide
androidx.core.view.accessibility.AccessibilityWindowInfoCompat
com.google.android.material.bottomnavigation.BottomNavigationItemView$1
androidx.constraintlayout.solver.widgets.ConstraintTableLayout
androidx.viewpager2.widget.ViewPager2$LinearLayoutManagerImpl
androidx.core.location.LocationManagerCompat
androidx.appcompat.widget.PopupMenu
androidx.appcompat.resources.R$integer
io.realm.internal.IOException:
    public void <init>(java.lang.Throwable)
    public void <init>()
    public void <init>(java.lang.String,java.lang.Throwable)
com.google.android.material.textfield.TextInputLayout$BoxBackgroundMode
androidx.appcompat.view.menu.CascadingMenuPopup:
    public android.os.Parcelable onSaveInstanceState()
    public void onRestoreInstanceState(android.os.Parcelable)
    static final int HORIZ_POSITION_LEFT
    static final int HORIZ_POSITION_RIGHT
    static final int SUBMENU_TIMEOUT_MS
com.google.android.material.transition.platform.TransitionUtils
androidx.constraintlayout.widget.ConstraintSet:
    private void createHorizontalChain(int,int,int,int,int[],float[],int,int,int)
    private androidx.constraintlayout.widget.ConstraintSet$Constraint get(int)
    private java.lang.String sideToString(int)
    public androidx.constraintlayout.widget.ConstraintSet$Constraint getParameters(int)
    public void clone(android.content.Context,int)
    public void clone(androidx.constraintlayout.widget.ConstraintSet)
    public void clone(androidx.constraintlayout.widget.ConstraintLayout)
    public void applyTo(androidx.constraintlayout.widget.ConstraintLayout)
    public void center(int,int,int,int,int,int,int,float)
    public void centerHorizontally(int,int,int,int,int,int,int,float)
    public void centerHorizontallyRtl(int,int,int,int,int,int,int,float)
    public void centerVertically(int,int,int,int,int,int,int,float)
    public void createVerticalChain(int,int,int,int,int[],float[],int)
    public void createHorizontalChain(int,int,int,int,int[],float[],int)
    public void createHorizontalChainRtl(int,int,int,int,int[],float[],int)
    public void connect(int,int,int,int,int)
    public void connect(int,int,int,int)
    public void centerHorizontally(int,int)
    public void centerHorizontallyRtl(int,int)
    public void centerVertically(int,int)
    public void clear(int)
    public void clear(int,int)
    public void setMargin(int,int,int)
    public void setGoneMargin(int,int,int)
    public void setHorizontalBias(int,float)
    public void setVerticalBias(int,float)
    public void setDimensionRatio(int,java.lang.String)
    public void setVisibility(int,int)
    public void setAlpha(int,float)
    public boolean getApplyElevation(int)
    public void setApplyElevation(int,boolean)
    public void setElevation(int,float)
    public void setRotation(int,float)
    public void setRotationX(int,float)
    public void setRotationY(int,float)
    public void setScaleX(int,float)
    public void setScaleY(int,float)
    public void setTransformPivotX(int,float)
    public void setTransformPivotY(int,float)
    public void setTransformPivot(int,float,float)
    public void setTranslationX(int,float)
    public void setTranslationY(int,float)
    public void setTranslation(int,float,float)
    public void setTranslationZ(int,float)
    public void constrainHeight(int,int)
    public void constrainWidth(int,int)
    public void constrainCircle(int,int,int,float)
    public void constrainMaxHeight(int,int)
    public void constrainMaxWidth(int,int)
    public void constrainMinHeight(int,int)
    public void constrainMinWidth(int,int)
    public void constrainPercentWidth(int,float)
    public void constrainPercentHeight(int,float)
    public void constrainDefaultHeight(int,int)
    public void constrainDefaultWidth(int,int)
    public void setHorizontalWeight(int,float)
    public void setVerticalWeight(int,float)
    public void setHorizontalChainStyle(int,int)
    public void setVerticalChainStyle(int,int)
    public void addToHorizontalChain(int,int,int)
    public void addToHorizontalChainRTL(int,int,int)
    public void addToVerticalChain(int,int,int)
    public void removeFromVerticalChain(int)
    public void removeFromHorizontalChain(int)
    public void create(int,int)
    public varargs void createBarrier(int,int,int[])
    public void setGuidelineBegin(int,int)
    public void setGuidelineEnd(int,int)
    public void setGuidelinePercent(int,float)
    public void setBarrierType(int,int)
    private static final java.lang.String TAG
    public static final int UNSET
    public static final int MATCH_CONSTRAINT
    public static final int WRAP_CONTENT
    public static final int MATCH_CONSTRAINT_WRAP
    public static final int MATCH_CONSTRAINT_SPREAD
    public static final int PARENT_ID
    public static final int HORIZONTAL
    public static final int VERTICAL
    public static final int HORIZONTAL_GUIDELINE
    public static final int VERTICAL_GUIDELINE
    public static final int VISIBLE
    public static final int INVISIBLE
    public static final int GONE
    public static final int LEFT
    public static final int RIGHT
    public static final int TOP
    public static final int BOTTOM
    public static final int BASELINE
    public static final int START
    public static final int END
    public static final int CHAIN_SPREAD
    public static final int CHAIN_SPREAD_INSIDE
    public static final int CHAIN_PACKED
    private static final boolean DEBUG
    private static final int BARRIER_TYPE
    private static final int BASELINE_TO_BASELINE
    private static final int BOTTOM_MARGIN
    private static final int BOTTOM_TO_BOTTOM
    private static final int BOTTOM_TO_TOP
    private static final int DIMENSION_RATIO
    private static final int EDITOR_ABSOLUTE_X
    private static final int EDITOR_ABSOLUTE_Y
    private static final int END_MARGIN
    private static final int END_TO_END
    private static final int END_TO_START
    private static final int GONE_BOTTOM_MARGIN
    private static final int GONE_END_MARGIN
    private static final int GONE_LEFT_MARGIN
    private static final int GONE_RIGHT_MARGIN
    private static final int GONE_START_MARGIN
    private static final int GONE_TOP_MARGIN
    private static final int GUIDE_BEGIN
    private static final int GUIDE_END
    private static final int GUIDE_PERCENT
    private static final int HORIZONTAL_BIAS
    private static final int LAYOUT_HEIGHT
    private static final int LAYOUT_VISIBILITY
    private static final int LAYOUT_WIDTH
    private static final int LEFT_MARGIN
    private static final int LEFT_TO_LEFT
    private static final int LEFT_TO_RIGHT
    private static final int ORIENTATION
    private static final int RIGHT_MARGIN
    private static final int RIGHT_TO_LEFT
    private static final int RIGHT_TO_RIGHT
    private static final int START_MARGIN
    private static final int START_TO_END
    private static final int START_TO_START
    private static final int TOP_MARGIN
    private static final int TOP_TO_BOTTOM
    private static final int TOP_TO_TOP
    private static final int VERTICAL_BIAS
    private static final int VIEW_ID
    private static final int HORIZONTAL_WEIGHT
    private static final int VERTICAL_WEIGHT
    private static final int HORIZONTAL_STYLE
    private static final int VERTICAL_STYLE
    private static final int ALPHA
    private static final int ELEVATION
    private static final int ROTATION_X
    private static final int ROTATION_Y
    private static final int SCALE_X
    private static final int SCALE_Y
    private static final int TRANSFORM_PIVOT_X
    private static final int TRANSFORM_PIVOT_Y
    private static final int TRANSLATION_X
    private static final int TRANSLATION_Y
    private static final int TRANSLATION_Z
    private static final int WIDTH_DEFAULT
    private static final int HEIGHT_DEFAULT
    private static final int WIDTH_MAX
    private static final int HEIGHT_MAX
    private static final int WIDTH_MIN
    private static final int HEIGHT_MIN
    private static final int ROTATION
    private static final int CIRCLE
    private static final int CIRCLE_RADIUS
    private static final int CIRCLE_ANGLE
    private static final int WIDTH_PERCENT
    private static final int HEIGHT_PERCENT
    private static final int CHAIN_USE_RTL
    private static final int BARRIER_DIRECTION
    private static final int CONSTRAINT_REFERENCED_IDS
    private static final int BARRIER_ALLOWS_GONE_WIDGETS
    private static final int UNUSED
androidx.core.provider.FontsContractCompat$4$6
androidx.appcompat.content.res.AppCompatResources:
    private void <init>()
    private static final java.lang.String LOG_TAG
androidx.activity.R$color
io.realm.BaseRealm$InstanceCallback
androidx.lifecycle.ViewModel:
    java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object)
    java.lang.Object getTag(java.lang.String)
androidx.annotation.RequiresApi
io.reactivex.android.schedulers.AndroidSchedulers
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle
androidx.transition.R$dimen
androidx.viewpager2.widget.ViewPager2$Orientation
androidx.viewpager.R$color
androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout
androidx.recyclerview.widget.AsyncListUtil$2
androidx.recyclerview.widget.AsyncDifferConfig$Builder
com.rollbar.jvmti.LocalVariable
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams:
    public void <init>(android.view.ViewGroup$MarginLayoutParams)
com.caverock.androidsvg.SVG$Image
androidx.appcompat.view.menu.MenuView$ItemView:
    public abstract void setTitle(java.lang.CharSequence)
    public abstract void setEnabled(boolean)
    public abstract void setCheckable(boolean)
    public abstract void setChecked(boolean)
    public abstract void setShortcut(boolean,char)
    public abstract void setIcon(android.graphics.drawable.Drawable)
    public abstract boolean showsIcon()
androidx.transition.ChangeTransform$2
androidx.core.view.ViewCompat$2
io.realm.internal.Capabilities:
    public abstract boolean isMainThread()
io.realm.internal.CheckedRow:
    public void setNull(long)
    public io.realm.internal.Row freeze(io.realm.internal.OsSharedRealm)
    protected native long nativeGetColumnCount(long)
    protected native void nativeSetLong(long,long,long)
    protected native void nativeSetBoolean(long,long,boolean)
    protected native void nativeSetFloat(long,long,float)
    protected native long nativeGetLink(long,long)
    protected native void nativeSetDouble(long,long,double)
    protected native void nativeSetTimestamp(long,long,long)
    protected native void nativeSetString(long,long,java.lang.String)
    protected native void nativeSetByteArray(long,long,byte[])
    protected native void nativeSetLink(long,long,long)
    protected native void nativeNullifyLink(long,long)
androidx.loader.content.ModernAsyncTask$AsyncTaskResult
com.android.volley.toolbox.AndroidAuthenticator
io.realm.ImmutableRealmSchema:
    public io.realm.RealmObjectSchema get(java.lang.String)
    public java.util.Set getAll()
    public io.realm.RealmObjectSchema create(java.lang.String)
    public varargs io.realm.RealmObjectSchema createWithPrimaryKeyField(java.lang.String,java.lang.String,java.lang.Class,io.realm.FieldAttribute[])
    public void remove(java.lang.String)
    public io.realm.RealmObjectSchema rename(java.lang.String,java.lang.String)
    private static final java.lang.String SCHEMA_IMMUTABLE_EXCEPTION_MSG
androidx.transition.GhostView
com.google.android.material.transition.platform.FitModeEvaluator
com.google.android.material.internal.ScrimInsetsFrameLayout$1
androidx.constraintlayout.solver.widgets.ConstraintTableLayout$HorizontalSlice
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback
androidx.lifecycle.Lifecycling$1:
    void <init>(androidx.lifecycle.LifecycleEventObserver)
com.google.android.material.snackbar.BaseTransientBottomBar$11
io.realm.internal.android.package-info
com.android.volley.toolbox.ImageLoader$4
androidx.core.content.ContextCompat$MainHandlerExecutor
com.caverock.androidsvg.SVGAndroidRenderer$MarkerVector
androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments:
    public java.lang.CharSequence getText()
androidx.core.view.ViewConfigurationCompat:
    public static int getScaledPagingTouchSlop(android.view.ViewConfiguration)
    public static boolean hasPermanentMenuKey(android.view.ViewConfiguration)
    private void <init>()
    private static final java.lang.String TAG
androidx.constraintlayout.widget.R$attr
io.realm.internal.async.RealmThreadPoolExecutor:
    public static io.realm.internal.async.RealmThreadPoolExecutor newSingleThreadExecutor()
    public void pause()
    public void resume()
    private static final java.lang.String SYS_CPU_DIR
    private static final int QUEUE_SIZE
io.realm.rx.RealmObservableFactory$12
androidx.transition.Slide$1
androidx.annotation.DimenRes
com.google.android.material.datepicker.MaterialTextInputPicker$1
androidx.fragment.R$layout
androidx.core.app.NotificationCompat$MessagingStyle
com.caverock.androidsvg.SVG$TextSequence
androidx.appcompat.app.ActionBar$LayoutParams:
    public void <init>(int,int,int)
    public void <init>(int)
io.realm.internal.objectstore.OsObjectBuilder$ItemCallback:
    public abstract void handleItem(long,java.lang.Object)
com.jaredrummler.materialspinner.R$attr
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory$EdgeDirection
androidx.loader.R$drawable
androidx.constraintlayout.solver.widgets.ConstraintWidget:
    public void <init>(int,int,int,int)
    public void <init>(int,int)
    public int getMaxHeight()
    public int getMaxWidth()
    public boolean isRoot()
    public boolean isRootContainer()
    public boolean isInsideConstraintLayout()
    public boolean hasAncestor(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public androidx.constraintlayout.solver.widgets.WidgetContainer getRootWidgetContainer()
    public boolean isWidthWrapContent()
    public boolean isHeightWrapContent()
    public java.lang.String getType()
    public void setType(java.lang.String)
    public void setDebugSolverName(androidx.constraintlayout.solver.LinearSystem,java.lang.String)
    int getInternalDrawX()
    int getInternalDrawY()
    public int getInternalDrawRight()
    public int getInternalDrawBottom()
    public int getOptimizerWrapWidth()
    public int getOptimizerWrapHeight()
    public int getDrawWidth()
    public int getDrawHeight()
    public int getDrawBottom()
    public int getDrawRight()
    public int getMinWidth()
    public int getMinHeight()
    public int getLeft()
    public int getTop()
    public float getHorizontalBiasPercent()
    public float getVerticalBiasPercent()
    public void setGoneMargin(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,int)
    public void forceUpdateDrawPosition()
    public void setDrawOrigin(int,int)
    public void setDrawX(int)
    public void setDrawY(int)
    public void setDrawWidth(int)
    public void setDrawHeight(int)
    public void setLength(int,int)
    public void setDimensionRatio(float,int)
    public float getDimensionRatio()
    public int getDimensionRatioSide()
    public void setDimension(int,int)
    public void setContainerItemSkip(int)
    public int getContainerItemSkip()
    public int getHorizontalChainStyle()
    public int getVerticalChainStyle()
    public void connectedTo(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,int)
    public void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)
    public void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength,int)
    public void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,int)
    public void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type)
    public void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,int,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength)
    public void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,int,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength,int)
    public void resetAllConstraints()
    public void resetAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor)
    public void resetAnchors(int)
    public void disconnectWidget(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public void disconnectUnlockedWidget(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public androidx.constraintlayout.solver.widgets.ConstraintWidget getHorizontalChainControlWidget()
    public androidx.constraintlayout.solver.widgets.ConstraintWidget getVerticalChainControlWidget()
    int mDistToTop
    int mDistToLeft
    int mDistToRight
    int mDistToBottom
    boolean mLeftHasCentered
    boolean mRightHasCentered
    boolean mTopHasCentered
    boolean mBottomHasCentered
    private static final boolean AUTOTAG_CENTER
    protected static final int SOLVER
    protected static final int DIRECT
    public static final int MATCH_CONSTRAINT_SPREAD
    public static final int MATCH_CONSTRAINT_WRAP
    public static final int MATCH_CONSTRAINT_PERCENT
    public static final int MATCH_CONSTRAINT_RATIO
    public static final int MATCH_CONSTRAINT_RATIO_RESOLVED
    public static final int UNKNOWN
    public static final int HORIZONTAL
    public static final int VERTICAL
    public static final int VISIBLE
    public static final int INVISIBLE
    public static final int GONE
    public static final int CHAIN_SPREAD
    public static final int CHAIN_SPREAD_INSIDE
    public static final int CHAIN_PACKED
    private static final int WRAP
    protected static final int ANCHOR_LEFT
    protected static final int ANCHOR_RIGHT
    protected static final int ANCHOR_TOP
    protected static final int ANCHOR_BOTTOM
    protected static final int ANCHOR_BASELINE
    static final int DIMENSION_HORIZONTAL
    static final int DIMENSION_VERTICAL
androidx.recyclerview.widget.SnapHelper:
    static final float MILLISECONDS_PER_INCH
com.guilhermedaros.museunfc.R$integer
com.google.android.material.animation.AnimationUtils:
    public void <init>()
    public static int lerp(int,int,float)
com.google.android.material.expandable.ExpandableWidgetHelper:
    public void <init>(com.google.android.material.expandable.ExpandableWidget)
    private void dispatchExpandedStateChanged()
    public boolean setExpanded(boolean)
    private final android.view.View widget
    private boolean expanded
    private int expandedComponentIdHint
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer:
    public void <init>(int,int,int,int)
    public void <init>(int,int)
    public void fillMetrics(androidx.constraintlayout.solver.Metrics)
    public java.lang.String getType()
    public void setPadding(int,int,int,int)
    public void resetGraph()
    public java.util.ArrayList getVerticalGuidelines()
    public java.util.ArrayList getHorizontalGuidelines()
    public androidx.constraintlayout.solver.LinearSystem getSystem()
    public java.util.List getWidgetGroups()
    private static final boolean USE_SNAPSHOT
    private static final int MAX_ITERATIONS
    private static final boolean DEBUG
    private static final boolean DEBUG_LAYOUT
    static final boolean DEBUG_GRAPH
com.android.volley.toolbox.NetworkImageView$1
androidx.appcompat.view.menu.SubMenuBuilder:
    public void setShortcutsVisible(boolean)
com.google.android.material.internal.ManufacturerUtils:
    private void <init>()
    public static boolean isLGEDevice()
    public static boolean isSamsungDevice()
    public static boolean isDateInputKeyboardMissingSeparatorCharacters()
    private static final java.lang.String LGE
    private static final java.lang.String SAMSUNG
    private static final java.lang.String MEIZU
com.google.android.material.circularreveal.CircularRevealCompat:
    private void <init>()
    public static android.animation.Animator createCircularReveal(com.google.android.material.circularreveal.CircularRevealWidget,float,float,float,float)
androidx.annotation.RequiresPermission$Read
com.google.android.material.R$style:
    private void <init>()
androidx.versionedparcelable.CustomVersionedParcelable:
    public void onPreParceling(boolean)
    public void onPostParceling()
io.reactivex.android.schedulers.HandlerScheduler$ScheduledRunnable
androidx.appcompat.widget.ShareActionProvider$OnShareTargetSelectedListener
androidx.cursoradapter.widget.CursorAdapter:
    public void <init>(android.content.Context,android.database.Cursor)
    public void <init>(android.content.Context,android.database.Cursor,int)
    protected void init(android.content.Context,android.database.Cursor,boolean)
    public boolean hasStableIds()
    public android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)
    public android.widget.FilterQueryProvider getFilterQueryProvider()
    public void setFilterQueryProvider(android.widget.FilterQueryProvider)
    protected android.widget.FilterQueryProvider mFilterQueryProvider
    public static final int FLAG_AUTO_REQUERY
    public static final int FLAG_REGISTER_CONTENT_OBSERVER
androidx.appcompat.resources.R$color
com.google.android.material.navigation.NavigationView$2
androidx.cardview.R$color
androidx.appcompat.widget.ActivityChooserModel$OnChooseActivityListener
com.google.android.material.shape.ShapePath$PathCubicOperation
com.getkeepsafe.relinker.elf.Elf$ProgramHeader:
    public static final int PT_LOAD
    public static final int PT_DYNAMIC
androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject
io.realm.rx.RealmObservableFactory$13$2
androidx.recyclerview.widget.AsyncListUtil
com.google.gson.JsonStreamParser
androidx.recyclerview.widget.DefaultItemAnimator:
    private static final boolean DEBUG
androidx.core.view.ScaleGestureDetectorCompat
androidx.core.view.ViewGroupCompat:
    private void <init>()
    public static boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
    public static void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean)
    public static int getLayoutMode(android.view.ViewGroup)
    public static void setLayoutMode(android.view.ViewGroup,int)
    public static void setTransitionGroup(android.view.ViewGroup,boolean)
    public static int getNestedScrollAxes(android.view.ViewGroup)
    public static final int LAYOUT_MODE_CLIP_BOUNDS
    public static final int LAYOUT_MODE_OPTICAL_BOUNDS
androidx.core.app.NotificationCompat$CarExtender
com.caverock.androidsvg.SVG$Style$TextDirection
io.realm.internal.objectstore.OsObjectBuilder$2:
    public void handleItem(long,java.lang.String)
    public synthetic bridge void handleItem(long,java.lang.Object)
androidx.lifecycle.GenericLifecycleObserver
io.realm.MutableRealmObjectSchema
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat:
    private static final float PRECISION
    public static final int MAX_NUM_POINTS
    public static final double EPSILON
android.support.v4.app.INotificationSideChannel
com.caverock.androidsvg.SVG$Pattern
com.rollbar.android.provider.ClientProvider$Builder
com.android.volley.toolbox.ImageLoader$ImageCache
androidx.collection.CircularArray
androidx.viewpager2.R$id
androidx.transition.ChangeImageTransform
androidx.loader.R$color
io.realm.rx.package-info
io.realm.annotations.RealmClass
androidx.savedstate.R
com.getkeepsafe.relinker.ReLinkerInstance:
    public com.getkeepsafe.relinker.ReLinkerInstance log(com.getkeepsafe.relinker.ReLinker$Logger)
    public com.getkeepsafe.relinker.ReLinkerInstance force()
    public com.getkeepsafe.relinker.ReLinkerInstance recursively()
    public void loadLibrary(android.content.Context,java.lang.String,java.lang.String)
    public void loadLibrary(android.content.Context,java.lang.String,com.getkeepsafe.relinker.ReLinker$LoadListener)
    private static final java.lang.String LIB_DIR
androidx.annotation.GuardedBy
androidx.core.R$integer
com.google.android.material.internal.ViewOverlayApi14$OverlayViewGroup
androidx.recyclerview.widget.RecyclerView$RecycledViewPool:
    public void setMaxRecycledViews(int,int)
    public int getRecycledViewCount(int)
    int size()
    private static final int DEFAULT_MAX_SCRAP
com.google.android.material.transition.MaterialSharedAxis$Axis
androidx.vectordrawable.animated.R$dimen
androidx.core.graphics.BlendModeColorFilterCompat
com.caverock.androidsvg.SVG$Symbol
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action:
    public void <init>(int,int,int)
    public int getDx()
    public void setDx(int)
    public int getDy()
    public void setDy(int)
    public int getDuration()
    public void setDuration(int)
    public android.view.animation.Interpolator getInterpolator()
    public void setInterpolator(android.view.animation.Interpolator)
    public static final int UNDEFINED_DURATION
com.google.android.material.bottomappbar.BottomAppBar$2
androidx.appcompat.widget.SearchView$SearchAutoComplete:
    public void <init>(android.content.Context)
com.google.android.material.circularreveal.CircularRevealGridLayout
androidx.recyclerview.widget.AdapterHelper$UpdateOp:
    static final int ADD
    static final int REMOVE
    static final int UPDATE
    static final int MOVE
    static final int POOL_SIZE
androidx.core.app.ShareCompat
androidx.core.content.SharedPreferencesCompat$EditorCompat
com.google.android.material.datepicker.CompositeDateValidator$1
com.caverock.androidsvg.SVG$TextChild
androidx.lifecycle.MethodCallsLogger:
    public boolean approveCall(java.lang.String,int)
androidx.appcompat.widget.PopupMenu$1
androidx.annotation.TransitionRes
androidx.appcompat.widget.ListPopupWindow:
    public void <init>(android.content.Context,android.util.AttributeSet)
    private static boolean isConfirmKey(int)
    public int getPromptPosition()
    public void setForceIgnoreOutsideTouch(boolean)
    public void setDropDownAlwaysVisible(boolean)
    public boolean isDropDownAlwaysVisible()
    public void setSoftInputMode(int)
    public int getSoftInputMode()
    public void setListSelector(android.graphics.drawable.Drawable)
    public int getAnimationStyle()
    public android.graphics.Rect getEpicenterBounds()
    public int getHeight()
    public void setHeight(int)
    public void setWindowLayoutType(int)
    public void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)
    public void setPromptView(android.view.View)
    public void postShow()
    public int getInputMethodMode()
    public boolean performItemClick(int)
    void setListItemExpandMax(int)
    public boolean onKeyDown(int,android.view.KeyEvent)
    public boolean onKeyUp(int,android.view.KeyEvent)
    public boolean onKeyPreIme(int,android.view.KeyEvent)
    public android.view.View$OnTouchListener createDragToOpenListener(android.view.View)
    private static final java.lang.String TAG
    private static final boolean DEBUG
    static final int EXPAND_LIST_TIMEOUT
    public static final int POSITION_PROMPT_ABOVE
    public static final int POSITION_PROMPT_BELOW
    public static final int MATCH_PARENT
    public static final int WRAP_CONTENT
    public static final int INPUT_METHOD_FROM_FOCUSABLE
    public static final int INPUT_METHOD_NEEDED
    public static final int INPUT_METHOD_NOT_NEEDED
androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord
androidx.appcompat.widget.FitWindowsLinearLayout:
    public void <init>(android.content.Context)
com.google.android.material.datepicker.TimeSource:
    static com.google.android.material.datepicker.TimeSource fixed(long,java.util.TimeZone)
    static com.google.android.material.datepicker.TimeSource fixed(long)
androidx.core.app.ComponentActivity$ExtraData
androidx.appcompat.view.menu.ActionMenuItem:
    public androidx.appcompat.view.menu.ActionMenuItem setExclusiveCheckable(boolean)
    public boolean invoke()
    public boolean requiresActionButton()
    public boolean requiresOverflow()
    private static final int NO_ICON
    private static final int CHECKABLE
    private static final int CHECKED
    private static final int EXCLUSIVE
    private static final int HIDDEN
    private static final int ENABLED
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState
io.realm.RealmCollection:
    public abstract io.realm.RealmQuery where()
    public abstract java.lang.Number min(java.lang.String)
    public abstract java.lang.Number max(java.lang.String)
    public abstract java.lang.Number sum(java.lang.String)
    public abstract double average(java.lang.String)
    public abstract java.util.Date maxDate(java.lang.String)
    public abstract java.util.Date minDate(java.lang.String)
    public abstract boolean deleteAllFromRealm()
    public abstract boolean load()
    public abstract boolean isValid()
    public abstract boolean isManaged()
    public abstract boolean contains(java.lang.Object)
    public abstract io.realm.RealmCollection freeze()
io.realm.internal.OsObjectSchemaInfo:
    private static native java.lang.String nativeGetClassName(long)
    public java.lang.String getClassName()
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams:
    public void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams)
    public void setFullSpan(boolean)
    public static final int INVALID_SPAN_ID
com.android.volley.toolbox.HurlStack:
    private static final int HTTP_CONTINUE
androidx.annotation.PluralsRes
androidx.recyclerview.widget.DiffUtil
androidx.transition.CircularPropagation
com.google.android.material.datepicker.RangeDateSelector$2
androidx.recyclerview.widget.ListUpdateCallback
com.google.android.material.internal.ViewUtils$RelativePadding:
    public void applyToView(android.view.View)
androidx.vectordrawable.animated.R$style
com.google.android.material.shape.EdgeTreatment:
    public void getEdgePath(float,float,com.google.android.material.shape.ShapePath)
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter
io.realm.internal.UncheckedRow:
    public long getColumnCount()
    public long getLink(long)
    public void setLong(long,long)
    public void setBoolean(long,boolean)
    public void setFloat(long,float)
    public void setDouble(long,double)
    public void setDate(long,java.util.Date)
    public void setString(long,java.lang.String)
    public void setBinaryByteArray(long,byte[])
    public void setLink(long,long)
    public void nullifyLink(long)
    public void setNull(long)
    public io.realm.internal.CheckedRow convertToChecked()
    public void checkIfAttached()
    public boolean hasColumn(java.lang.String)
    public io.realm.internal.Row freeze(io.realm.internal.OsSharedRealm)
    public boolean isLoaded()
    protected native long nativeGetColumnCount(long)
    protected native void nativeSetLong(long,long,long)
    protected native void nativeSetBoolean(long,long,boolean)
    protected native void nativeSetFloat(long,long,float)
    protected native long nativeGetLink(long,long)
    protected native void nativeSetDouble(long,long,double)
    protected native void nativeSetTimestamp(long,long,long)
    protected native void nativeSetString(long,long,java.lang.String)
    protected native void nativeSetByteArray(long,long,byte[])
    protected native void nativeSetLink(long,long,long)
    protected native void nativeNullifyLink(long,long)
    protected native boolean nativeHasColumn(long,java.lang.String)
    protected native void nativeSetNull(long,long)
    protected native long nativeFreeze(long,long)
com.google.android.material.bottomnavigation.BottomNavigationView$SavedState
androidx.fragment.app.DialogFragment:
    public void <init>()
    public void setStyle(int,int)
    public void show(androidx.fragment.app.FragmentManager,java.lang.String)
    public int show(androidx.fragment.app.FragmentTransaction,java.lang.String)
    public void showNow(androidx.fragment.app.FragmentManager,java.lang.String)
    public void dismiss()
    public void dismissAllowingStateLoss()
    void dismissInternal(boolean,boolean)
    public android.app.Dialog getDialog()
    public final android.app.Dialog requireDialog()
    public int getTheme()
    public void setCancelable(boolean)
    public boolean isCancelable()
    public void setShowsDialog(boolean)
    public boolean getShowsDialog()
    public void onAttach(android.content.Context)
    public void onDetach()
    public void onCreate(android.os.Bundle)
    public android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle)
    public void setupDialog(android.app.Dialog,int)
    public android.app.Dialog onCreateDialog(android.os.Bundle)
    public void onCancel(android.content.DialogInterface)
    public void onDismiss(android.content.DialogInterface)
    public void onActivityCreated(android.os.Bundle)
    public void onStart()
    public void onSaveInstanceState(android.os.Bundle)
    public void onStop()
    public void onDestroyView()
    private android.os.Handler mHandler
    private java.lang.Runnable mDismissRunnable
    int mStyle
    int mTheme
    boolean mCancelable
    boolean mShowsDialog
    int mBackStackId
    android.app.Dialog mDialog
    boolean mViewDestroyed
    boolean mDismissed
    boolean mShownByMe
    public static final int STYLE_NORMAL
    public static final int STYLE_NO_TITLE
    public static final int STYLE_NO_FRAME
    public static final int STYLE_NO_INPUT
    private static final java.lang.String SAVED_DIALOG_STATE_TAG
    private static final java.lang.String SAVED_STYLE
    private static final java.lang.String SAVED_THEME
    private static final java.lang.String SAVED_CANCELABLE
    private static final java.lang.String SAVED_SHOWS_DIALOG
    private static final java.lang.String SAVED_BACK_STACK_ID
androidx.viewpager2.adapter.FragmentStateAdapter$3
androidx.appcompat.R$styleable:
    private void <init>()
org.slf4j.LoggerFactory:
    static void reset()
    static final java.lang.String CODES_PREFIX
    static final java.lang.String NO_STATICLOGGERBINDER_URL
    static final java.lang.String MULTIPLE_BINDINGS_URL
    static final java.lang.String NULL_LF_URL
    static final java.lang.String VERSION_MISMATCH
    static final java.lang.String SUBSTITUTE_LOGGER_URL
    static final java.lang.String LOGGER_NAME_MISMATCH_URL
    static final java.lang.String REPLAY_URL
    static final java.lang.String UNSUCCESSFUL_INIT_URL
    static final java.lang.String UNSUCCESSFUL_INIT_MSG
    static final int UNINITIALIZED
    static final int ONGOING_INITIALIZATION
    static final int FAILED_INITIALIZATION
    static final int SUCCESSFUL_INITIALIZATION
    static final int NOP_FALLBACK_INITIALIZATION
    static final java.lang.String DETECT_LOGGER_NAME_MISMATCH_PROPERTY
    static final java.lang.String JAVA_VENDOR_PROPERTY
androidx.appcompat.app.AlertController:
    public void setButtonPanelLayoutHint(int)
    public android.widget.Button getButton(int)
androidx.recyclerview.widget.AsyncListDiffer$1$2
com.google.android.material.transition.platform.MaterialContainerTransformSharedElementCallback$2
com.google.android.material.transition.FitModeEvaluators
androidx.core.view.DisplayCutoutCompat
androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat:
    private void <init>()
androidx.appcompat.widget.ActivityChooserModel$DefaultSorter
com.android.volley.toolbox.HttpClientStack:
    private static java.util.List getPostParameterPairs(java.util.Map)
    private static final java.lang.String HEADER_CONTENT_TYPE
android.support.v4.os.ResultReceiver$MyResultReceiver
androidx.annotation.experimental.R
io.realm.RealmCache$Callback0
androidx.recyclerview.widget.TileList
androidx.core.widget.TintableCompoundButton:
    public abstract android.graphics.PorterDuff$Mode getSupportButtonTintMode()
io.realm.internal.OsResults$7
com.google.android.material.snackbar.SnackbarManager:
    private void showNextSnackbarLocked()
    private boolean isNextSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$Callback)
    public void show(int,com.google.android.material.snackbar.SnackbarManager$Callback)
    public void dismiss(com.google.android.material.snackbar.SnackbarManager$Callback,int)
    public void onDismissed(com.google.android.material.snackbar.SnackbarManager$Callback)
    public void onShown(com.google.android.material.snackbar.SnackbarManager$Callback)
    public boolean isCurrent(com.google.android.material.snackbar.SnackbarManager$Callback)
    public boolean isCurrentOrNext(com.google.android.material.snackbar.SnackbarManager$Callback)
    static final int MSG_TIMEOUT
    private static final int SHORT_DURATION_MS
    private static final int LONG_DURATION_MS
com.google.android.material.floatingactionbutton.FloatingActionButton$Size
io.realm.rx.RealmObservableFactory$7$1
io.realm.Realm:
    public static io.realm.RealmAsyncTask getInstanceAsync(io.realm.RealmConfiguration,io.realm.Realm$Callback)
    public static void removeDefaultConfiguration()
    private java.util.Scanner getFullStringScanner(java.io.InputStream)
    private io.realm.RealmModel createDetachedCopy(io.realm.RealmModel,int,java.util.Map)
    private void checkMaxDepth(int)
    private void checkValidObjectForDetach(io.realm.RealmModel)
    public static void migrateRealm(io.realm.RealmConfiguration)
    public static void migrateRealm(io.realm.RealmConfiguration,io.realm.RealmMigration)
    public static boolean deleteRealm(io.realm.RealmConfiguration)
    public static boolean compactRealm(io.realm.RealmConfiguration)
    public static int getGlobalInstanceCount(io.realm.RealmConfiguration)
    public static int getLocalInstanceCount(io.realm.RealmConfiguration)
    public io.reactivex.Flowable asFlowable()
    public boolean isEmpty()
    public void createAllFromJson(java.lang.Class,org.json.JSONArray)
    public void createOrUpdateAllFromJson(java.lang.Class,org.json.JSONArray)
    public void createAllFromJson(java.lang.Class,java.lang.String)
    public void createOrUpdateAllFromJson(java.lang.Class,java.lang.String)
    public void createAllFromJson(java.lang.Class,java.io.InputStream)
    public void createOrUpdateAllFromJson(java.lang.Class,java.io.InputStream)
    public io.realm.RealmModel createObjectFromJson(java.lang.Class,org.json.JSONObject)
    public io.realm.RealmModel createOrUpdateObjectFromJson(java.lang.Class,org.json.JSONObject)
    public io.realm.RealmModel createObjectFromJson(java.lang.Class,java.lang.String)
    public io.realm.RealmModel createOrUpdateObjectFromJson(java.lang.Class,java.lang.String)
    public io.realm.RealmModel createObjectFromJson(java.lang.Class,java.io.InputStream)
    public io.realm.RealmModel createOrUpdateObjectFromJson(java.lang.Class,java.io.InputStream)
    public io.realm.RealmModel createObject(java.lang.Class)
    io.realm.RealmModel createObjectInternal(java.lang.Class,boolean,java.util.List)
    public io.realm.RealmModel createObject(java.lang.Class,java.lang.Object)
    io.realm.RealmModel createObjectInternal(java.lang.Class,java.lang.Object,boolean,java.util.List)
    public varargs io.realm.RealmModel copyToRealm(io.realm.RealmModel,io.realm.ImportFlag[])
    public varargs java.util.List copyToRealm(java.lang.Iterable,io.realm.ImportFlag[])
    public void insert(java.util.Collection)
    public void insert(io.realm.RealmModel)
    public void insertOrUpdate(java.util.Collection)
    public void insertOrUpdate(io.realm.RealmModel)
    public varargs java.util.List copyToRealmOrUpdate(java.lang.Iterable,io.realm.ImportFlag[])
    public java.util.List copyFromRealm(java.lang.Iterable)
    public java.util.List copyFromRealm(java.lang.Iterable,int)
    public io.realm.RealmModel copyFromRealm(io.realm.RealmModel)
    public io.realm.RealmModel copyFromRealm(io.realm.RealmModel,int)
    public void addChangeListener(io.realm.RealmChangeListener)
    public void removeChangeListener(io.realm.RealmChangeListener)
    public void removeAllChangeListeners()
    public void executeTransaction(io.realm.Realm$Transaction)
    public io.realm.RealmAsyncTask executeTransactionAsync(io.realm.Realm$Transaction)
    public io.realm.RealmAsyncTask executeTransactionAsync(io.realm.Realm$Transaction,io.realm.Realm$Transaction$OnError)
    public void delete(java.lang.Class)
    public io.realm.RealmAsyncTask unsubscribeAsync(java.lang.String,io.realm.Realm$UnsubscribeCallback)
    public io.realm.Realm freeze()
    public synthetic bridge void deleteAll()
    public synthetic bridge long getVersion()
    public synthetic bridge io.realm.BaseRealm freeze()
    public synthetic bridge void stopWaitForChange()
    public synthetic bridge boolean waitForChange()
    public synthetic bridge void writeEncryptedCopyTo(java.io.File,byte[])
    public synthetic bridge void writeCopyTo(java.io.File)
    public synthetic bridge void refresh()
    public synthetic bridge boolean isAutoRefresh()
    public synthetic bridge void setAutoRefresh(boolean)
    private static final java.lang.String NULL_CONFIG_MSG
    public static final java.lang.String DEFAULT_REALM_NAME
androidx.core.app.RemoteInput$EditChoicesBeforeSending
com.rollbar.notifier.provider.notifier.VersionHelper
androidx.transition.Transition$MatchOrder
io.realm.rx.RealmObservableFactory$7
com.google.gson.internal.LinkedHashTreeMap$AvlBuilder
androidx.viewpager.widget.PagerTitleStrip
androidx.core.hardware.fingerprint.FingerprintManagerCompat$1
com.google.android.material.behavior.SwipeDismissBehavior:
    public void setListener(com.google.android.material.behavior.SwipeDismissBehavior$OnDismissListener)
    public com.google.android.material.behavior.SwipeDismissBehavior$OnDismissListener getListener()
    public void setDragDismissDistance(float)
    public void setSensitivity(float)
    public int getDragState()
    public static final int STATE_IDLE
    public static final int STATE_DRAGGING
    public static final int STATE_SETTLING
    public static final int SWIPE_DIRECTION_START_TO_END
    public static final int SWIPE_DIRECTION_END_TO_START
    public static final int SWIPE_DIRECTION_ANY
    private static final float DEFAULT_DRAG_DISMISS_THRESHOLD
    private static final float DEFAULT_ALPHA_START_DISTANCE
    private static final float DEFAULT_ALPHA_END_DISTANCE
androidx.core.graphics.PathUtils
com.google.android.material.button.MaterialButtonToggleGroup$1
androidx.appcompat.view.menu.MenuBuilder:
    private void dispatchSaveInstanceState(android.os.Bundle)
    private void dispatchRestoreInstanceState(android.os.Bundle)
    public void savePresenterStates(android.os.Bundle)
    public void restorePresenterStates(android.os.Bundle)
    public void removeItemAt(int)
    public void clearAll()
    public void setShortcutsVisible(boolean)
    public void setCurrentMenuInfo(android.view.ContextMenu$ContextMenuInfo)
    public void setOptionalIconsVisible(boolean)
    private android.util.SparseArray mFrozenViewStates
    private static final java.lang.String TAG
    private static final java.lang.String PRESENTER_KEY
    private static final java.lang.String ACTION_VIEW_STATES_KEY
    private static final java.lang.String EXPANDED_ACTION_VIEW_ID
androidx.transition.R$attr
androidx.recyclerview.widget.RecyclerView$AdapterDataObservable:
    public void notifyItemRangeChanged(int,int)
    public void notifyItemRangeChanged(int,int,java.lang.Object)
    public void notifyItemRangeInserted(int,int)
    public void notifyItemRangeRemoved(int,int)
    public void notifyItemMoved(int,int)
io.realm.ProxyUtils
androidx.viewpager2.widget.ViewPager2$1
androidx.recyclerview.widget.RecyclerView$ViewCacheExtension:
    public void <init>()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat:
    public static androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean)
    public int getColumnCount()
    public int getRowCount()
    public boolean isHierarchical()
    public int getSelectionMode()
    public static final int SELECTION_MODE_NONE
    public static final int SELECTION_MODE_SINGLE
    public static final int SELECTION_MODE_MULTIPLE
androidx.appcompat.widget.ThemeUtils:
    public static android.content.res.ColorStateList createDisabledStateList(int,int)
    private void <init>()
androidx.appcompat.resources.R
io.realm.rx.RealmObservableFactory$17$2
com.jaredrummler.materialspinner.R$layout:
    private void <init>()
androidx.appcompat.app.ActionBarDrawerToggle$Delegate
androidx.appcompat.widget.ButtonBarLayout:
    private static final int PEEK_BUTTON_DP
androidx.appcompat.widget.RtlSpacingHelper:
    public static final int UNDEFINED
com.google.android.material.behavior.SwipeDismissBehavior$1:
    private static final int INVALID_POINTER_ID
com.android.volley.toolbox.StringRequest
androidx.recyclerview.widget.LinearLayoutManager$LayoutState:
    void log()
    static final java.lang.String TAG
    static final int LAYOUT_START
    static final int LAYOUT_END
    static final int INVALID_LAYOUT
    static final int ITEM_DIRECTION_HEAD
    static final int ITEM_DIRECTION_TAIL
    static final int SCROLLING_OFFSET_NaN
androidx.core.view.ActionProvider:
    public android.content.Context getContext()
    public void refreshVisibility()
    public void subUiVisibilityChanged(boolean)
    private static final java.lang.String TAG
com.google.android.material.floatingactionbutton.AnimatorTracker
io.realm.rx.RealmObservableFactory$StrongReferenceCounter:
    public void acquireReference(java.lang.Object)
    public void releaseReference(java.lang.Object)
com.google.android.material.shape.InterpolateOnScrollPositionChangeHelper$1
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl:
    void initializeBackgroundDrawable(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,android.content.res.ColorStateList,int)
    void setMinTouchTargetSize(int)
    final void setMaxImageSize(int)
    void removeOnShowAnimationListener(android.animation.Animator$AnimatorListener)
    public void removeOnHideAnimationListener(android.animation.Animator$AnimatorListener)
    void removeTransformationCallback(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalTransformationCallback)
    com.google.android.material.shape.MaterialShapeDrawable createShapeDrawable()
    static final long ELEVATION_ANIM_DURATION
    static final long ELEVATION_ANIM_DELAY
    static final int ANIM_STATE_NONE
    static final int ANIM_STATE_HIDING
    static final int ANIM_STATE_SHOWING
    static final float SHADOW_MULTIPLIER
    private static final float HIDE_OPACITY
    private static final float HIDE_SCALE
    private static final float HIDE_ICON_SCALE
    private static final float SHOW_OPACITY
    private static final float SHOW_SCALE
    private static final float SHOW_ICON_SCALE
androidx.appcompat.widget.AppCompatButton:
    public void <init>(android.content.Context)
com.google.android.material.shape.InterpolateOnScrollPositionChangeHelper
androidx.versionedparcelable.R
com.google.gson.internal.LinkedHashTreeMap
androidx.core.app.NotificationManagerCompat
androidx.vectordrawable.animated.R
androidx.core.app.RemoteInput$Source
androidx.appcompat.app.NavItemSelectedListener
androidx.core.app.NotificationManagerCompat$CancelTask
androidx.appcompat.widget.ActivityChooserView$4
androidx.collection.ArraySet:
    public void <init>(androidx.collection.ArraySet)
    public void <init>(java.util.Collection)
    public void addAll(androidx.collection.ArraySet)
    public boolean removeAll(androidx.collection.ArraySet)
    private static final boolean DEBUG
    private static final java.lang.String TAG
    private static final int BASE_SIZE
    private static final int CACHE_SIZE
com.google.gson.internal.Primitives:
    private void <init>()
    public static boolean isWrapperType(java.lang.reflect.Type)
    public static java.lang.Class unwrap(java.lang.Class)
androidx.coordinatorlayout.R
androidx.core.os.OperationCanceledException
com.google.android.material.datepicker.UtcDates:
    static void setTimeSource(com.google.android.material.datepicker.TimeSource)
    private void <init>()
    static java.text.SimpleDateFormat getTextInputFormat()
    static java.lang.String getTextInputHint(android.content.res.Resources,java.text.SimpleDateFormat)
    static java.text.SimpleDateFormat getSimpleFormat(java.lang.String)
    static android.icu.text.DateFormat getYearAbbrMonthDayFormat(java.util.Locale)
    static android.icu.text.DateFormat getAbbrMonthDayFormat(java.util.Locale)
    static java.text.DateFormat getMediumFormat()
    static java.text.DateFormat getMediumFormat(java.util.Locale)
    static java.text.DateFormat getMediumNoYear()
    static java.text.DateFormat getMediumNoYear(java.util.Locale)
    static java.text.DateFormat getFullFormat()
    private static java.lang.String removeYearFromDateFormatPattern(java.lang.String)
    private static int findCharactersInDateFormatPattern(java.lang.String,java.lang.String,int,int)
    static final java.lang.String UTC
androidx.savedstate.SavedStateRegistry:
    public void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider)
    public void unregisterSavedStateProvider(java.lang.String)
    public boolean isRestored()
    public void runOnNextRecreation(java.lang.Class)
    private androidx.savedstate.Recreator$SavedStateProvider mRecreatorProvider
    private static final java.lang.String SAVED_COMPONENTS_KEY
com.google.gson.internal.Streams:
    private void <init>()
    public static java.io.Writer writerForAppendable(java.lang.Appendable)
io.realm.FrozenPendingRow
androidx.vectordrawable.animated.R$styleable
com.google.android.material.resources.MaterialResources:
    private void <init>()
androidx.recyclerview.R$style
io.realm.Realm$2
com.rollbar.notifier.provider.timestamp.TimestampProvider
androidx.core.app.NotificationCompat$GroupAlertBehavior
androidx.viewpager2.adapter.FragmentStateAdapter$2:
    void <init>(androidx.viewpager2.adapter.FragmentStateAdapter,androidx.viewpager2.adapter.FragmentViewHolder)
androidx.appcompat.widget.AppCompatSpinner:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,int)
    private static final int MAX_ITEMS_MEASURED
    private static final java.lang.String TAG
    private static final int MODE_DIALOG
    private static final int MODE_DROPDOWN
    private static final int MODE_THEME
androidx.activity.R$style
com.google.android.material.expandable.ExpandableTransformationWidget
androidx.transition.ChangeTransform$3
com.google.android.material.transition.MaterialContainerTransform$1
androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListenerWrapper
io.realm.BaseModuleMediator:
    public void insert(io.realm.Realm,io.realm.RealmModel,java.util.Map)
    public void insert(io.realm.Realm,java.util.Collection)
    public void insertOrUpdate(io.realm.Realm,io.realm.RealmModel,java.util.Map)
    public void insertOrUpdate(io.realm.Realm,java.util.Collection)
    public io.realm.RealmModel createOrUpdateUsingJsonObject(java.lang.Class,io.realm.Realm,org.json.JSONObject,boolean)
    public io.realm.RealmModel createUsingJsonStream(java.lang.Class,io.realm.Realm,android.util.JsonReader)
    public io.realm.RealmModel createDetachedCopy(io.realm.RealmModel,int,java.util.Map)
androidx.core.content.res.ColorStateListInflaterCompat:
    private void <init>()
io.realm.annotations.Beta
com.google.android.material.transition.platform.MaterialContainerTransform$FadeMode
com.caverock.androidsvg.SVG$Stop
com.google.gson.JsonArray:
    public void <init>(int)
    public com.google.gson.JsonArray deepCopy()
    public void add(java.lang.Boolean)
    public void add(java.lang.Character)
    public void add(java.lang.Number)
    public void add(java.lang.String)
    public void addAll(com.google.gson.JsonArray)
    public com.google.gson.JsonElement set(int,com.google.gson.JsonElement)
    public boolean remove(com.google.gson.JsonElement)
    public com.google.gson.JsonElement remove(int)
    public boolean contains(com.google.gson.JsonElement)
    public int size()
    public com.google.gson.JsonElement get(int)
    public java.lang.Number getAsNumber()
    public java.lang.String getAsString()
    public double getAsDouble()
    public java.math.BigDecimal getAsBigDecimal()
    public java.math.BigInteger getAsBigInteger()
    public float getAsFloat()
    public long getAsLong()
    public int getAsInt()
    public byte getAsByte()
    public char getAsCharacter()
    public short getAsShort()
    public boolean getAsBoolean()
    public synthetic bridge com.google.gson.JsonElement deepCopy()
com.caverock.androidsvg.CSSParser$Selector
androidx.transition.FragmentTransitionSupport$4:
    public android.graphics.Rect onGetEpicenter(androidx.transition.Transition)
com.google.android.material.transition.MaterialVisibility
com.caverock.androidsvg.SVG$SvgElementBase
org.slf4j.MDC
androidx.appcompat.widget.ScrollingTabContainerView:
    public void <init>(android.content.Context)
    private androidx.appcompat.widget.LinearLayoutCompat createTabLayout()
    public void animateToVisibility(int)
    public void addTab(androidx.appcompat.app.ActionBar$Tab,boolean)
    public void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean)
    public void updateTab(int)
    public void removeTabAt(int)
    public void removeAllTabs()
    protected android.view.ViewPropertyAnimator mVisibilityAnim
    protected final androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener mVisAnimListener
    private static final java.lang.String TAG
    private static final int FADE_DURATION
com.google.android.material.transition.MaterialFade
androidx.drawerlayout.widget.DrawerLayout$SimpleDrawerListener
androidx.core.database.DatabaseUtilsCompat
com.google.android.material.snackbar.BaseTransientBottomBar$7
com.google.android.material.appbar.AppBarLayout$Behavior:
    public synthetic bridge void setDragCallback(com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback)
    public synthetic bridge boolean isHorizontalOffsetEnabled()
    public synthetic bridge void setHorizontalOffsetEnabled(boolean)
    public synthetic bridge boolean isVerticalOffsetEnabled()
    public synthetic bridge void setVerticalOffsetEnabled(boolean)
    public synthetic bridge int getLeftAndRightOffset()
    public synthetic bridge boolean setLeftAndRightOffset(int)
com.google.android.material.appbar.ViewUtilsLollipop:
    void <init>()
androidx.core.app.NotificationCompat$1
androidx.viewpager2.adapter.FragmentViewHolder:
    private void <init>(android.widget.FrameLayout)
    static androidx.viewpager2.adapter.FragmentViewHolder create(android.view.ViewGroup)
androidx.appcompat.view.menu.ListMenuPresenter:
    int getItemIndexOffset()
    public void setItemIndexOffset(int)
    public void saveHierarchyState(android.os.Bundle)
    public void restoreHierarchyState(android.os.Bundle)
    public void setId(int)
    public int getId()
    public android.os.Parcelable onSaveInstanceState()
    public void onRestoreInstanceState(android.os.Parcelable)
    private int mId
    private static final java.lang.String TAG
    public static final java.lang.String VIEWS_TAG
com.google.android.material.bottomsheet.BottomSheetBehavior$SaveFlags
androidx.recyclerview.widget.GridLayoutManager:
    public void <init>(android.content.Context,int)
    public void setSpanSizeLookup(androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup)
    public androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup getSpanSizeLookup()
    public void setUsingSpansToEstimateScrollbarDimensions(boolean)
    public boolean isUsingSpansToEstimateScrollbarDimensions()
    private static final boolean DEBUG
    private static final java.lang.String TAG
    public static final int DEFAULT_SPAN_COUNT
com.google.android.material.appbar.AppBarLayout$Behavior$DragCallback
com.caverock.androidsvg.SimpleAssetResolver
androidx.annotation.AnimRes
androidx.annotation.XmlRes
com.google.gson.JsonObject:
    private com.google.gson.JsonElement createJsonElement(java.lang.Object)
    public com.google.gson.JsonObject deepCopy()
    public com.google.gson.JsonElement remove(java.lang.String)
    public void addProperty(java.lang.String,java.lang.String)
    public void addProperty(java.lang.String,java.lang.Number)
    public void addProperty(java.lang.String,java.lang.Boolean)
    public void addProperty(java.lang.String,java.lang.Character)
    public java.util.Set keySet()
    public int size()
    public boolean has(java.lang.String)
    public com.google.gson.JsonElement get(java.lang.String)
    public com.google.gson.JsonPrimitive getAsJsonPrimitive(java.lang.String)
    public com.google.gson.JsonArray getAsJsonArray(java.lang.String)
    public com.google.gson.JsonObject getAsJsonObject(java.lang.String)
    public synthetic bridge com.google.gson.JsonElement deepCopy()
androidx.lifecycle.ViewModelStore:
    java.util.Set keys()
io.realm.io_realm_sync_permissions_ClassPermissionsRealmProxy$ClassPermissionsColumnInfo:
    void <init>(io.realm.internal.OsSchemaInfo)
    void <init>(io.realm.internal.ColumnInfo,boolean)
    protected final io.realm.internal.ColumnInfo copy(boolean)
androidx.appcompat.R
com.rollbar.android.Rollbar$5
androidx.activity.OnBackPressedDispatcher:
    public void <init>()
    public void addCallback(androidx.activity.OnBackPressedCallback)
    public boolean hasEnabledCallbacks()
io.realm.internal.fields.FieldDescriptor:
    public final int length()
androidx.annotation.experimental.Experimental$Level
androidx.annotation.IntDef
androidx.core.os.CancellationSignal$OnCancelListener
io.realm.log.package-info
androidx.recyclerview.R$layout
androidx.core.view.KeyEventDispatcher:
    private void <init>()
androidx.viewpager2.R$color
javax.annotation.Nonnull$Checker
androidx.appcompat.view.menu.ActionMenuItemView:
    public void <init>(android.content.Context)
    public void setShortcut(boolean,char)
    public boolean showsIcon()
    private static final java.lang.String TAG
    private static final int MAX_ICON_SIZE
androidx.core.content.res.TypedArrayUtils:
    public static boolean getBoolean(android.content.res.TypedArray,int,int,boolean)
    public static android.graphics.drawable.Drawable getDrawable(android.content.res.TypedArray,int,int)
    public static int getInt(android.content.res.TypedArray,int,int,int)
    public static int getResourceId(android.content.res.TypedArray,int,int,int)
    public static java.lang.String getString(android.content.res.TypedArray,int,int)
    public static java.lang.CharSequence getText(android.content.res.TypedArray,int,int)
    public static java.lang.CharSequence[] getTextArray(android.content.res.TypedArray,int,int)
    public static int getAttr(android.content.Context,int,int)
    private void <init>()
    private static final java.lang.String NAMESPACE
com.google.android.material.R$plurals
androidx.transition.TransitionInflater
com.google.android.material.R$string:
    private void <init>()
androidx.recyclerview.widget.DiffUtil$Range
com.google.android.material.snackbar.BaseTransientBottomBar$10
androidx.core.content.pm.ShortcutManagerCompat
com.google.android.material.transition.platform.FadeModeResult
androidx.coordinatorlayout.R$dimen
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState:
    private static final long REVERSED_BIT
    private static final long REVERSIBLE_FLAG_BIT
androidx.core.widget.ScrollerCompat
androidx.core.provider.FontsContractCompat$4$7
androidx.core.app.ActivityCompat$RequestPermissionsRequestCodeValidator
com.google.android.material.switchmaterial.SwitchMaterial
androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl
com.google.android.material.transition.FadeModeEvaluator
com.google.android.material.internal.BaselineLayout:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener
com.caverock.androidsvg.SVG$Mask
io.realm.internal.objectstore.OsObjectBuilder$1:
    public void handleItem(long,io.realm.RealmModel)
    public synthetic bridge void handleItem(long,java.lang.Object)
com.caverock.androidsvg.SVG$SvgConditionalElement
com.google.android.material.transition.platform.FadeProvider$1
androidx.viewpager.widget.PagerAdapter:
    public void startUpdate(android.view.View)
    public java.lang.Object instantiateItem(android.view.View,int)
    public void destroyItem(android.view.View,int,java.lang.Object)
    public void setPrimaryItem(android.view.View,int,java.lang.Object)
    public void finishUpdate(android.view.View)
    public void notifyDataSetChanged()
    public void registerDataSetObserver(android.database.DataSetObserver)
    public void unregisterDataSetObserver(android.database.DataSetObserver)
    public java.lang.CharSequence getPageTitle(int)
    public static final int POSITION_UNCHANGED
    public static final int POSITION_NONE
javax.annotation.OverridingMethodsMustInvokeSuper
com.google.android.material.slider.BasicLabelFormatter
androidx.appcompat.widget.ToolbarWidgetWrapper:
    private void ensureSpinner()
    public java.lang.CharSequence getSubtitle()
    public boolean hasIcon()
    public boolean hasLogo()
    public boolean hasEmbeddedTabs()
    public boolean isTitleTruncated()
    public void setNavigationMode(int)
    public void setDropdownParams(android.widget.SpinnerAdapter,android.widget.AdapterView$OnItemSelectedListener)
    public void setDropdownSelectedPosition(int)
    public int getDropdownSelectedPosition()
    public int getDropdownItemCount()
    public android.view.View getCustomView()
    public void animateToVisibility(int)
    public void setNavigationIcon(int)
    public void setDefaultNavigationIcon(android.graphics.drawable.Drawable)
    public void saveHierarchyState(android.util.SparseArray)
    public void restoreHierarchyState(android.util.SparseArray)
    public void setBackgroundDrawable(android.graphics.drawable.Drawable)
    public int getHeight()
    public int getVisibility()
    private android.widget.Spinner mSpinner
    private static final java.lang.String TAG
    private static final int AFFECTS_LOGO_MASK
    private static final long DEFAULT_FADE_DURATION_MS
org.slf4j.MarkerFactory
io.realm.internal.modules.CompositeMediator:
    public void insert(io.realm.Realm,io.realm.RealmModel,java.util.Map)
    public void insert(io.realm.Realm,java.util.Collection)
    public void insertOrUpdate(io.realm.Realm,io.realm.RealmModel,java.util.Map)
    public void insertOrUpdate(io.realm.Realm,java.util.Collection)
    public io.realm.RealmModel createOrUpdateUsingJsonObject(java.lang.Class,io.realm.Realm,org.json.JSONObject,boolean)
    public io.realm.RealmModel createUsingJsonStream(java.lang.Class,io.realm.Realm,android.util.JsonReader)
    public io.realm.RealmModel createDetachedCopy(io.realm.RealmModel,int,java.util.Map)
io.realm.ImmutableRealmObjectSchema:
    void <init>(io.realm.BaseRealm,io.realm.RealmSchema,io.realm.internal.Table)
    public io.realm.RealmObjectSchema setClassName(java.lang.String)
    public varargs io.realm.RealmObjectSchema addField(java.lang.String,java.lang.Class,io.realm.FieldAttribute[])
    public io.realm.RealmObjectSchema addRealmObjectField(java.lang.String,io.realm.RealmObjectSchema)
    public io.realm.RealmObjectSchema addRealmListField(java.lang.String,io.realm.RealmObjectSchema)
    public io.realm.RealmObjectSchema addRealmListField(java.lang.String,java.lang.Class)
    public io.realm.RealmObjectSchema removeField(java.lang.String)
    public io.realm.RealmObjectSchema renameField(java.lang.String,java.lang.String)
    public io.realm.RealmObjectSchema addIndex(java.lang.String)
    public io.realm.RealmObjectSchema removeIndex(java.lang.String)
    public io.realm.RealmObjectSchema addPrimaryKey(java.lang.String)
    public io.realm.RealmObjectSchema removePrimaryKey()
    public io.realm.RealmObjectSchema setRequired(java.lang.String,boolean)
    public io.realm.RealmObjectSchema setNullable(java.lang.String,boolean)
    public io.realm.RealmObjectSchema transform(io.realm.RealmObjectSchema$Function)
    private static final java.lang.String SCHEMA_IMMUTABLE_EXCEPTION_MSG
com.guilhermedaros.museunfc.R$drawable
androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate
com.google.android.material.datepicker.MaterialTextInputPicker
androidx.constraintlayout.solver.SolverVariable$1
androidx.viewpager2.widget.ViewPager2$SavedState$1
androidx.viewpager2.widget.ViewPager2
androidx.drawerlayout.R$layout
io.realm.RealmCache$CreateRealmRunnable$2
androidx.appcompat.resources.R$styleable:
    private void <init>()
androidx.core.provider.FontsContractCompat$Columns
com.google.android.material.circularreveal.cardview.CircularRevealCardView:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void actualDraw(android.graphics.Canvas)
    public boolean actualIsOpaque()
io.realm.rx.RealmObservableFactory$13
com.android.volley.toolbox.ImageLoader$ImageContainer
androidx.loader.content.Loader:
    public void <init>(android.content.Context)
    public void deliverResult(java.lang.Object)
    public void deliverCancellation()
    public android.content.Context getContext()
    public int getId()
    public void registerListener(int,androidx.loader.content.Loader$OnLoadCompleteListener)
    public void registerOnLoadCanceledListener(androidx.loader.content.Loader$OnLoadCanceledListener)
    public void unregisterOnLoadCanceledListener(androidx.loader.content.Loader$OnLoadCanceledListener)
    public boolean isStarted()
    public boolean isAbandoned()
    public boolean isReset()
    protected void onStartLoading()
    protected boolean onCancelLoad()
    public void forceLoad()
    protected void onForceLoad()
    protected void onStopLoading()
    protected void onAbandon()
    protected void onReset()
    public boolean takeContentChanged()
    public void commitContentChanged()
    public void rollbackContentChanged()
    public void onContentChanged()
    public java.lang.String toString()
    int mId
    androidx.loader.content.Loader$OnLoadCompleteListener mListener
    androidx.loader.content.Loader$OnLoadCanceledListener mOnLoadCanceledListener
    android.content.Context mContext
    boolean mStarted
    boolean mAbandoned
    boolean mReset
    boolean mContentChanged
    boolean mProcessingChange
com.google.android.material.transition.FitModeEvaluator
com.rollbar.Rollbar$1
com.google.android.material.bottomsheet.BottomSheetDialog
androidx.lifecycle.ClassesInfoCache:
    private static final int CALL_TYPE_NO_ARG
    private static final int CALL_TYPE_PROVIDER
    private static final int CALL_TYPE_PROVIDER_WITH_EVENT
androidx.constraintlayout.widget.ConstraintLayout:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public void fillMetrics(androidx.constraintlayout.solver.Metrics)
    static final boolean ALLOWS_EMBEDDED
    private static final boolean CACHE_MEASURED_DIMENSION
    public static final java.lang.String VERSION
    private static final java.lang.String TAG
    private static final boolean USE_CONSTRAINTS_HELPER
    private static final boolean DEBUG
    public static final int DESIGN_INFO_ID
androidx.transition.ChangeImageTransform$1
androidx.drawerlayout.widget.DrawerLayout$LayoutParams
com.google.android.material.slider.LabelFormatter
androidx.activity.R$id
androidx.appcompat.widget.ActivityChooserView$Callbacks
androidx.core.view.MarginLayoutParamsCompat:
    public static void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int)
    public static boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams)
    public static int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams)
    public static void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
    public static void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
    private void <init>()
androidx.core.graphics.BlendModeCompat
io.reactivex.android.schedulers.AndroidSchedulers$MainHolder
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat:
    public static androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat create(android.content.Context,int)
    private static boolean unregisterPlatformCallback(android.graphics.drawable.AnimatedVectorDrawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    private static void registerPlatformCallback(android.graphics.drawable.AnimatedVectorDrawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    private void removeAnimatorSetListener()
    public static void registerAnimationCallback(android.graphics.drawable.Drawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    public static boolean unregisterAnimationCallback(android.graphics.drawable.Drawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    public static void clearAnimationCallbacks(android.graphics.drawable.Drawable)
    public void registerAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    public boolean unregisterAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    public void clearAnimationCallbacks()
    androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState mCachedConstantStateDelegate
    private static final java.lang.String LOGTAG
    private static final java.lang.String ANIMATED_VECTOR
    private static final java.lang.String TARGET
    private static final boolean DBG_ANIMATION_VECTOR_DRAWABLE
androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask
androidx.appcompat.app.AlertController$RecycleListView:
    public void <init>(android.content.Context)
com.google.android.material.animation.AnimatorSetCompat:
    public void <init>()
com.google.android.material.transition.platform.FitModeEvaluators$2
com.google.android.material.R$interpolator
io.realm.BaseRealm$5
androidx.annotation.IntRange
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation
io.realm.internal.sync.OsSubscription:
    private native void nativeStopListening(long)
    public void removeChangeListener(io.realm.RealmChangeListener)
io.realm.sync.permissions.package-info
com.caverock.androidsvg.SVG$Path
com.google.android.material.internal.ViewOverlayImpl
androidx.core.text.BidiFormatter$DirectionalityEstimator:
    private static final int DIR_TYPE_CACHE_SIZE
com.google.android.material.resources.MaterialAttributes:
    public void <init>()
    public static boolean resolveBooleanOrThrow(android.content.Context,int,java.lang.String)
    public static int resolveMinimumAccessibleTouchTarget(android.content.Context)
    public static int resolveDimension(android.content.Context,int,int)
com.caverock.androidsvg.SVG$ClipPath
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuViewAccessibilityDelegate
io.realm.internal.objectstore.OsObjectBuilder$10:
    public void handleItem(long,java.util.Date)
    public synthetic bridge void handleItem(long,java.lang.Object)
com.guilhermedaros.museunfc.Fragments.FragmentEscrever:
    private com.guilhermedaros.museunfc.Fragments.FragmentNFC mNfcWriteFragment
    private static final java.lang.String ARG_PARAM1
    private static final java.lang.String ARG_PARAM2
com.google.android.material.shape.ShapeAppearanceModel:
    public com.google.android.material.shape.ShapeAppearanceModel withCornerSize(com.google.android.material.shape.CornerSize)
com.google.android.material.R$styleable:
    private void <init>()
androidx.recyclerview.widget.MessageThreadUtil$2$1
com.google.android.material.datepicker.RangeDateSelector$1
com.caverock.androidsvg.SVG$SvgConditional
com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuItem
io.realm.rx.RealmObservableFactory$8$2
javax.annotation.WillCloseWhenClosed
com.caverock.androidsvg.SVG$Unit
com.guilhermedaros.museunfc.Acitivities.MainActivity$PlaceholderFragment
androidx.core.widget.ListViewCompat:
    public static boolean canScrollList(android.widget.ListView,int)
    private void <init>()
com.google.android.material.transition.VisibilityAnimatorProvider
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer:
    void <init>(androidx.viewpager2.adapter.FragmentStateAdapter)
    private androidx.viewpager2.widget.ViewPager2 inferViewPager(androidx.recyclerview.widget.RecyclerView)
    void register(androidx.recyclerview.widget.RecyclerView)
    void unregister(androidx.recyclerview.widget.RecyclerView)
    private androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback mPageChangeCallback
    private androidx.recyclerview.widget.RecyclerView$AdapterDataObserver mDataObserver
    private androidx.lifecycle.LifecycleEventObserver mLifecycleObserver
    private androidx.viewpager2.widget.ViewPager2 mViewPager
    private long mPrimaryItemId
    final synthetic androidx.viewpager2.adapter.FragmentStateAdapter this$0
androidx.transition.Styleable$TransitionSet
com.google.android.material.transition.FadeThroughProvider
androidx.viewpager2.adapter.StatefulAdapter
androidx.core.R$dimen
com.google.android.material.slider.Slider$OnChangeListener
io.realm.internal.StatefulCollectionChangeSet:
    public io.realm.OrderedCollectionChangeSet$State getState()
    public int[] getDeletions()
    public int[] getInsertions()
    public int[] getChanges()
    public io.realm.OrderedCollectionChangeSet$Range[] getDeletionRanges()
    public io.realm.OrderedCollectionChangeSet$Range[] getInsertionRanges()
    public io.realm.OrderedCollectionChangeSet$Range[] getChangeRanges()
    public java.lang.Throwable getError()
    public boolean isCompleteResult()
androidx.core.view.ViewCompat$FocusRealDirection
androidx.core.app.JobIntentService$GenericWorkItem
androidx.transition.ViewOverlayApi14$OverlayViewGroup:
    protected android.view.ViewParent invalidateChildInParentFast(int,int,android.graphics.Rect)
io.realm.Realm$UnsubscribeCallback
com.google.android.material.dialog.MaterialDialogs
androidx.appcompat.widget.AppCompatAutoCompleteTextView:
    public void <init>(android.content.Context)
androidx.transition.ArcMotion
androidx.coordinatorlayout.R$attr:
    private void <init>()
androidx.appcompat.R$layout:
    private void <init>()
androidx.appcompat.widget.AppCompatSeekBarHelper:
    android.graphics.drawable.Drawable getTickMark()
    void setTickMarkTintList(android.content.res.ColorStateList)
    android.content.res.ColorStateList getTickMarkTintList()
    void setTickMarkTintMode(android.graphics.PorterDuff$Mode)
    android.graphics.PorterDuff$Mode getTickMarkTintMode()
com.google.android.material.navigation.NavigationView$1
io.realm.internal.OsResults$4
com.google.android.material.navigation.NavigationView$SavedState
androidx.annotation.DrawableRes
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$2
com.guilhermedaros.museunfc.BuildConfig
com.caverock.androidsvg.CSSParser$MediaType
com.google.android.material.slider.RangeSlider
com.google.android.material.slider.BaseSlider$1
androidx.recyclerview.widget.ItemTouchHelper$ViewDropHandler
javax.annotation.Syntax
org.slf4j.helpers.BasicMDCAdapter
io.realm.internal.objectstore.OsObjectBuilder$7:
    public void handleItem(long,java.lang.Boolean)
    public synthetic bridge void handleItem(long,java.lang.Object)
androidx.viewpager2.adapter.FragmentStateAdapter$4
com.google.android.material.internal.ViewOverlayApi14
androidx.recyclerview.widget.ItemTouchHelper$2
com.google.android.material.textfield.IndicatorViewController:
    private boolean isCaptionStateHelperText(int)
    boolean errorIsDisplayed()
    boolean helperTextIsDisplayed()
    boolean helperTextShouldBeShown()
    android.content.res.ColorStateList getHelperTextViewColors()
    private static final int CAPTION_TRANSLATE_Y_ANIMATION_DURATION
    private static final int CAPTION_OPACITY_FADE_ANIMATION_DURATION
    static final int ERROR_INDEX
    static final int HELPER_INDEX
    static final int COUNTER_INDEX
    private static final int CAPTION_STATE_NONE
    private static final int CAPTION_STATE_ERROR
    private static final int CAPTION_STATE_HELPER_TEXT
org.slf4j.spi.MDCAdapter
com.google.android.material.internal.ParcelableSparseBooleanArray
com.google.android.material.internal.NavigationMenuItemView:
    public void <init>(android.content.Context)
    public void recycle()
    public void setShortcut(boolean,char)
    public boolean showsIcon()
androidx.appcompat.widget.PopupMenu$2
io.realm.internal.TableQuery:
    private void throwImmutable()
    private native void nativeGroup(long)
    private native void nativeEndGroup(long)
    private native void nativeOr(long)
    private native void nativeNot(long)
    private native void nativeNotEqual(long,long[],long[],long)
    private native void nativeGreater(long,long[],long[],long)
    private native void nativeGreaterEqual(long,long[],long[],long)
    private native void nativeLess(long,long[],long[],long)
    private native void nativeLessEqual(long,long[],long[],long)
    private native void nativeBetween(long,long[],long,long)
    private native void nativeEqual(long,long[],long[],float)
    private native void nativeNotEqual(long,long[],long[],float)
    private native void nativeGreater(long,long[],long[],float)
    private native void nativeGreaterEqual(long,long[],long[],float)
    private native void nativeLess(long,long[],long[],float)
    private native void nativeLessEqual(long,long[],long[],float)
    private native void nativeBetween(long,long[],float,float)
    private native void nativeEqual(long,long[],long[],double)
    private native void nativeNotEqual(long,long[],long[],double)
    private native void nativeGreater(long,long[],long[],double)
    private native void nativeGreaterEqual(long,long[],long[],double)
    private native void nativeLess(long,long[],long[],double)
    private native void nativeLessEqual(long,long[],long[],double)
    private native void nativeBetween(long,long[],double,double)
    private native void nativeEqual(long,long[],long[],boolean)
    private native void nativeEqualTimestamp(long,long[],long[],long)
    private native void nativeNotEqualTimestamp(long,long[],long[],long)
    private native void nativeGreaterTimestamp(long,long[],long[],long)
    private native void nativeGreaterEqualTimestamp(long,long[],long[],long)
    private native void nativeLessTimestamp(long,long[],long[],long)
    private native void nativeLessEqualTimestamp(long,long[],long[],long)
    private native void nativeBetweenTimestamp(long,long[],long,long)
    private native void nativeEqual(long,long[],long[],byte[])
    private native void nativeNotEqual(long,long[],long[],byte[])
    private native void nativeNotEqual(long,long[],long[],java.lang.String,boolean)
    private native void nativeBeginsWith(long,long[],long[],java.lang.String,boolean)
    private native void nativeEndsWith(long,long[],long[],java.lang.String,boolean)
    private native void nativeLike(long,long[],long[],java.lang.String,boolean)
    private native void nativeContains(long,long[],long[],java.lang.String,boolean)
    private native void nativeIsEmpty(long,long[],long[])
    private native void nativeIsNotEmpty(long,long[],long[])
    private native void nativeAlwaysTrue(long)
    private native void nativeAlwaysFalse(long)
    private native long nativeSumInt(long,long)
    private native java.lang.Long nativeMaximumInt(long,long)
    private native java.lang.Long nativeMinimumInt(long,long)
    private native double nativeAverageInt(long,long)
    private native double nativeSumFloat(long,long)
    private native java.lang.Float nativeMaximumFloat(long,long)
    private native java.lang.Float nativeMinimumFloat(long,long)
    private native double nativeAverageFloat(long,long)
    private native double nativeSumDouble(long,long)
    private native java.lang.Double nativeMaximumDouble(long,long)
    private native java.lang.Double nativeMinimumDouble(long,long)
    private native double nativeAverageDouble(long,long)
    private native java.lang.Long nativeMaximumTimestamp(long,long)
    private native java.lang.Long nativeMinimumTimestamp(long,long)
    private native void nativeIsNotNull(long,long[],long[])
    private native long nativeCount(long)
    private native long nativeRemove(long)
    public io.realm.internal.TableQuery group()
    public io.realm.internal.TableQuery endGroup()
    public io.realm.internal.TableQuery or()
    public io.realm.internal.TableQuery not()
    public io.realm.internal.TableQuery notEqualTo(long[],long[],long)
    public io.realm.internal.TableQuery greaterThan(long[],long[],long)
    public io.realm.internal.TableQuery greaterThanOrEqual(long[],long[],long)
    public io.realm.internal.TableQuery lessThan(long[],long[],long)
    public io.realm.internal.TableQuery lessThanOrEqual(long[],long[],long)
    public io.realm.internal.TableQuery between(long[],long,long)
    public io.realm.internal.TableQuery equalTo(long[],long[],float)
    public io.realm.internal.TableQuery notEqualTo(long[],long[],float)
    public io.realm.internal.TableQuery greaterThan(long[],long[],float)
    public io.realm.internal.TableQuery greaterThanOrEqual(long[],long[],float)
    public io.realm.internal.TableQuery lessThan(long[],long[],float)
    public io.realm.internal.TableQuery lessThanOrEqual(long[],long[],float)
    public io.realm.internal.TableQuery between(long[],float,float)
    public io.realm.internal.TableQuery equalTo(long[],long[],double)
    public io.realm.internal.TableQuery notEqualTo(long[],long[],double)
    public io.realm.internal.TableQuery greaterThan(long[],long[],double)
    public io.realm.internal.TableQuery greaterThanOrEqual(long[],long[],double)
    public io.realm.internal.TableQuery lessThan(long[],long[],double)
    public io.realm.internal.TableQuery lessThanOrEqual(long[],long[],double)
    public io.realm.internal.TableQuery between(long[],double,double)
    public io.realm.internal.TableQuery equalTo(long[],long[],boolean)
    public io.realm.internal.TableQuery equalTo(long[],long[],java.util.Date)
    public io.realm.internal.TableQuery notEqualTo(long[],long[],java.util.Date)
    public io.realm.internal.TableQuery greaterThan(long[],long[],java.util.Date)
    public io.realm.internal.TableQuery greaterThanOrEqual(long[],long[],java.util.Date)
    public io.realm.internal.TableQuery lessThan(long[],long[],java.util.Date)
    public io.realm.internal.TableQuery lessThanOrEqual(long[],long[],java.util.Date)
    public io.realm.internal.TableQuery between(long[],java.util.Date,java.util.Date)
    public io.realm.internal.TableQuery equalTo(long[],long[],byte[])
    public io.realm.internal.TableQuery notEqualTo(long[],long[],byte[])
    public io.realm.internal.TableQuery equalTo(long[],long[],java.lang.String)
    public io.realm.internal.TableQuery notEqualTo(long[],long[],java.lang.String,io.realm.Case)
    public io.realm.internal.TableQuery notEqualTo(long[],long[],java.lang.String)
    public io.realm.internal.TableQuery beginsWith(long[],long[],java.lang.String,io.realm.Case)
    public io.realm.internal.TableQuery beginsWith(long[],long[],java.lang.String)
    public io.realm.internal.TableQuery endsWith(long[],long[],java.lang.String,io.realm.Case)
    public io.realm.internal.TableQuery endsWith(long[],long[],java.lang.String)
    public io.realm.internal.TableQuery like(long[],long[],java.lang.String,io.realm.Case)
    public io.realm.internal.TableQuery like(long[],long[],java.lang.String)
    public io.realm.internal.TableQuery contains(long[],long[],java.lang.String,io.realm.Case)
    public io.realm.internal.TableQuery contains(long[],long[],java.lang.String)
    public io.realm.internal.TableQuery isEmpty(long[],long[])
    public io.realm.internal.TableQuery isNotEmpty(long[],long[])
    public long sumInt(long)
    public java.lang.Long maximumInt(long)
    public java.lang.Long minimumInt(long)
    public double averageInt(long)
    public double sumFloat(long)
    public java.lang.Float maximumFloat(long)
    public java.lang.Float minimumFloat(long)
    public double averageFloat(long)
    public double sumDouble(long)
    public java.lang.Double maximumDouble(long)
    public java.lang.Double minimumDouble(long)
    public double averageDouble(long)
    public java.util.Date maximumDate(long)
    public java.util.Date minimumDate(long)
    public io.realm.internal.TableQuery isNotNull(long[],long[])
    public long count()
    public long remove()
    public void alwaysTrue()
    public void alwaysFalse()
    private static final boolean DEBUG
    private static final java.lang.String DATE_NULL_ERROR_MESSAGE
com.google.android.material.transition.MaterialElevationScale
androidx.transition.MatrixUtils
javax.annotation.concurrent.GuardedBy
androidx.lifecycle.MutableLiveData:
    public void postValue(java.lang.Object)
androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener
androidx.viewpager2.widget.CompositePageTransformer
androidx.core.content.res.FontResourcesParserCompat$FetchStrategy
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl:
    private static final long serialVersionUID
androidx.appcompat.widget.ActionBarContainer:
    public void <init>(android.content.Context)
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImpl
com.guilhermedaros.museunfc.R$interpolator
androidx.annotation.LongDef
com.google.android.material.R$anim
com.google.gson.internal.Streams$AppendableWriter$CurrentWrite
com.google.android.material.internal.DescendantOffsetUtils:
    public void <init>()
com.guilhermedaros.museunfc.Acitivities.LoginActivity$ProfileQuery:
    public static final int ADDRESS
    public static final int IS_PRIMARY
androidx.core.app.ServiceCompat
com.google.android.material.transition.FadeProvider
androidx.constraintlayout.solver.widgets.ConstraintAnchor:
    private boolean isConnectionToMe(androidx.constraintlayout.solver.widgets.ConstraintWidget,java.util.HashSet)
    public androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType getConnectionType()
    public void setConnectionType(androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType)
    public void setConnectionCreator(int)
    public boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,int)
    public boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)
    public boolean isSideAnchor()
    public boolean isSimilarDimensionConnection(androidx.constraintlayout.solver.widgets.ConstraintAnchor)
    public void setStrength(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength)
    public void setMargin(int)
    public void setGoneMargin(int)
    public boolean isVerticalAnchor()
    public int getSnapPriorityLevel()
    public int getPriorityLevel()
    public boolean isSnapCompatibleWith(androidx.constraintlayout.solver.widgets.ConstraintAnchor)
    public boolean isConnectionAllowed(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor)
    public boolean isConnectionAllowed(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public final androidx.constraintlayout.solver.widgets.ConstraintAnchor getOpposite()
    private static final boolean ALLOW_BINARY
    public static final int USER_CREATOR
    public static final int SCOUT_CREATOR
    public static final int AUTO_CONSTRAINT_CREATOR
    private static final int UNSET_GONE_MARGIN
com.google.android.material.circularreveal.CircularRevealHelper:
    public void <init>(com.google.android.material.circularreveal.CircularRevealHelper$Delegate)
    private void invalidateRevealInfo()
    private float getDistanceToFurthestCorner(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
    private void drawOverlayDrawable(android.graphics.Canvas)
    private boolean shouldDrawCircularReveal()
    private boolean shouldDrawScrim()
    private boolean shouldDrawOverlayDrawable()
    private void drawDebugMode(android.graphics.Canvas)
    private void drawDebugCircle(android.graphics.Canvas,int,float)
    private final com.google.android.material.circularreveal.CircularRevealHelper$Delegate delegate
    private final android.view.View view
    private final android.graphics.Path revealPath
    private final android.graphics.Paint revealPaint
    private final android.graphics.Paint scrimPaint
    private com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo revealInfo
    private android.graphics.drawable.Drawable overlayDrawable
    private android.graphics.Paint debugPaint
    private boolean buildingCircularRevealCache
    private boolean hasCircularRevealCache
    private static final boolean DEBUG
    public static final int BITMAP_SHADER
    public static final int CLIP_PATH
    public static final int REVEAL_ANIMATOR
androidx.loader.content.ModernAsyncTask$2
androidx.loader.content.ModernAsyncTask$WorkerRunnable
androidx.core.content.FileProvider
androidx.appcompat.R$string:
    private void <init>()
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl$1
com.google.android.material.R$attr:
    private void <init>()
com.google.android.material.transition.platform.MaterialContainerTransformSharedElementCallback$3
androidx.core.content.ContextCompat:
    protected void <init>()
    public static boolean startActivities(android.content.Context,android.content.Intent[])
    public static void startActivity(android.content.Context,android.content.Intent,android.os.Bundle)
    public static java.io.File getDataDir(android.content.Context)
    public static java.io.File[] getObbDirs(android.content.Context)
    public static java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String)
    public static java.io.File[] getExternalCacheDirs(android.content.Context)
    public static int checkSelfPermission(android.content.Context,java.lang.String)
    public static java.io.File getNoBackupFilesDir(android.content.Context)
    public static java.io.File getCodeCacheDir(android.content.Context)
    private static synchronized java.io.File createFilesDir(java.io.File)
    public static android.content.Context createDeviceProtectedStorageContext(android.content.Context)
    public static boolean isDeviceProtectedStorage(android.content.Context)
    public static java.util.concurrent.Executor getMainExecutor(android.content.Context)
    public static void startForegroundService(android.content.Context,android.content.Intent)
    public static java.lang.Object getSystemService(android.content.Context,java.lang.Class)
    public static java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)
    private static final java.lang.String TAG
androidx.annotation.Dimension
com.google.android.material.animation.MotionSpec:
    private android.animation.PropertyValuesHolder[] clonePropertyValuesHolder(android.animation.PropertyValuesHolder[])
    public boolean hasPropertyValues(java.lang.String)
    public android.animation.PropertyValuesHolder[] getPropertyValues(java.lang.String)
    public android.animation.ObjectAnimator getAnimator(java.lang.String,java.lang.Object,android.util.Property)
    private static final java.lang.String TAG
androidx.core.widget.EdgeEffectCompat:
    public void <init>(android.content.Context)
    public void setSize(int,int)
    public boolean isFinished()
    public void finish()
    public boolean onPull(float)
    public boolean onPull(float,float)
    public boolean onRelease()
    public boolean onAbsorb(int)
    public boolean draw(android.graphics.Canvas)
    private android.widget.EdgeEffect mEdgeEffect
androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments:
    public int getStart()
    public int getEnd()
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams$Table:
    private void <init>()
    public static final int UNUSED
    public static final int ANDROID_ORIENTATION
    public static final int LAYOUT_CONSTRAINT_CIRCLE
    public static final int LAYOUT_CONSTRAINT_CIRCLE_RADIUS
    public static final int LAYOUT_CONSTRAINT_CIRCLE_ANGLE
    public static final int LAYOUT_CONSTRAINT_GUIDE_BEGIN
    public static final int LAYOUT_CONSTRAINT_GUIDE_END
    public static final int LAYOUT_CONSTRAINT_GUIDE_PERCENT
    public static final int LAYOUT_CONSTRAINT_LEFT_TO_LEFT_OF
    public static final int LAYOUT_CONSTRAINT_LEFT_TO_RIGHT_OF
    public static final int LAYOUT_CONSTRAINT_RIGHT_TO_LEFT_OF
    public static final int LAYOUT_CONSTRAINT_RIGHT_TO_RIGHT_OF
    public static final int LAYOUT_CONSTRAINT_TOP_TO_TOP_OF
    public static final int LAYOUT_CONSTRAINT_TOP_TO_BOTTOM_OF
    public static final int LAYOUT_CONSTRAINT_BOTTOM_TO_TOP_OF
    public static final int LAYOUT_CONSTRAINT_BOTTOM_TO_BOTTOM_OF
    public static final int LAYOUT_CONSTRAINT_BASELINE_TO_BASELINE_OF
    public static final int LAYOUT_CONSTRAINT_START_TO_END_OF
    public static final int LAYOUT_CONSTRAINT_START_TO_START_OF
    public static final int LAYOUT_CONSTRAINT_END_TO_START_OF
    public static final int LAYOUT_CONSTRAINT_END_TO_END_OF
    public static final int LAYOUT_GONE_MARGIN_LEFT
    public static final int LAYOUT_GONE_MARGIN_TOP
    public static final int LAYOUT_GONE_MARGIN_RIGHT
    public static final int LAYOUT_GONE_MARGIN_BOTTOM
    public static final int LAYOUT_GONE_MARGIN_START
    public static final int LAYOUT_GONE_MARGIN_END
    public static final int LAYOUT_CONSTRAINED_WIDTH
    public static final int LAYOUT_CONSTRAINED_HEIGHT
    public static final int LAYOUT_CONSTRAINT_HORIZONTAL_BIAS
    public static final int LAYOUT_CONSTRAINT_VERTICAL_BIAS
    public static final int LAYOUT_CONSTRAINT_WIDTH_DEFAULT
    public static final int LAYOUT_CONSTRAINT_HEIGHT_DEFAULT
    public static final int LAYOUT_CONSTRAINT_WIDTH_MIN
    public static final int LAYOUT_CONSTRAINT_WIDTH_MAX
    public static final int LAYOUT_CONSTRAINT_WIDTH_PERCENT
    public static final int LAYOUT_CONSTRAINT_HEIGHT_MIN
    public static final int LAYOUT_CONSTRAINT_HEIGHT_MAX
    public static final int LAYOUT_CONSTRAINT_HEIGHT_PERCENT
    public static final int LAYOUT_CONSTRAINT_LEFT_CREATOR
    public static final int LAYOUT_CONSTRAINT_TOP_CREATOR
    public static final int LAYOUT_CONSTRAINT_RIGHT_CREATOR
    public static final int LAYOUT_CONSTRAINT_BOTTOM_CREATOR
    public static final int LAYOUT_CONSTRAINT_BASELINE_CREATOR
    public static final int LAYOUT_CONSTRAINT_DIMENSION_RATIO
    public static final int LAYOUT_CONSTRAINT_HORIZONTAL_WEIGHT
    public static final int LAYOUT_CONSTRAINT_VERTICAL_WEIGHT
    public static final int LAYOUT_CONSTRAINT_HORIZONTAL_CHAINSTYLE
    public static final int LAYOUT_CONSTRAINT_VERTICAL_CHAINSTYLE
    public static final int LAYOUT_EDITOR_ABSOLUTEX
    public static final int LAYOUT_EDITOR_ABSOLUTEY
io.realm.RealmList:
    public varargs void <init>(java.lang.Object[])
    void <init>(java.lang.Class,io.realm.internal.OsList,io.realm.BaseRealm)
    void <init>(java.lang.String,io.realm.internal.OsList,io.realm.BaseRealm)
    private java.lang.Object firstImpl(boolean,java.lang.Object)
    private java.lang.Object lastImpl(boolean,java.lang.Object)
    private void checkForAddRemoveListener(java.lang.Object,boolean)
    private io.realm.ManagedListOperator getOperator(io.realm.BaseRealm,io.realm.internal.OsList,java.lang.Class,java.lang.String)
    io.realm.internal.OsList getOsList()
    public boolean isValid()
    public io.realm.RealmList freeze()
    public boolean isFrozen()
    public void move(int,int)
    public boolean deleteFirstFromRealm()
    public boolean deleteLastFromRealm()
    public java.lang.Object first()
    public java.lang.Object first(java.lang.Object)
    public java.lang.Object last()
    public java.lang.Object last(java.lang.Object)
    public io.realm.RealmResults sort(java.lang.String)
    public io.realm.RealmResults sort(java.lang.String,io.realm.Sort)
    public io.realm.RealmResults sort(java.lang.String,io.realm.Sort,java.lang.String,io.realm.Sort)
    public io.realm.RealmResults sort(java.lang.String[],io.realm.Sort[])
    public void deleteFromRealm(int)
    public io.realm.RealmQuery where()
    public java.lang.Number min(java.lang.String)
    public java.lang.Number max(java.lang.String)
    public java.lang.Number sum(java.lang.String)
    public double average(java.lang.String)
    public java.util.Date maxDate(java.lang.String)
    public java.util.Date minDate(java.lang.String)
    public boolean deleteAllFromRealm()
    public boolean load()
    public io.realm.OrderedRealmCollectionSnapshot createSnapshot()
    public io.realm.Realm getRealm()
    public io.reactivex.Flowable asFlowable()
    public io.reactivex.Observable asChangesetObservable()
    public void addChangeListener(io.realm.OrderedRealmCollectionChangeListener)
    public void removeChangeListener(io.realm.OrderedRealmCollectionChangeListener)
    public void addChangeListener(io.realm.RealmChangeListener)
    public void removeChangeListener(io.realm.RealmChangeListener)
    public void removeAllChangeListeners()
    public synthetic bridge io.realm.RealmCollection freeze()
    private static final java.lang.String ONLY_IN_MANAGED_MODE_MESSAGE
    static final java.lang.String ALLOWED_ONLY_FOR_REALM_MODEL_ELEMENT_MESSAGE
    private static final java.lang.String REMOVE_OUTSIDE_TRANSACTION_ERROR
com.android.volley.NoConnectionError:
    public void <init>()
org.slf4j.IMarkerFactory
androidx.appcompat.widget.ShareActionProvider
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath:
    public void printVPath(int)
    public java.lang.String nodesToString(androidx.core.graphics.PathParser$PathDataNode[])
    public boolean canApplyTheme()
    public void applyTheme(android.content.res.Resources$Theme)
    protected static final int FILL_TYPE_WINDING
androidx.core.app.NotificationCompat$Action$Builder
com.google.android.material.floatingactionbutton.MotionStrategy:
    public abstract com.google.android.material.animation.MotionSpec getCurrentMotionSpec()
    public abstract int getDefaultMotionSpecResource()
    public abstract void addAnimationListener(android.animation.Animator$AnimatorListener)
    public abstract void removeAnimationListener(android.animation.Animator$AnimatorListener)
com.google.android.material.slider.BaseOnSliderTouchListener
com.guilhermedaros.museunfc.Models.UsuarioLoginRequest:
    public java.lang.String getLogin()
    public void setLogin(java.lang.String)
    public java.lang.String getSenha()
    public void setSenha(java.lang.String)
com.caverock.androidsvg.SVG$Rect
androidx.appcompat.R$bool:
    private void <init>()
io.realm.RealmModelListOperator
androidx.core.os.UserManagerCompat
androidx.appcompat.app.WindowDecorActionBar$TabImpl
androidx.core.util.AtomicFile
androidx.lifecycle.LiveData:
    public void observeForever(androidx.lifecycle.Observer)
    public void removeObservers(androidx.lifecycle.LifecycleOwner)
    protected void postValue(java.lang.Object)
    int getVersion()
    public boolean hasObservers()
    static final int START_VERSION
androidx.annotation.CallSuper
androidx.vectordrawable.R$integer
androidx.loader.R$layout
com.google.android.material.datepicker.SmoothCalendarLayoutManager:
    private static final float MILLISECONDS_PER_INCH
io.realm.rx.RealmObservableFactory$15$1
com.google.android.material.snackbar.BaseTransientBottomBar$3
com.google.android.material.transition.MaterialContainerTransform$2
androidx.core.app.ShareCompat$IntentBuilder
androidx.fragment.app.FragmentManagerNonConfig
androidx.viewpager2.R$attr
javax.annotation.meta.When
com.caverock.androidsvg.SVGParseException
com.google.android.material.circularreveal.CircularRevealWidget:
    public abstract void draw(android.graphics.Canvas)
    public abstract boolean isOpaque()
    public abstract android.graphics.drawable.Drawable getCircularRevealOverlayDrawable()
org.slf4j.MDC$MDCCloseable
androidx.core.view.MenuItemCompat:
    public static void setShowAsAction(android.view.MenuItem,int)
    public static android.view.MenuItem setActionView(android.view.MenuItem,android.view.View)
    public static android.view.MenuItem setActionView(android.view.MenuItem,int)
    public static android.view.View getActionView(android.view.MenuItem)
    public static androidx.core.view.ActionProvider getActionProvider(android.view.MenuItem)
    public static boolean expandActionView(android.view.MenuItem)
    public static boolean collapseActionView(android.view.MenuItem)
    public static boolean isActionViewExpanded(android.view.MenuItem)
    public static android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,androidx.core.view.MenuItemCompat$OnActionExpandListener)
    public static java.lang.CharSequence getContentDescription(android.view.MenuItem)
    public static java.lang.CharSequence getTooltipText(android.view.MenuItem)
    public static void setShortcut(android.view.MenuItem,char,char,int,int)
    public static int getNumericModifiers(android.view.MenuItem)
    public static int getAlphabeticModifiers(android.view.MenuItem)
    public static android.content.res.ColorStateList getIconTintList(android.view.MenuItem)
    public static android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem)
    private void <init>()
    private static final java.lang.String TAG
    public static final int SHOW_AS_ACTION_NEVER
    public static final int SHOW_AS_ACTION_IF_ROOM
    public static final int SHOW_AS_ACTION_ALWAYS
    public static final int SHOW_AS_ACTION_WITH_TEXT
    public static final int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
androidx.appcompat.app.ActionBar:
    public abstract void setCustomView(android.view.View)
    public abstract void setCustomView(android.view.View,androidx.appcompat.app.ActionBar$LayoutParams)
    public abstract void setCustomView(int)
    public abstract void setIcon(int)
    public abstract void setIcon(android.graphics.drawable.Drawable)
    public abstract void setLogo(int)
    public abstract void setLogo(android.graphics.drawable.Drawable)
    public abstract void setListNavigationCallbacks(android.widget.SpinnerAdapter,androidx.appcompat.app.ActionBar$OnNavigationListener)
    public abstract void setSelectedNavigationItem(int)
    public abstract int getSelectedNavigationIndex()
    public abstract int getNavigationItemCount()
    public abstract void setTitle(java.lang.CharSequence)
    public abstract void setTitle(int)
    public abstract void setSubtitle(java.lang.CharSequence)
    public abstract void setSubtitle(int)
    public abstract void setDisplayOptions(int)
    public abstract void setDisplayOptions(int,int)
    public abstract void setDisplayUseLogoEnabled(boolean)
    public abstract void setDisplayShowHomeEnabled(boolean)
    public abstract void setDisplayHomeAsUpEnabled(boolean)
    public abstract void setDisplayShowTitleEnabled(boolean)
    public abstract void setDisplayShowCustomEnabled(boolean)
    public abstract void setBackgroundDrawable(android.graphics.drawable.Drawable)
    public void setStackedBackgroundDrawable(android.graphics.drawable.Drawable)
    public void setSplitBackgroundDrawable(android.graphics.drawable.Drawable)
    public abstract android.view.View getCustomView()
    public abstract java.lang.CharSequence getTitle()
    public abstract java.lang.CharSequence getSubtitle()
    public abstract int getNavigationMode()
    public abstract void setNavigationMode(int)
    public abstract androidx.appcompat.app.ActionBar$Tab newTab()
    public abstract void addTab(androidx.appcompat.app.ActionBar$Tab)
    public abstract void addTab(androidx.appcompat.app.ActionBar$Tab,boolean)
    public abstract void addTab(androidx.appcompat.app.ActionBar$Tab,int)
    public abstract void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean)
    public abstract void removeTab(androidx.appcompat.app.ActionBar$Tab)
    public abstract void removeTabAt(int)
    public abstract void removeAllTabs()
    public abstract void selectTab(androidx.appcompat.app.ActionBar$Tab)
    public abstract androidx.appcompat.app.ActionBar$Tab getSelectedTab()
    public abstract androidx.appcompat.app.ActionBar$Tab getTabAt(int)
    public abstract int getTabCount()
    public abstract int getHeight()
    public abstract void show()
    public abstract void hide()
    public abstract boolean isShowing()
    public abstract void addOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener)
    public abstract void removeOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener)
    public void setHomeButtonEnabled(boolean)
    public boolean isTitleTruncated()
    public void setHomeAsUpIndicator(android.graphics.drawable.Drawable)
    public void setHomeAsUpIndicator(int)
    public void setHomeActionContentDescription(java.lang.CharSequence)
    public void setHomeActionContentDescription(int)
    public void setHideOnContentScrollEnabled(boolean)
    public boolean isHideOnContentScrollEnabled()
    public int getHideOffset()
    public void setHideOffset(int)
    public void setElevation(float)
    public float getElevation()
    boolean requestFocus()
    public static final int NAVIGATION_MODE_STANDARD
    public static final int NAVIGATION_MODE_LIST
    public static final int NAVIGATION_MODE_TABS
    public static final int DISPLAY_USE_LOGO
    public static final int DISPLAY_SHOW_HOME
    public static final int DISPLAY_HOME_AS_UP
    public static final int DISPLAY_SHOW_TITLE
    public static final int DISPLAY_SHOW_CUSTOM
com.google.gson.JsonIOException:
    private static final long serialVersionUID
androidx.transition.ChangeClipBounds
androidx.loader.content.Loader$OnLoadCompleteListener:
    public abstract void onLoadComplete(androidx.loader.content.Loader,java.lang.Object)
androidx.transition.ChangeTransform$GhostListener
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase
com.android.volley.NetworkError:
    public void <init>(com.android.volley.NetworkResponse)
androidx.recyclerview.widget.RecyclerView:
    public void <init>(android.content.Context)
    public boolean hasFixedSize()
    public void swapAdapter(androidx.recyclerview.widget.RecyclerView$Adapter,boolean)
    public void addOnChildAttachStateChangeListener(androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener)
    public void removeOnChildAttachStateChangeListener(androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener)
    public void clearOnChildAttachStateChangeListeners()
    public androidx.recyclerview.widget.RecyclerView$ItemDecoration getItemDecorationAt(int)
    public void removeItemDecorationAt(int)
    public void clearOnScrollListeners()
    public boolean isLayoutFrozen()
    void assertInLayoutOrScroll(java.lang.String)
    public boolean isAnimating()
    public void invalidateItemDecorations()
    public int getChildPosition(android.view.View)
    public int getChildAdapterPosition(android.view.View)
    public long getChildItemId(android.view.View)
    public androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int)
    public androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForLayoutPosition(int)
    public android.view.View findChildViewUnder(float,float)
    public void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect)
    public boolean hasNestedScrollingParent(int)
    public boolean dispatchNestedScroll(int,int,int,int,int[],int)
    static final java.lang.String TAG
    static final boolean DEBUG
    static final boolean VERBOSE_TRACING
    static final boolean DISPATCH_TEMP_DETACH
    public static final int HORIZONTAL
    public static final int VERTICAL
    static final int DEFAULT_ORIENTATION
    public static final int NO_POSITION
    public static final long NO_ID
    public static final int INVALID_TYPE
    public static final int TOUCH_SLOP_DEFAULT
    public static final int TOUCH_SLOP_PAGING
    public static final int UNDEFINED_DURATION
    static final int MAX_SCROLL_DURATION
    static final java.lang.String TRACE_SCROLL_TAG
    private static final java.lang.String TRACE_ON_LAYOUT_TAG
    private static final java.lang.String TRACE_ON_DATA_SET_CHANGE_LAYOUT_TAG
    private static final java.lang.String TRACE_HANDLE_ADAPTER_UPDATES_TAG
    static final java.lang.String TRACE_BIND_VIEW_TAG
    static final java.lang.String TRACE_PREFETCH_TAG
    static final java.lang.String TRACE_NESTED_PREFETCH_TAG
    static final java.lang.String TRACE_CREATE_VIEW_TAG
    private static final int INVALID_POINTER
    public static final int SCROLL_STATE_IDLE
    public static final int SCROLL_STATE_DRAGGING
    public static final int SCROLL_STATE_SETTLING
    static final long FOREVER_NS
androidx.core.widget.AutoSizeableTextView:
    public abstract void setAutoSizeTextTypeWithDefaults(int)
    public abstract void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)
    public abstract void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)
    public abstract int getAutoSizeTextType()
    public abstract int getAutoSizeStepGranularity()
    public abstract int getAutoSizeMinTextSize()
    public abstract int getAutoSizeMaxTextSize()
    public abstract int[] getAutoSizeTextAvailableSizes()
androidx.appcompat.widget.AppCompatCompoundButtonHelper$DirectSetButtonDrawableInterface
androidx.viewpager2.R$style
com.google.android.material.snackbar.BaseTransientBottomBar$4
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter:
    public androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
    public int getId()
    public android.os.Parcelable onSaveInstanceState()
    public void onRestoreInstanceState(android.os.Parcelable)
io.realm.rx.RealmObservableFactory$14
androidx.versionedparcelable.VersionedParcelStream
com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDirection
androidx.appcompat.app.AppCompatDelegate:
    public static androidx.appcompat.app.AppCompatDelegate create(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback)
    public static androidx.appcompat.app.AppCompatDelegate create(android.content.Context,android.app.Activity,androidx.appcompat.app.AppCompatCallback)
    public static void setDefaultNightMode(int)
    public static void setCompatVectorFromResourcesEnabled(boolean)
    public static boolean isCompatVectorFromResourcesEnabled()
    private static void applyDayNightToActiveDelegates()
    public abstract androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate()
    public abstract boolean hasWindowFeature(int)
    public abstract androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
    public abstract android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
    public abstract void setHandleNativeActionModesEnabled(boolean)
    public abstract boolean isHandleNativeActionModesEnabled()
    public abstract boolean applyDayNight()
    public abstract void setLocalNightMode(int)
    static final java.lang.String TAG
    public static final int MODE_NIGHT_FOLLOW_SYSTEM
    public static final int MODE_NIGHT_AUTO_TIME
    public static final int MODE_NIGHT_AUTO
    public static final int MODE_NIGHT_NO
    public static final int MODE_NIGHT_YES
    public static final int MODE_NIGHT_AUTO_BATTERY
    public static final int MODE_NIGHT_UNSPECIFIED
    public static final int FEATURE_SUPPORT_ACTION_BAR
    public static final int FEATURE_SUPPORT_ACTION_BAR_OVERLAY
    public static final int FEATURE_ACTION_MODE_OVERLAY
androidx.recyclerview.widget.DiffUtil$Callback
androidx.core.view.inputmethod.EditorInfoCompat
androidx.appcompat.view.menu.MenuHelper
com.google.android.material.transition.platform.MaterialContainerTransform$FitMode
androidx.appcompat.widget.ListPopupWindow$1
com.rollbar.android.BuildConfig
com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo:
    public void <init>(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
    public void set(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
    public boolean isInvalid()
    public static final float INVALID_RADIUS
com.google.android.material.tabs.TabLayout
androidx.appcompat.widget.ActionMenuPresenter$SavedState$1
androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo
androidx.viewpager2.R$drawable
io.realm.RealmCache$CreateRealmRunnable
com.guilhermedaros.museunfc.R$xml
androidx.constraintlayout.solver.ArrayRow:
    public androidx.constraintlayout.solver.ArrayRow createRowGreaterThan(androidx.constraintlayout.solver.SolverVariable,int,androidx.constraintlayout.solver.SolverVariable)
    public androidx.constraintlayout.solver.ArrayRow createRowEqualDimension(float,float,float,androidx.constraintlayout.solver.SolverVariable,int,androidx.constraintlayout.solver.SolverVariable,int,androidx.constraintlayout.solver.SolverVariable,int,androidx.constraintlayout.solver.SolverVariable,int)
    int sizeInBytes()
    private static final boolean DEBUG
    private static final float epsilon
io.realm.rx.RealmObservableFactory$4$2
androidx.annotation.Px
androidx.vectordrawable.R$color
com.google.android.material.transition.platform.FadeThroughProvider
io.realm.com_guilhermedaros_museunfc_Entities_UsuarioRealmProxy:
    public static java.lang.String getSimpleClassName()
    public static com.guilhermedaros.museunfc.Entities.Usuario createOrUpdateUsingJsonObject(io.realm.Realm,org.json.JSONObject,boolean)
    public static com.guilhermedaros.museunfc.Entities.Usuario createUsingJsonStream(io.realm.Realm,android.util.JsonReader)
    public static long insert(io.realm.Realm,com.guilhermedaros.museunfc.Entities.Usuario,java.util.Map)
    public static void insert(io.realm.Realm,java.util.Iterator,java.util.Map)
    public static long insertOrUpdate(io.realm.Realm,com.guilhermedaros.museunfc.Entities.Usuario,java.util.Map)
    public static void insertOrUpdate(io.realm.Realm,java.util.Iterator,java.util.Map)
    public static com.guilhermedaros.museunfc.Entities.Usuario createDetachedCopy(com.guilhermedaros.museunfc.Entities.Usuario,int,int,java.util.Map)
    public void realmSet$id(int)
    public void realmSet$login(java.lang.String)
    public void realmSet$senha(java.lang.String)
javax.annotation.Signed
androidx.appcompat.text.AllCapsTransformationMethod
androidx.core.provider.FontsContractCompat$4$8
androidx.core.app.ActivityCompat$SharedElementCallback21Impl$1
javax.annotation.meta.TypeQualifier
com.google.android.material.transition.platform.FitModeResult
androidx.core.app.NotificationManagerCompat$Task
androidx.core.os.ConfigurationCompat
com.google.android.material.button.MaterialButtonToggleGroup$2
androidx.cardview.widget.CardView$1
io.realm.RealmObjectSchema$DynamicColumnIndices
com.google.android.material.imageview.ShapeableImageView$OutlineProvider
androidx.recyclerview.R$styleable:
    private void <init>()
com.google.gson.DefaultDateTypeAdapter
com.google.android.material.textfield.TextInputEditText:
    public void <init>(android.content.Context)
    public boolean isTextInputLayoutFocusedRectEnabled()
androidx.annotation.StringRes
com.guilhermedaros.museunfc.R$id
com.google.android.material.transition.platform.FadeModeEvaluators$1
androidx.core.app.NotificationManagerCompat$ServiceConnectedEvent
androidx.core.view.inputmethod.InputConnectionCompat$2
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerWrapper
androidx.core.app.JobIntentService$WorkEnqueuer
androidx.appcompat.app.ToolbarActionBar:
    public void setCustomView(android.view.View)
    public void setCustomView(android.view.View,androidx.appcompat.app.ActionBar$LayoutParams)
    public void setCustomView(int)
    public void setIcon(int)
    public void setIcon(android.graphics.drawable.Drawable)
    public void setLogo(int)
    public void setLogo(android.graphics.drawable.Drawable)
    public void setStackedBackgroundDrawable(android.graphics.drawable.Drawable)
    public void setSplitBackgroundDrawable(android.graphics.drawable.Drawable)
    public void setHomeButtonEnabled(boolean)
    public void setElevation(float)
    public float getElevation()
    public boolean isTitleTruncated()
    public void setHomeAsUpIndicator(android.graphics.drawable.Drawable)
    public void setHomeAsUpIndicator(int)
    public void setHomeActionContentDescription(java.lang.CharSequence)
    public void setHomeActionContentDescription(int)
    public void setListNavigationCallbacks(android.widget.SpinnerAdapter,androidx.appcompat.app.ActionBar$OnNavigationListener)
    public void setSelectedNavigationItem(int)
    public int getSelectedNavigationIndex()
    public int getNavigationItemCount()
    public void setTitle(java.lang.CharSequence)
    public void setTitle(int)
    public boolean requestFocus()
    public void setSubtitle(java.lang.CharSequence)
    public void setSubtitle(int)
    public void setDisplayOptions(int)
    public void setDisplayOptions(int,int)
    public void setDisplayUseLogoEnabled(boolean)
    public void setDisplayShowHomeEnabled(boolean)
    public void setDisplayHomeAsUpEnabled(boolean)
    public void setDisplayShowTitleEnabled(boolean)
    public void setDisplayShowCustomEnabled(boolean)
    public void setBackgroundDrawable(android.graphics.drawable.Drawable)
    public android.view.View getCustomView()
    public java.lang.CharSequence getTitle()
    public java.lang.CharSequence getSubtitle()
    public int getNavigationMode()
    public void setNavigationMode(int)
    public androidx.appcompat.app.ActionBar$Tab newTab()
    public void addTab(androidx.appcompat.app.ActionBar$Tab)
    public void addTab(androidx.appcompat.app.ActionBar$Tab,boolean)
    public void addTab(androidx.appcompat.app.ActionBar$Tab,int)
    public void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean)
    public void removeTab(androidx.appcompat.app.ActionBar$Tab)
    public void removeTabAt(int)
    public void removeAllTabs()
    public void selectTab(androidx.appcompat.app.ActionBar$Tab)
    public androidx.appcompat.app.ActionBar$Tab getSelectedTab()
    public androidx.appcompat.app.ActionBar$Tab getTabAt(int)
    public int getTabCount()
    public int getHeight()
    public void show()
    public void hide()
    public boolean isShowing()
    public void addOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener)
    public void removeOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener)
com.google.android.material.tabs.TabLayout$SlidingTabIndicator$2
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult
androidx.fragment.app.Fragment$SavedState
com.google.android.material.internal.NavigationMenuView:
    public void <init>(android.content.Context)
androidx.transition.Styleable$Slide
androidx.core.app.NotificationCompat$InboxStyle
androidx.transition.Slide$3
com.google.android.material.transition.platform.MaterialArcMotion
androidx.recyclerview.widget.DiffUtil$DiffResult
com.android.volley.toolbox.ImageLoader$2
androidx.viewpager2.widget.ViewPager2$PageAwareAccessibilityProvider$1
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl
com.caverock.androidsvg.SVG$GraphicsElement
androidx.core.util.Preconditions:
    public static void checkArgument(boolean)
    public static void checkState(boolean,java.lang.String)
    public static void checkState(boolean)
    public static int checkArgumentNonnegative(int,java.lang.String)
    public static int checkArgumentInRange(int,int,int,java.lang.String)
    private void <init>()
com.caverock.androidsvg.SVG$NotDirectlyRendered
com.google.android.material.transition.TransitionUtils
androidx.core.widget.CompoundButtonCompat:
    private void <init>()
    public static android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton)
    private static final java.lang.String TAG
androidx.core.text.TextUtilsCompat:
    public static java.lang.String htmlEncode(java.lang.String)
    private void <init>()
    private static final java.lang.String ARAB_SCRIPT_SUBTAG
    private static final java.lang.String HEBR_SCRIPT_SUBTAG
androidx.appcompat.resources.R$style
com.caverock.androidsvg.SVGAndroidRenderer$MarkerPositionCalculator
androidx.core.app.NotificationCompat$Action$WearableExtender
com.rollbar.notifier.transformer.Transformer
com.google.android.material.internal.NavigationMenuPresenter$1
android.support.v4.os.ResultReceiver$MyRunnable
com.rollbar.jvmti.ThrowableCache
com.guilhermedaros.museunfc.Acitivities.SplashScreenActivity:
    private com.rollbar.android.Rollbar rollbar
com.google.android.material.drawable.DrawableUtils:
    private void <init>()
    public static android.util.AttributeSet parseDrawableXml(android.content.Context,int,java.lang.CharSequence)
    public static void setRippleDrawableRadius(android.graphics.drawable.RippleDrawable,int)
androidx.versionedparcelable.ParcelImpl:
    public void <init>(androidx.versionedparcelable.VersionedParcelable)
    public androidx.versionedparcelable.VersionedParcelable getVersionedParcel()
androidx.recyclerview.R$id
androidx.appcompat.app.AppCompatDialog:
    public void <init>(android.content.Context)
    protected void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener)
    public androidx.appcompat.app.ActionBar getSupportActionBar()
androidx.constraintlayout.solver.LinearSystem:
    private void addSingleError(androidx.constraintlayout.solver.ArrayRow,int)
    private androidx.constraintlayout.solver.SolverVariable createVariable(java.lang.String,androidx.constraintlayout.solver.SolverVariable$Type)
    private void displayRows()
    private void displaySolverVariables()
    private java.lang.String getDisplaySize(int)
    private java.lang.String getDisplayStrength(int)
    public static androidx.constraintlayout.solver.ArrayRow createRowEquals(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,boolean)
    public static androidx.constraintlayout.solver.ArrayRow createRowGreaterThan(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,boolean)
    public static androidx.constraintlayout.solver.ArrayRow createRowLowerThan(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,boolean)
    public static androidx.constraintlayout.solver.ArrayRow createRowCentering(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,float,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,boolean)
    public void fillMetrics(androidx.constraintlayout.solver.Metrics)
    androidx.constraintlayout.solver.LinearSystem$Row getGoal()
    androidx.constraintlayout.solver.ArrayRow getRow(int)
    float getValueFor(java.lang.String)
    androidx.constraintlayout.solver.SolverVariable getVariable(java.lang.String,androidx.constraintlayout.solver.SolverVariable$Type)
    void displayReadableRows()
    public void displayVariablesReadableRows()
    public int getMemoryUsed()
    public int getNumEquations()
    public int getNumVariables()
    void displaySystemInformations()
    public void addGreaterThan(androidx.constraintlayout.solver.SolverVariable,int)
    public void addEquality(androidx.constraintlayout.solver.SolverVariable,int,int)
    public static final boolean FULL_DEBUG
    private static final boolean DEBUG
com.google.android.material.snackbar.SnackbarManager$Callback:
    public abstract void show()
androidx.core.view.animation.PathInterpolatorApi14
com.rollbar.notifier.uuid.UuidGenerator
androidx.fragment.app.FragmentActivity:
    public void <init>(int)
    private int allocateRequestIndex(androidx.fragment.app.Fragment)
    public void supportFinishAfterTransition()
    public void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback)
    public void setExitSharedElementCallback(androidx.core.app.SharedElementCallback)
    public void supportPostponeEnterTransition()
    public void supportStartPostponedEnterTransition()
    public androidx.loader.app.LoaderManager getSupportLoaderManager()
    public final void validateRequestPermissionsRequestCode(int)
    public void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int)
    public void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)
    public void startIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
    void requestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int)
    boolean mRequestedPermissionsFromFragment
    private static final java.lang.String TAG
    static final java.lang.String FRAGMENTS_TAG
    static final java.lang.String NEXT_CANDIDATE_REQUEST_INDEX_TAG
    static final java.lang.String ALLOCATED_REQUEST_INDICIES_TAG
    static final java.lang.String REQUEST_FRAGMENT_WHO_TAG
    static final int MAX_NUM_PENDING_FRAGMENT_ACTIVITY_RESULTS
io.realm.RealmCache$CreateRealmRunnable$1
androidx.annotation.FractionRes
androidx.appcompat.widget.LinearLayoutCompat$DividerMode
androidx.fragment.app.ListFragment$1
androidx.core.app.NotificationManagerCompat$SideChannelManager
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState:
    public void clearMenuPresenters()
    android.os.Parcelable onSaveInstanceState()
    void onRestoreInstanceState(android.os.Parcelable)
    void applyFrozenState()
    boolean wasLastOpen
    android.os.Bundle frozenMenuState
androidx.core.app.DialogCompat
androidx.core.view.MenuItemCompat$1
com.caverock.androidsvg.SVG$SvgViewBoxContainer
com.google.android.material.transition.platform.FitModeEvaluators
com.google.android.material.shadow.ShadowViewDelegate:
    public abstract float getRadius()
io.realm.annotations.Required
com.caverock.androidsvg.SVG$TextRoot
com.google.android.material.internal.ForegroundLinearLayout:
    public void <init>(android.content.Context)
androidx.appcompat.widget.Toolbar:
    public void <init>(android.content.Context)
    private static boolean isCustomView(android.view.View)
    public void setTitleMargin(int,int,int,int)
    public boolean isTitleTruncated()
    public void setContentInsetsAbsolute(int,int)
    private static final java.lang.String TAG
com.google.android.material.shadow.ShadowRenderer:
    private static final int COLOR_ALPHA_START
    private static final int COLOR_ALPHA_MIDDLE
    private static final int COLOR_ALPHA_END
com.google.android.material.internal.TextScale
io.realm.FloatListOperator
androidx.core.content.pm.PackageInfoCompat
io.realm.BooleanListOperator
androidx.fragment.app.FragmentManagerViewModel:
    void restoreFromSnapshot(androidx.fragment.app.FragmentManagerNonConfig)
    androidx.fragment.app.FragmentManagerNonConfig getSnapshot()
androidx.lifecycle.LiveData$AlwaysActiveObserver
androidx.core.app.ActivityManagerCompat
com.google.android.material.transition.platform.SlideDistanceProvider
androidx.appcompat.app.ActionBarDrawerToggle$DelegateProvider
com.google.android.material.transition.MaterialSharedAxis
com.caverock.androidsvg.SVG$SolidColor
com.google.android.material.expandable.ExpandableWidget:
    public abstract boolean setExpanded(boolean)
androidx.appcompat.widget.AppCompatHintHelper:
    private void <init>()
com.google.android.material.datepicker.DateStrings:
    private void <init>()
    static java.lang.String getYearMonthDay(long)
    static java.lang.String getYearMonthDay(long,java.util.Locale)
    static java.lang.String getMonthDay(long)
    static java.lang.String getMonthDay(long,java.util.Locale)
    static java.lang.String getDateString(long)
    static java.lang.String getDateString(long,java.text.SimpleDateFormat)
    static androidx.core.util.Pair getDateRangeString(java.lang.Long,java.lang.Long)
    static androidx.core.util.Pair getDateRangeString(java.lang.Long,java.lang.Long,java.text.SimpleDateFormat)
androidx.transition.AnimatorUtils:
    private void <init>()
androidx.constraintlayout.widget.R$styleable:
    private void <init>()
androidx.recyclerview.widget.RecyclerView$LayoutManager:
    public static int getChildMeasureSpec(int,int,int,boolean)
    public void assertInLayoutOrScroll(java.lang.String)
    public void setAutoMeasureEnabled(boolean)
    public final void setItemPrefetchEnabled(boolean)
    public void postOnAnimation(java.lang.Runnable)
    public void endAnimation(android.view.View)
    public void removeAllViews()
    public int getItemViewType(android.view.View)
    public void detachView(android.view.View)
    public void attachView(android.view.View)
    public void removeDetachedView(android.view.View)
    public void detachAndScrapView(android.view.View,androidx.recyclerview.widget.RecyclerView$Recycler)
    public void detachAndScrapViewAt(int,androidx.recyclerview.widget.RecyclerView$Recycler)
    public int getPaddingStart()
    public int getPaddingEnd()
    public boolean isFocused()
    public boolean hasFocus()
    public void ignoreView(android.view.View)
    public void stopIgnoringView(android.view.View)
    public void measureChild(android.view.View,int,int)
    public boolean isMeasurementCacheEnabled()
    public void setMeasurementCacheEnabled(boolean)
    public void layoutDecorated(android.view.View,int,int,int,int)
com.google.android.material.shape.RelativeCornerSize:
    public float getRelativePercent()
androidx.recyclerview.R
com.rollbar.Rollbar$2
com.getkeepsafe.relinker.TextUtils:
    void <init>()
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation
androidx.customview.R$id
androidx.appcompat.widget.SwitchCompat$1
androidx.core.view.ViewCompat$FocusRelativeDirection
io.realm.rx.RealmObservableFactory$8$1
io.realm.rx.RealmObservableFactory$9
com.google.android.material.datepicker.CalendarConstraints$Builder
javax.annotation.Nullable
com.rollbar.Rollbar
com.caverock.androidsvg.SVG$View
javax.annotation.CheckForSigned
com.google.android.material.appbar.AppBarLayout:
    public void <init>(android.content.Context)
    public void addOnOffsetChangedListener(com.google.android.material.appbar.AppBarLayout$BaseOnOffsetChangedListener)
    public void addOnOffsetChangedListener(com.google.android.material.appbar.AppBarLayout$OnOffsetChangedListener)
    public void removeOnOffsetChangedListener(com.google.android.material.appbar.AppBarLayout$BaseOnOffsetChangedListener)
    public void removeOnOffsetChangedListener(com.google.android.material.appbar.AppBarLayout$OnOffsetChangedListener)
    public boolean setLiftable(boolean)
    public boolean setLifted(boolean)
    static final int PENDING_ACTION_NONE
    static final int PENDING_ACTION_EXPANDED
    static final int PENDING_ACTION_COLLAPSED
    static final int PENDING_ACTION_ANIMATE_ENABLED
    static final int PENDING_ACTION_FORCE
    private static final int INVALID_SCROLL_RANGE
androidx.appcompat.widget.PopupMenu$3
com.google.gson.internal.bind.TypeAdapters:
    private void <init>()
    public static com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapter)
androidx.versionedparcelable.VersionedParcel$1
androidx.core.app.ActivityOptionsCompat$ActivityOptionsCompatImpl
com.google.android.material.internal.NavigationMenuPresenter$HeaderViewHolder
androidx.transition.ChangeTransform$Transforms
org.slf4j.event.EventRecodingLogger:
    public boolean isTraceEnabled()
    public void trace(java.lang.String)
    public void trace(java.lang.String,java.lang.Object)
    public void trace(java.lang.String,java.lang.Object,java.lang.Object)
    public varargs void trace(java.lang.String,java.lang.Object[])
    public void trace(java.lang.String,java.lang.Throwable)
    public boolean isTraceEnabled(org.slf4j.Marker)
    public void trace(org.slf4j.Marker,java.lang.String)
    public void trace(org.slf4j.Marker,java.lang.String,java.lang.Object)
    public void trace(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)
    public varargs void trace(org.slf4j.Marker,java.lang.String,java.lang.Object[])
    public void trace(org.slf4j.Marker,java.lang.String,java.lang.Throwable)
    public boolean isDebugEnabled()
    public void debug(java.lang.String)
    public void debug(java.lang.String,java.lang.Object,java.lang.Object)
    public varargs void debug(java.lang.String,java.lang.Object[])
    public void debug(java.lang.String,java.lang.Throwable)
    public boolean isDebugEnabled(org.slf4j.Marker)
    public void debug(org.slf4j.Marker,java.lang.String)
    public void debug(org.slf4j.Marker,java.lang.String,java.lang.Object)
    public void debug(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)
    public varargs void debug(org.slf4j.Marker,java.lang.String,java.lang.Object[])
    public void debug(org.slf4j.Marker,java.lang.String,java.lang.Throwable)
    public boolean isInfoEnabled()
    public void info(java.lang.String)
    public void info(java.lang.String,java.lang.Object)
    public void info(java.lang.String,java.lang.Object,java.lang.Object)
    public varargs void info(java.lang.String,java.lang.Object[])
    public void info(java.lang.String,java.lang.Throwable)
    public boolean isInfoEnabled(org.slf4j.Marker)
    public void info(org.slf4j.Marker,java.lang.String)
    public void info(org.slf4j.Marker,java.lang.String,java.lang.Object)
    public void info(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)
    public varargs void info(org.slf4j.Marker,java.lang.String,java.lang.Object[])
    public void info(org.slf4j.Marker,java.lang.String,java.lang.Throwable)
    public boolean isWarnEnabled()
    public void warn(java.lang.String)
    public void warn(java.lang.String,java.lang.Object)
    public void warn(java.lang.String,java.lang.Object,java.lang.Object)
    public varargs void warn(java.lang.String,java.lang.Object[])
    public void warn(java.lang.String,java.lang.Throwable)
    public boolean isWarnEnabled(org.slf4j.Marker)
    public void warn(org.slf4j.Marker,java.lang.String)
    public void warn(org.slf4j.Marker,java.lang.String,java.lang.Object)
    public void warn(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)
    public varargs void warn(org.slf4j.Marker,java.lang.String,java.lang.Object[])
    public void warn(org.slf4j.Marker,java.lang.String,java.lang.Throwable)
    public boolean isErrorEnabled()
    public void error(java.lang.String)
    public void error(java.lang.String,java.lang.Object,java.lang.Object)
    public varargs void error(java.lang.String,java.lang.Object[])
    public boolean isErrorEnabled(org.slf4j.Marker)
    public void error(org.slf4j.Marker,java.lang.String)
    public void error(org.slf4j.Marker,java.lang.String,java.lang.Object)
    public void error(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)
    public varargs void error(org.slf4j.Marker,java.lang.String,java.lang.Object[])
    public void error(org.slf4j.Marker,java.lang.String,java.lang.Throwable)
androidx.versionedparcelable.NonParcelField
androidx.core.view.GravityCompat:
    public static void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int)
    public static void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int)
    private void <init>()
    public static final int RELATIVE_LAYOUT_DIRECTION
    public static final int START
    public static final int END
    public static final int RELATIVE_HORIZONTAL_GRAVITY_MASK
io.realm.OrderedCollectionChangeSet:
    public abstract io.realm.OrderedCollectionChangeSet$State getState()
    public abstract int[] getDeletions()
    public abstract int[] getInsertions()
    public abstract int[] getChanges()
    public abstract io.realm.OrderedCollectionChangeSet$Range[] getDeletionRanges()
    public abstract io.realm.OrderedCollectionChangeSet$Range[] getInsertionRanges()
    public abstract io.realm.OrderedCollectionChangeSet$Range[] getChangeRanges()
    public abstract java.lang.Throwable getError()
    public abstract boolean isCompleteResult()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState:
    final void clearMutated()
    public final int getEnterFadeDuration()
    public final int getExitFadeDuration()
    public final boolean isStateful()
androidx.recyclerview.widget.ScrollbarHelper:
    private void <init>()
com.guilhermedaros.museunfc.R$mipmap
androidx.annotation.InspectableProperty$ValueType
com.rollbar.notifier.wrapper.RollbarThrowableWrapper
com.google.android.material.badge.BadgeUtils
androidx.transition.ChangeImageTransform$2
androidx.transition.ChangeTransform
io.realm.ObjectChangeSet:
    public abstract boolean isDeleted()
    public abstract java.lang.String[] getChangedFields()
    public abstract boolean isFieldChanged(java.lang.String)
androidx.recyclerview.widget.ItemTouchHelper$ItemTouchHelperGestureListener
io.realm.rx.RealmObservableFactory$12$2
androidx.core.app.NotificationManagerCompat$NotifyTask
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior:
    public static void setTag(android.view.View,java.lang.Object)
    public static java.lang.Object getTag(android.view.View)
androidx.constraintlayout.widget.Guideline:
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public void <init>(android.content.Context,android.util.AttributeSet,int,int)
androidx.core.view.NestedScrollingParent:
    public abstract int getNestedScrollAxes()
androidx.fragment.app.ListFragment
androidx.coordinatorlayout.R$style:
    private void <init>()
com.google.gson.internal.bind.util.ISO8601Utils:
    public void <init>()
    public static java.lang.String format(java.util.Date)
    public static java.lang.String format(java.util.Date,boolean)
    public static java.lang.String format(java.util.Date,boolean,java.util.TimeZone)
    private static void padInt(java.lang.StringBuilder,int,int)
    private static final java.lang.String UTC_ID
com.google.android.material.chip.ChipGroup$LayoutParams:
    public void <init>(android.view.ViewGroup$MarginLayoutParams)
androidx.core.provider.FontsContractCompat$4$1
com.caverock.androidsvg.CSSParser$SimpleSelector
androidx.viewpager.R$dimen
com.google.android.material.slider.Slider
org.slf4j.Logger:
    public abstract boolean isTraceEnabled()
    public abstract void trace(java.lang.String)
    public abstract void trace(java.lang.String,java.lang.Object)
    public abstract void trace(java.lang.String,java.lang.Object,java.lang.Object)
    public varargs abstract void trace(java.lang.String,java.lang.Object[])
    public abstract void trace(java.lang.String,java.lang.Throwable)
    public abstract boolean isTraceEnabled(org.slf4j.Marker)
    public abstract void trace(org.slf4j.Marker,java.lang.String)
    public abstract void trace(org.slf4j.Marker,java.lang.String,java.lang.Object)
    public abstract void trace(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)
    public varargs abstract void trace(org.slf4j.Marker,java.lang.String,java.lang.Object[])
    public abstract void trace(org.slf4j.Marker,java.lang.String,java.lang.Throwable)
    public abstract boolean isDebugEnabled()
    public abstract void debug(java.lang.String)
    public abstract void debug(java.lang.String,java.lang.Object,java.lang.Object)
    public varargs abstract void debug(java.lang.String,java.lang.Object[])
    public abstract void debug(java.lang.String,java.lang.Throwable)
    public abstract boolean isDebugEnabled(org.slf4j.Marker)
    public abstract void debug(org.slf4j.Marker,java.lang.String)
    public abstract void debug(org.slf4j.Marker,java.lang.String,java.lang.Object)
    public abstract void debug(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)
    public varargs abstract void debug(org.slf4j.Marker,java.lang.String,java.lang.Object[])
    public abstract void debug(org.slf4j.Marker,java.lang.String,java.lang.Throwable)
    public abstract boolean isInfoEnabled()
    public abstract void info(java.lang.String)
    public abstract void info(java.lang.String,java.lang.Object)
    public abstract void info(java.lang.String,java.lang.Object,java.lang.Object)
    public varargs abstract void info(java.lang.String,java.lang.Object[])
    public abstract void info(java.lang.String,java.lang.Throwable)
    public abstract boolean isInfoEnabled(org.slf4j.Marker)
    public abstract void info(org.slf4j.Marker,java.lang.String)
    public abstract void info(org.slf4j.Marker,java.lang.String,java.lang.Object)
    public abstract void info(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)
    public varargs abstract void info(org.slf4j.Marker,java.lang.String,java.lang.Object[])
    public abstract void info(org.slf4j.Marker,java.lang.String,java.lang.Throwable)
    public abstract boolean isWarnEnabled()
    public abstract void warn(java.lang.String)
    public abstract void warn(java.lang.String,java.lang.Object)
    public varargs abstract void warn(java.lang.String,java.lang.Object[])
    public abstract void warn(java.lang.String,java.lang.Object,java.lang.Object)
    public abstract void warn(java.lang.String,java.lang.Throwable)
    public abstract boolean isWarnEnabled(org.slf4j.Marker)
    public abstract void warn(org.slf4j.Marker,java.lang.String)
    public abstract void warn(org.slf4j.Marker,java.lang.String,java.lang.Object)
    public abstract void warn(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)
    public varargs abstract void warn(org.slf4j.Marker,java.lang.String,java.lang.Object[])
    public abstract void warn(org.slf4j.Marker,java.lang.String,java.lang.Throwable)
    public abstract boolean isErrorEnabled()
    public abstract void error(java.lang.String)
    public abstract void error(java.lang.String,java.lang.Object,java.lang.Object)
    public varargs abstract void error(java.lang.String,java.lang.Object[])
    public abstract boolean isErrorEnabled(org.slf4j.Marker)
    public abstract void error(org.slf4j.Marker,java.lang.String)
    public abstract void error(org.slf4j.Marker,java.lang.String,java.lang.Object)
    public abstract void error(org.slf4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)
    public varargs abstract void error(org.slf4j.Marker,java.lang.String,java.lang.Object[])
    public abstract void error(org.slf4j.Marker,java.lang.String,java.lang.Throwable)
    public static final java.lang.String ROOT_LOGGER_NAME
androidx.appcompat.widget.MenuPopupWindow:
    private static final java.lang.String TAG
androidx.loader.content.ModernAsyncTask
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener
com.google.android.material.transition.Hold
com.google.android.material.bottomsheet.BottomSheetDialogFragment$1
com.caverock.androidsvg.SVG$TextContainer
androidx.viewpager2.widget.ViewPager2$DataSetChangeObserver
io.realm.internal.OsResults$AddListTypeDelegate
androidx.transition.R$integer
com.google.android.material.snackbar.BaseTransientBottomBar$17
com.google.gson.stream.JsonScope
androidx.fragment.R$integer
io.realm.internal.android.ISO8601Utils
io.realm.internal.OsResults$5
androidx.appcompat.view.menu.MenuPopup:
    public androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
    public int getId()
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$1
androidx.transition.ObjectAnimatorUtils:
    private void <init>()
com.google.android.material.elevation.ElevationOverlayProvider:
    public int compositeOverlayWithThemeSurfaceColorIfNeeded(float,android.view.View)
    public int compositeOverlayWithThemeSurfaceColorIfNeeded(float)
    public int compositeOverlayIfNeeded(int,float,android.view.View)
    public int compositeOverlay(int,float,android.view.View)
    public int calculateOverlayAlpha(float)
    public int getThemeElevationOverlayColor()
    public int getThemeSurfaceColor()
    public float getParentAbsoluteElevation(android.view.View)
    private static final float FORMULA_MULTIPLIER
    private static final float FORMULA_OFFSET
androidx.core.graphics.drawable.DrawableCompat:
    private void <init>()
    private static final java.lang.String TAG
com.android.volley.toolbox.ImageRequest
androidx.viewpager.R$id
com.google.android.material.snackbar.BaseTransientBottomBar$Duration
com.google.android.material.floatingactionbutton.FloatingActionButton:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public boolean shouldEnsureMinTouchTargetSize()
    public void show()
    public void removeOnShowAnimationListener(android.animation.Animator$AnimatorListener)
    public void hide()
    public void removeOnHideAnimationListener(android.animation.Animator$AnimatorListener)
    public boolean setExpanded(boolean)
    public void clearCustomSize()
    public void removeTransformationCallback(com.google.android.material.animation.TransformationCallback)
    private int borderWidth
    private static final java.lang.String LOG_TAG
    private static final java.lang.String EXPANDABLE_WIDGET_HELPER_KEY
    public static final int SIZE_MINI
    public static final int SIZE_NORMAL
    public static final int SIZE_AUTO
    public static final int NO_CUSTOM_SIZE
    private static final int AUTO_MINI_LARGEST_SCREEN_WIDTH
org.slf4j.spi.LoggerFactoryBinder
androidx.constraintlayout.solver.widgets.Guideline:
    public int getRelativeBehaviour()
    public androidx.constraintlayout.solver.widgets.Rectangle getHead()
    public androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor()
    public java.lang.String getType()
    public void setMinimumPosition(int)
    public void setPositionRelaxed(boolean)
    public void setGuidePercent(int)
    public float getRelativePercent()
    public int getRelativeBegin()
    public int getRelativeEnd()
    public void setDrawOrigin(int,int)
    void inferRelativePercentPosition()
    void inferRelativeBeginPosition()
    void inferRelativeEndPosition()
    public void cyclePosition()
    public static final int HORIZONTAL
    public static final int VERTICAL
    public static final int RELATIVE_PERCENT
    public static final int RELATIVE_BEGIN
    public static final int RELATIVE_END
    public static final int RELATIVE_UNKNWON
com.caverock.androidsvg.SVG$Length
androidx.recyclerview.widget.ItemTouchHelper$1
androidx.viewpager.R$attr
com.google.android.material.tabs.TabLayout$Tab
com.google.android.material.navigation.NavigationView$SavedState$1
com.google.android.material.bottomnavigation.BottomNavigationPresenter
androidx.lifecycle.Transformations$1
com.caverock.androidsvg.SVG$HasTransform
androidx.core.util.TimeUtils
com.google.android.material.R$dimen:
    private void <init>()
androidx.activity.R$layout
androidx.appcompat.widget.DecorContentParent:
    public abstract java.lang.CharSequence getTitle()
    public abstract void setUiOptions(int)
    public abstract boolean hasIcon()
    public abstract boolean hasLogo()
    public abstract void setIcon(int)
    public abstract void setIcon(android.graphics.drawable.Drawable)
    public abstract void setLogo(int)
    public abstract void saveToolbarHierarchyState(android.util.SparseArray)
    public abstract void restoreToolbarHierarchyState(android.util.SparseArray)
androidx.viewpager.R$style
androidx.core.widget.AutoScrollHelper:
    public boolean isEnabled()
    public androidx.core.widget.AutoScrollHelper setExclusive(boolean)
    public boolean isExclusive()
    public static final float RELATIVE_UNSPECIFIED
    public static final float NO_MAX
    public static final float NO_MIN
    public static final int EDGE_TYPE_INSIDE
    public static final int EDGE_TYPE_INSIDE_EXTEND
    public static final int EDGE_TYPE_OUTSIDE
    private static final int HORIZONTAL
    private static final int VERTICAL
    private static final int DEFAULT_EDGE_TYPE
    private static final int DEFAULT_MINIMUM_VELOCITY_DIPS
    private static final int DEFAULT_MAXIMUM_VELOCITY_DIPS
    private static final float DEFAULT_MAXIMUM_EDGE
    private static final float DEFAULT_RELATIVE_EDGE
    private static final float DEFAULT_RELATIVE_VELOCITY
    private static final int DEFAULT_RAMP_UP_DURATION
    private static final int DEFAULT_RAMP_DOWN_DURATION
com.caverock.androidsvg.SVG$TextPath
io.realm.io_realm_sync_permissions_ClassPermissionsRealmProxy$ClassNameHelper
androidx.transition.FragmentTransitionSupport$1:
    public android.graphics.Rect onGetEpicenter(androidx.transition.Transition)
io.realm.com_guilhermedaros_museunfc_Entities_ItemMuseuRealmProxy$ItemMuseuColumnInfo:
    void <init>(io.realm.internal.ColumnInfo,boolean)
    protected final io.realm.internal.ColumnInfo copy(boolean)
com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment:
    public void <init>(float,float,float)
    public float getHorizontalOffset()
    private static final int ARC_QUARTER
    private static final int ARC_HALF
    private static final int ANGLE_UP
    private static final int ANGLE_LEFT
io.realm.internal.RealmCore:
    public void <init>()
    public static boolean osIsWindows()
    private static java.lang.String loadLibraryWindows()
    private static varargs java.lang.String loadCorrectLibrary(java.lang.String[])
    public static void addNativeLibraryPath(java.lang.String)
    private static void resetLibraryPath()
    private static final java.lang.String JAVA_LIBRARY_PATH
org.slf4j.helpers.BasicMarker
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView:
    public void <init>(android.content.Context)
io.reactivex.android.R
androidx.loader.content.ModernAsyncTask$1
androidx.core.widget.TextViewCompat$AutoSizeTextType
androidx.annotation.NavigationRes
com.google.android.material.badge.BadgeDrawable$SavedState$1
com.google.android.material.transition.SlideDistanceProvider
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState:
    public void <init>(android.os.Parcel)
    public void <init>(android.os.Parcelable,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat:
    static androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object)
    public void <init>(java.lang.Object)
    public static androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int)
    private java.util.List extrasCharSequenceList(java.lang.String)
    public java.lang.Object getInfo()
    public void setSource(android.view.View)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int)
    public int getWindowId()
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat getChild(int)
    public void addChild(android.view.View)
    public boolean removeChild(android.view.View)
    public boolean removeChild(android.view.View,int)
    public boolean removeAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)
    public boolean performAction(int)
    public void setMovementGranularities(int)
    public int getMovementGranularities()
    public java.util.List findAccessibilityNodeInfosByText(java.lang.String)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat getParent()
    public boolean isVisibleToUser()
    public boolean isAccessibilityFocused()
    public void setSelected(boolean)
    public void setLongClickable(boolean)
    public void setPassword(boolean)
    public boolean isImportantForAccessibility()
    public void setImportantForAccessibility(boolean)
    public void setViewIdResourceName(java.lang.String)
    public int getLiveRegion()
    public void setLiveRegion(int)
    public int getDrawingOrder()
    public void setDrawingOrder(int)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat getCollectionInfo()
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat getCollectionItemInfo()
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat getRangeInfo()
    public void setRangeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat)
    public void setContentInvalid(boolean)
    public boolean isContentInvalid()
    public boolean isContextClickable()
    public void setContextClickable(boolean)
    public java.lang.CharSequence getHintText()
    public java.lang.CharSequence getError()
    public void setLabelFor(android.view.View)
    public void setLabelFor(android.view.View,int)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat getLabelFor()
    public void setLabeledBy(android.view.View)
    public void setLabeledBy(android.view.View,int)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat getLabeledBy()
    public boolean canOpenPopup()
    public void setCanOpenPopup(boolean)
    public java.util.List findAccessibilityNodeInfosByViewId(java.lang.String)
    public int getInputType()
    public void setInputType(int)
    public int getMaxTextLength()
    public void setTextSelection(int,int)
    public int getTextSelectionStart()
    public int getTextSelectionEnd()
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat getTraversalBefore()
    public void setTraversalBefore(android.view.View)
    public void setTraversalBefore(android.view.View,int)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat getTraversalAfter()
    public void setTraversalAfter(android.view.View)
    public void setTraversalAfter(android.view.View,int)
    public androidx.core.view.accessibility.AccessibilityWindowInfoCompat getWindow()
    public boolean isDismissable()
    public void setDismissable(boolean)
    public boolean isEditable()
    public void setEditable(boolean)
    public boolean isMultiLine()
    public void setMultiLine(boolean)
    public java.lang.CharSequence getTooltipText()
    public void setTooltipText(java.lang.CharSequence)
    public java.lang.CharSequence getPaneTitle()
    public boolean isScreenReaderFocusable()
    public boolean isHeading()
    public boolean isTextEntryKey()
    public void setTextEntryKey(boolean)
    public boolean refresh()
    public java.lang.CharSequence getRoleDescription()
    public void setRoleDescription(java.lang.CharSequence)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat getTouchDelegateInfo()
    public void setTouchDelegateInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat)
    private static final java.lang.String ROLE_DESCRIPTION_KEY
    private static final java.lang.String PANE_TITLE_KEY
    private static final java.lang.String TOOLTIP_TEXT_KEY
    private static final java.lang.String HINT_TEXT_KEY
    private static final java.lang.String BOOLEAN_PROPERTY_KEY
    private static final java.lang.String SPANS_ID_KEY
    private static final java.lang.String SPANS_START_KEY
    private static final java.lang.String SPANS_END_KEY
    private static final java.lang.String SPANS_FLAGS_KEY
    private static final java.lang.String SPANS_ACTION_ID_KEY
    private static final int BOOLEAN_PROPERTY_SCREEN_READER_FOCUSABLE
    private static final int BOOLEAN_PROPERTY_IS_HEADING
    private static final int BOOLEAN_PROPERTY_IS_SHOWING_HINT
    private static final int BOOLEAN_PROPERTY_IS_TEXT_ENTRY_KEY
    public static final int ACTION_FOCUS
    public static final int ACTION_CLEAR_FOCUS
    public static final int ACTION_SELECT
    public static final int ACTION_CLEAR_SELECTION
    public static final int ACTION_CLICK
    public static final int ACTION_LONG_CLICK
    public static final int ACTION_ACCESSIBILITY_FOCUS
    public static final int ACTION_CLEAR_ACCESSIBILITY_FOCUS
    public static final int ACTION_NEXT_AT_MOVEMENT_GRANULARITY
    public static final int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
    public static final int ACTION_NEXT_HTML_ELEMENT
    public static final int ACTION_PREVIOUS_HTML_ELEMENT
    public static final int ACTION_SCROLL_FORWARD
    public static final int ACTION_SCROLL_BACKWARD
    public static final int ACTION_COPY
    public static final int ACTION_PASTE
    public static final int ACTION_CUT
    public static final int ACTION_SET_SELECTION
    public static final int ACTION_EXPAND
    public static final int ACTION_COLLAPSE
    public static final int ACTION_DISMISS
    public static final int ACTION_SET_TEXT
    public static final java.lang.String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT
    public static final java.lang.String ACTION_ARGUMENT_HTML_ELEMENT_STRING
    public static final java.lang.String ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN
    public static final java.lang.String ACTION_ARGUMENT_SELECTION_START_INT
    public static final java.lang.String ACTION_ARGUMENT_SELECTION_END_INT
    public static final java.lang.String ACTION_ARGUMENT_SET_TEXT_CHARSEQUENCE
    public static final java.lang.String ACTION_ARGUMENT_ROW_INT
    public static final java.lang.String ACTION_ARGUMENT_COLUMN_INT
    public static final java.lang.String ACTION_ARGUMENT_PROGRESS_VALUE
    public static final java.lang.String ACTION_ARGUMENT_MOVE_WINDOW_X
    public static final java.lang.String ACTION_ARGUMENT_MOVE_WINDOW_Y
    public static final int FOCUS_INPUT
    public static final int FOCUS_ACCESSIBILITY
    public static final int MOVEMENT_GRANULARITY_CHARACTER
    public static final int MOVEMENT_GRANULARITY_WORD
    public static final int MOVEMENT_GRANULARITY_LINE
    public static final int MOVEMENT_GRANULARITY_PARAGRAPH
    public static final int MOVEMENT_GRANULARITY_PAGE
androidx.appcompat.view.menu.MenuView:
    public abstract int getWindowAnimations()
com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemSelectedListener
androidx.appcompat.widget.SuggestionsAdapter:
    public int getQueryRefinement()
    public void close()
    private static final boolean DBG
    private static final java.lang.String LOG_TAG
    private static final int QUERY_LIMIT
    static final int REFINE_NONE
    static final int REFINE_BY_ENTRY
    static final int REFINE_ALL
    static final int INVALID_INDEX
io.realm.BuildConfig
com.google.android.material.transition.FadeModeEvaluators
io.realm.internal.objectstore.OsObjectBuilder$8:
    public void handleItem(long,java.lang.Float)
    public synthetic bridge void handleItem(long,java.lang.Object)
com.caverock.androidsvg.SVG$Style$FillRule
com.google.android.material.tabs.TabLayoutMediator
androidx.viewpager2.adapter.FragmentStateAdapter$5:
    void <init>(androidx.viewpager2.adapter.FragmentStateAdapter,android.os.Handler,java.lang.Runnable)
    final synthetic androidx.viewpager2.adapter.FragmentStateAdapter this$0
com.google.gson.internal.$Gson$Preconditions:
    private void <init>()
androidx.transition.VisibilityPropagation
androidx.core.view.WindowInsetsCompat:
    public void <init>(androidx.core.view.WindowInsetsCompat)
    public boolean hasSystemWindowInsets()
    public boolean hasInsets()
    public boolean isRound()
    public androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
    public androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(android.graphics.Rect)
    public int getStableInsetTop()
    public int getStableInsetLeft()
    public int getStableInsetRight()
    public int getStableInsetBottom()
    public boolean hasStableInsets()
    public androidx.core.view.WindowInsetsCompat consumeStableInsets()
    public androidx.core.view.DisplayCutoutCompat getDisplayCutout()
    public androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
    public androidx.core.graphics.Insets getStableInsets()
    public androidx.core.graphics.Insets getTappableElementInsets()
    public androidx.core.graphics.Insets getSystemGestureInsets()
androidx.appcompat.widget.TooltipPopup:
    private static final java.lang.String TAG
androidx.appcompat.app.AppCompatActivity:
    public void <init>(int)
    public boolean supportRequestWindowFeature(int)
    public androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
    public void setSupportProgressBarVisibility(boolean)
    public void setSupportProgressBarIndeterminateVisibility(boolean)
    public void setSupportProgressBarIndeterminate(boolean)
    public void setSupportProgress(int)
    public androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate()
com.google.gson.internal.Streams$AppendableWriter
io.realm.internal.sync.SubscriptionAction:
    public static io.realm.internal.sync.SubscriptionAction create(java.lang.String,long)
    public static io.realm.internal.sync.SubscriptionAction update(java.lang.String,long)
com.android.volley.toolbox.HttpHeaderParser:
    public void <init>()
    public static java.lang.String parseCharset(java.util.Map)
    static final java.lang.String HEADER_CONTENT_TYPE
    private static final java.lang.String DEFAULT_CONTENT_CHARSET
    private static final java.lang.String RFC1123_FORMAT
com.caverock.androidsvg.SVGImageView
com.google.android.material.transition.TransitionUtils$2
androidx.recyclerview.widget.ViewInfoStore$InfoRecord:
    static final int FLAG_DISAPPEARED
    static final int FLAG_APPEAR
    static final int FLAG_PRE
    static final int FLAG_POST
    static final int FLAG_APPEAR_AND_DISAPPEAR
    static final int FLAG_PRE_AND_POST
    static final int FLAG_APPEAR_PRE_AND_POST
androidx.transition.ChangeClipBounds$1
com.google.android.material.transition.FadeProvider$1
com.google.android.material.radiobutton.MaterialRadioButton:
    public void <init>(android.content.Context)
    public boolean isUseMaterialThemeColors()
androidx.appcompat.widget.AppCompatRatingBar:
    public void <init>(android.content.Context)
com.google.android.material.transition.platform.TransitionUtils$CornerSizeBinaryOperator
androidx.appcompat.widget.AppCompatSpinner$DialogPopup:
    public int getHorizontalOriginalOffset()
io.realm.io_realm_sync_permissions_PermissionRealmProxy$PermissionColumnInfo:
    void <init>(io.realm.internal.OsSchemaInfo)
    void <init>(io.realm.internal.ColumnInfo,boolean)
    protected final io.realm.internal.ColumnInfo copy(boolean)
androidx.core.text.BidiFormatter:
    public static androidx.core.text.BidiFormatter getInstance(boolean)
    public static androidx.core.text.BidiFormatter getInstance(java.util.Locale)
    public boolean isRtlContext()
    public boolean isRtl(java.lang.String)
    public boolean isRtl(java.lang.CharSequence)
    public java.lang.String unicodeWrap(java.lang.String,androidx.core.text.TextDirectionHeuristicCompat)
    public java.lang.CharSequence unicodeWrap(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat)
    public java.lang.String unicodeWrap(java.lang.String,boolean)
    public java.lang.CharSequence unicodeWrap(java.lang.CharSequence,boolean)
    private static final char LRE
    private static final char RLE
    private static final char PDF
    private static final char LRM
    private static final char RLM
    private static final java.lang.String EMPTY_STRING
    private static final int FLAG_STEREO_RESET
    private static final int DEFAULT_FLAGS
    private static final int DIR_LTR
    private static final int DIR_UNKNOWN
    private static final int DIR_RTL
androidx.core.view.inputmethod.InputConnectionCompat$1
androidx.loader.content.AsyncTaskLoader
io.realm.io_realm_sync_permissions_PermissionRealmProxy$ClassNameHelper
androidx.viewpager2.widget.AnimateLayoutChangeDetector$1
androidx.recyclerview.widget.DiffUtil$Snake
androidx.constraintlayout.widget.ConstraintSet$Constraint:
    static synthetic void access$100(androidx.constraintlayout.widget.ConstraintSet$Constraint,int,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams)
    static final int UNSET
androidx.recyclerview.R$drawable
androidx.fragment.app.FragmentTabHost$DummyTabFactory
androidx.recyclerview.R$color
androidx.fragment.R$id
androidx.activity.R$string
androidx.recyclerview.widget.ItemTouchHelper
com.android.volley.toolbox.Authenticator
androidx.viewpager2.widget.ViewPager2$PageTransformer
com.google.android.material.tabs.TabLayout$1
com.rollbar.notifier.provider.Provider
io.realm.rx.RealmObservableFactory$4$1
com.caverock.androidsvg.SVGAndroidRenderer$PathConverter
androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo
com.google.gson.internal.LazilyParsedNumber:
    private java.lang.Object writeReplace()
com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop:
    void initializeBackgroundDrawable(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,android.content.res.ColorStateList,int)
    com.google.android.material.floatingactionbutton.BorderDrawable createBorderDrawable(int,android.content.res.ColorStateList)
    com.google.android.material.shape.MaterialShapeDrawable createShapeDrawable()
androidx.lifecycle.ComputableLiveData$1
androidx.drawerlayout.widget.DrawerLayout$1
io.realm.annotations.RealmField
androidx.core.app.NotificationCompat$Builder
com.google.android.material.transformation.FabTransformationScrimBehavior:
    public static final long EXPAND_DELAY
    public static final long EXPAND_DURATION
    public static final long COLLAPSE_DELAY
    public static final long COLLAPSE_DURATION
com.google.gson.stream.JsonReader:
    private static final long MIN_INCOMPLETE_INTEGER
    private static final int PEEKED_NONE
    private static final int PEEKED_BEGIN_OBJECT
    private static final int PEEKED_END_OBJECT
    private static final int PEEKED_BEGIN_ARRAY
    private static final int PEEKED_END_ARRAY
    private static final int PEEKED_TRUE
    private static final int PEEKED_FALSE
    private static final int PEEKED_NULL
    private static final int PEEKED_SINGLE_QUOTED
    private static final int PEEKED_DOUBLE_QUOTED
    private static final int PEEKED_UNQUOTED
    private static final int PEEKED_BUFFERED
    private static final int PEEKED_SINGLE_QUOTED_NAME
    private static final int PEEKED_DOUBLE_QUOTED_NAME
    private static final int PEEKED_UNQUOTED_NAME
    private static final int PEEKED_LONG
    private static final int PEEKED_NUMBER
    private static final int PEEKED_EOF
    private static final int NUMBER_CHAR_NONE
    private static final int NUMBER_CHAR_SIGN
    private static final int NUMBER_CHAR_DIGIT
    private static final int NUMBER_CHAR_DECIMAL
    private static final int NUMBER_CHAR_FRACTION_DIGIT
    private static final int NUMBER_CHAR_EXP_E
    private static final int NUMBER_CHAR_EXP_SIGN
    private static final int NUMBER_CHAR_EXP_DIGIT
com.google.android.material.snackbar.BaseTransientBottomBar$5
com.caverock.androidsvg.LibConfig
com.google.android.material.internal.ViewGroupOverlayApi18
io.realm.rx.RealmObservableFactory$15
androidx.core.graphics.TypefaceCompatApi21Impl:
    private static final java.lang.String TAG
    private static final java.lang.String FONT_FAMILY_CLASS
    private static final java.lang.String ADD_FONT_WEIGHT_STYLE_METHOD
    private static final java.lang.String CREATE_FROM_FAMILIES_WITH_DEFAULT_METHOD
androidx.appcompat.widget.AppCompatDrawableManager:
    synchronized android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context,androidx.appcompat.widget.VectorEnabledTintResources,int)
    boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)
    private static final java.lang.String TAG
    private static final boolean DEBUG
androidx.transition.TransitionUtils$MatrixEvaluator
com.caverock.androidsvg.SVG$Style$LineJoin
androidx.recyclerview.widget.DividerItemDecoration
com.google.android.material.tabs.TabLayout$TabGravity
androidx.loader.content.ModernAsyncTask$Status
androidx.core.view.ViewCompat:
    public static boolean canScrollHorizontally(android.view.View,int)
    public static boolean canScrollVertically(android.view.View,int)
    public static int getOverScrollMode(android.view.View)
    public static void setOverScrollMode(android.view.View,int)
    public static void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
    public static void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
    public static varargs void setAutofillHints(android.view.View,java.lang.String[])
    public static boolean isImportantForAutofill(android.view.View)
    public static boolean hasAccessibilityDelegate(android.view.View)
    public static void postInvalidateOnAnimation(android.view.View,int,int,int,int)
    public static boolean isImportantForAccessibility(android.view.View)
    public static int addAccessibilityAction(android.view.View,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand)
    private static int getAvailableActionIdFromResources(android.view.View)
    public static void enableAccessibleClickableSpanSupport(android.view.View)
    public static androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
    public static float getAlpha(android.view.View)
    public static void setLayerType(android.view.View,int,android.graphics.Paint)
    public static int getLayerType(android.view.View)
    public static int getLabelFor(android.view.View)
    public static void setLabelFor(android.view.View,int)
    public static void setLayerPaint(android.view.View,android.graphics.Paint)
    public static void setLayoutDirection(android.view.View,int)
    public static android.view.ViewParent getParentForAccessibility(android.view.View)
    public static android.view.View requireViewById(android.view.View,int)
    public static boolean isOpaque(android.view.View)
    public static int resolveSizeAndState(int,int,int)
    public static int getMeasuredWidthAndState(android.view.View)
    public static int getMeasuredHeightAndState(android.view.View)
    public static int getMeasuredState(android.view.View)
    public static int combineMeasuredStates(int,int)
    private static void bindTempDetach()
    public static void dispatchStartTemporaryDetach(android.view.View)
    public static void dispatchFinishTemporaryDetach(android.view.View)
    public static float getTranslationX(android.view.View)
    public static float getTranslationY(android.view.View)
    public static android.graphics.Matrix getMatrix(android.view.View)
    public static void setTranslationX(android.view.View,float)
    public static void setTranslationY(android.view.View,float)
    public static void setAlpha(android.view.View,float)
    public static void setX(android.view.View,float)
    public static void setY(android.view.View,float)
    public static void setRotation(android.view.View,float)
    public static void setRotationX(android.view.View,float)
    public static void setRotationY(android.view.View,float)
    public static void setScaleX(android.view.View,float)
    public static void setScaleY(android.view.View,float)
    public static float getPivotX(android.view.View)
    public static void setPivotX(android.view.View,float)
    public static float getPivotY(android.view.View)
    public static void setPivotY(android.view.View,float)
    public static float getRotation(android.view.View)
    public static float getRotationX(android.view.View)
    public static float getRotationY(android.view.View)
    public static float getScaleX(android.view.View)
    public static float getScaleY(android.view.View)
    public static float getX(android.view.View)
    public static float getY(android.view.View)
    public static void setTranslationZ(android.view.View,float)
    public static float getTranslationZ(android.view.View)
    public static void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean)
    public static void setFitsSystemWindows(android.view.View,boolean)
    public static void jumpDrawablesToCurrentState(android.view.View)
    public static void setSystemGestureExclusionRects(android.view.View,java.util.List)
    public static java.util.List getSystemGestureExclusionRects(android.view.View)
    public static void setSaveFromParentEnabled(android.view.View,boolean)
    public static void setActivated(android.view.View,boolean)
    public static void setNestedScrollingEnabled(android.view.View,boolean)
    public static boolean startNestedScroll(android.view.View,int)
    public static boolean hasNestedScrollingParent(android.view.View)
    public static boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])
    public static boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
    public static boolean startNestedScroll(android.view.View,int,int)
    public static void stopNestedScroll(android.view.View,int)
    public static boolean hasNestedScrollingParent(android.view.View,int)
    public static void dispatchNestedScroll(android.view.View,int,int,int,int,int[],int,int[])
    public static boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[],int)
    public static boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[],int)
    public static boolean dispatchNestedFling(android.view.View,float,float,boolean)
    public static boolean dispatchNestedPreFling(android.view.View,float,float)
    public static boolean isInLayout(android.view.View)
    public static boolean isLayoutDirectionResolved(android.view.View)
    public static void setZ(android.view.View,float)
    public static void setScrollIndicators(android.view.View,int)
    public static int getScrollIndicators(android.view.View)
    public static void setPointerIcon(android.view.View,androidx.core.view.PointerIconCompat)
    public static void setTooltipText(android.view.View,java.lang.CharSequence)
    public static boolean startDragAndDrop(android.view.View,android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)
    public static void cancelDragAndDrop(android.view.View)
    public static void updateDragShadow(android.view.View,android.view.View$DragShadowBuilder)
    public static int getNextClusterForwardId(android.view.View)
    public static void setNextClusterForwardId(android.view.View,int)
    public static boolean isKeyboardNavigationCluster(android.view.View)
    public static void setKeyboardNavigationCluster(android.view.View,boolean)
    public static boolean isFocusedByDefault(android.view.View)
    public static void setFocusedByDefault(android.view.View,boolean)
    public static android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int)
    public static void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int)
    public static boolean restoreDefaultFocus(android.view.View)
    public static boolean hasExplicitFocusable(android.view.View)
    public static int generateViewId()
    public static void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
    public static void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
    protected void <init>()
    public static void setScreenReaderFocusable(android.view.View,boolean)
    public static void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)
    private static final java.lang.String TAG
    public static final int OVER_SCROLL_ALWAYS
    public static final int OVER_SCROLL_IF_CONTENT_SCROLLS
    public static final int OVER_SCROLL_NEVER
    public static final int IMPORTANT_FOR_ACCESSIBILITY_AUTO
    public static final int IMPORTANT_FOR_ACCESSIBILITY_YES
    public static final int IMPORTANT_FOR_ACCESSIBILITY_NO
    public static final int IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS
    public static final int ACCESSIBILITY_LIVE_REGION_NONE
    public static final int ACCESSIBILITY_LIVE_REGION_POLITE
    public static final int ACCESSIBILITY_LIVE_REGION_ASSERTIVE
    public static final int LAYER_TYPE_NONE
    public static final int LAYER_TYPE_SOFTWARE
    public static final int LAYER_TYPE_HARDWARE
    public static final int LAYOUT_DIRECTION_LTR
    public static final int LAYOUT_DIRECTION_RTL
    public static final int LAYOUT_DIRECTION_INHERIT
    public static final int LAYOUT_DIRECTION_LOCALE
    public static final int MEASURED_SIZE_MASK
    public static final int MEASURED_STATE_MASK
    public static final int MEASURED_HEIGHT_STATE_SHIFT
    public static final int MEASURED_STATE_TOO_SMALL
    public static final int SCROLL_AXIS_NONE
    public static final int SCROLL_AXIS_HORIZONTAL
    public static final int SCROLL_AXIS_VERTICAL
    public static final int TYPE_TOUCH
    public static final int TYPE_NON_TOUCH
    public static final int SCROLL_INDICATOR_TOP
    public static final int SCROLL_INDICATOR_BOTTOM
    public static final int SCROLL_INDICATOR_LEFT
    public static final int SCROLL_INDICATOR_RIGHT
    public static final int SCROLL_INDICATOR_START
    public static final int SCROLL_INDICATOR_END
    private static java.lang.reflect.Method sDispatchStartTemporaryDetach
    private static java.lang.reflect.Method sDispatchFinishTemporaryDetach
    private static boolean sTempDetachBound
    private static java.lang.reflect.Method sChildrenDrawingOrderMethod
com.caverock.androidsvg.PreserveAspectRatio$Alignment
androidx.fragment.app.FragmentManagerImpl$FragmentTag:
    private void <init>()
    public static final int Fragment_id
    public static final int Fragment_name
    public static final int Fragment_tag
androidx.vectordrawable.animated.R$string
com.getkeepsafe.relinker.elf.Elf
com.google.gson.JsonElement:
    public abstract com.google.gson.JsonElement deepCopy()
    public com.google.gson.JsonNull getAsJsonNull()
    public boolean getAsBoolean()
    java.lang.Boolean getAsBooleanWrapper()
    public java.lang.Number getAsNumber()
    public java.lang.String getAsString()
    public double getAsDouble()
    public float getAsFloat()
    public long getAsLong()
    public int getAsInt()
    public byte getAsByte()
    public char getAsCharacter()
    public java.math.BigDecimal getAsBigDecimal()
    public java.math.BigInteger getAsBigInteger()
    public short getAsShort()
androidx.core.os.CancellationSignal
com.google.gson.GsonBuilder
androidx.core.app.NotificationCompat$BadgeIconType
androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem
io.realm.io_realm_sync_permissions_RoleRealmProxy$RoleColumnInfo:
    void <init>(io.realm.internal.OsSchemaInfo)
    void <init>(io.realm.internal.ColumnInfo,boolean)
    protected final io.realm.internal.ColumnInfo copy(boolean)
androidx.recyclerview.widget.RecyclerView$SmoothScroller:
    public void instantScrollToPosition(int)
com.caverock.androidsvg.SVG$Group
androidx.appcompat.widget.Toolbar$LayoutParams:
    public void <init>(int,int,int)
    public void <init>(int)
    static final int CUSTOM
    static final int SYSTEM
    static final int EXPANDED
androidx.transition.Fade:
    public void <init>()
    public void <init>(android.content.Context,android.util.AttributeSet)
    private static final java.lang.String PROPNAME_TRANSITION_ALPHA
    private static final java.lang.String LOG_TAG
    public static final int IN
    public static final int OUT
androidx.viewpager2.R$layout
androidx.recyclerview.widget.AsyncListDiffer
android.support.v4.os.IResultReceiver$Stub
io.realm.rx.RealmObservableFactory$16$2
io.realm.io_realm_sync_SubscriptionRealmProxyInterface
android.support.v4.app.INotificationSideChannel$Stub$Proxy
androidx.lifecycle.MediatorLiveData
io.realm.RealmResults$1
com.google.android.material.dialog.InsetDialogOnTouchListener
androidx.loader.R$string
androidx.appcompat.app.WindowDecorActionBar:
    public void <init>(android.view.View)
    private void ensureTabsExist()
    private void cleanupTabs()
    private void configureTab(androidx.appcompat.app.ActionBar$Tab,int)
    public float getElevation()
    public void addOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener)
    public void removeOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener)
    public void setCustomView(int)
    public void setDisplayUseLogoEnabled(boolean)
    public void setDisplayShowHomeEnabled(boolean)
    public void setDisplayShowTitleEnabled(boolean)
    public void setDisplayShowCustomEnabled(boolean)
    public void setTitle(int)
    public void setSubtitle(int)
    public void setSelectedNavigationItem(int)
    public void removeAllTabs()
    public void setTitle(java.lang.CharSequence)
    public boolean requestFocus()
    public void setSubtitle(java.lang.CharSequence)
    public void setDisplayOptions(int)
    public void setBackgroundDrawable(android.graphics.drawable.Drawable)
    public void setStackedBackgroundDrawable(android.graphics.drawable.Drawable)
    public void setSplitBackgroundDrawable(android.graphics.drawable.Drawable)
    public android.view.View getCustomView()
    public java.lang.CharSequence getTitle()
    public java.lang.CharSequence getSubtitle()
    public void addTab(androidx.appcompat.app.ActionBar$Tab)
    public void addTab(androidx.appcompat.app.ActionBar$Tab,int)
    public void addTab(androidx.appcompat.app.ActionBar$Tab,boolean)
    public void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean)
    public androidx.appcompat.app.ActionBar$Tab newTab()
    public void removeTab(androidx.appcompat.app.ActionBar$Tab)
    public void removeTabAt(int)
    public void selectTab(androidx.appcompat.app.ActionBar$Tab)
    public androidx.appcompat.app.ActionBar$Tab getSelectedTab()
    public int getHeight()
    public void show()
    public void hide()
    public boolean isHideOnContentScrollEnabled()
    public int getHideOffset()
    public void setHideOffset(int)
    public boolean isShowing()
    public boolean isTitleTruncated()
    public void setHomeAsUpIndicator(android.graphics.drawable.Drawable)
    public void setHomeAsUpIndicator(int)
    public void setHomeActionContentDescription(java.lang.CharSequence)
    public void setHomeActionContentDescription(int)
    public void setCustomView(android.view.View)
    public void setCustomView(android.view.View,androidx.appcompat.app.ActionBar$LayoutParams)
    public void setListNavigationCallbacks(android.widget.SpinnerAdapter,androidx.appcompat.app.ActionBar$OnNavigationListener)
    public int getSelectedNavigationIndex()
    public int getNavigationItemCount()
    public int getTabCount()
    public void setNavigationMode(int)
    public androidx.appcompat.app.ActionBar$Tab getTabAt(int)
    public void setIcon(int)
    public void setIcon(android.graphics.drawable.Drawable)
    public boolean hasIcon()
    public void setLogo(int)
    public void setLogo(android.graphics.drawable.Drawable)
    public boolean hasLogo()
    private androidx.appcompat.app.WindowDecorActionBar$TabImpl mSelectedTab
    private static final java.lang.String TAG
    private static final int INVALID_POSITION
    private static final long FADE_OUT_DURATION_MS
    private static final long FADE_IN_DURATION_MS
androidx.core.os.LocaleListCompat
com.google.android.material.ripple.RippleUtils:
    public static android.content.res.ColorStateList convertToRippleDrawableColor(android.content.res.ColorStateList)
    private static int getColorForState(android.content.res.ColorStateList,int[])
    private static int doubleAlpha(int)
    static final java.lang.String TRANSPARENT_DEFAULT_COLOR_WARNING
androidx.core.view.ViewCompat$UnhandledKeyEventManager:
    static void registerListeningView(android.view.View)
    static void unregisterListeningView(android.view.View)
androidx.transition.R$style
androidx.core.provider.FontsContractCompat$4$9
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams:
    public void <init>(int,int,float)
    public void <init>(android.view.ViewGroup$MarginLayoutParams)
    public void <init>(androidx.appcompat.widget.LinearLayoutCompat$LayoutParams)
androidx.annotation.AnyRes
com.google.android.material.datepicker.MaterialStyledDatePickerDialog
androidx.appcompat.widget.AppCompatToggleButton:
    public void <init>(android.content.Context)
com.guilhermedaros.museunfc.Fragments.FragmentMain:
    private void FalarItem(com.guilhermedaros.museunfc.Entities.ItemMuseu)
    public void onButtonPressed(android.net.Uri)
    private static final java.lang.String ARG_PARAM1
    private static final java.lang.String ARG_PARAM2
androidx.viewpager2.widget.ViewPager2$BasicAccessibilityProvider
android.support.v4.app.INotificationSideChannel$Stub
androidx.core.app.JobIntentService$JobServiceEngineImpl
androidx.vectordrawable.R$attr
androidx.core.app.BundleCompat
androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask
com.google.android.material.transition.platform.MaterialFadeThrough
androidx.loader.content.CursorLoader
androidx.core.app.NavUtils:
    public static void navigateUpFromSameTask(android.app.Activity)
    public static android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class)
    private void <init>()
    private static final java.lang.String TAG
    public static final java.lang.String PARENT_ACTIVITY
androidx.core.graphics.ColorUtils:
    private void <init>()
    public static android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)
    public static double calculateLuminance(int)
    public static double calculateContrast(int,int)
    public static int calculateMinimumAlpha(int,int,float)
    public static void RGBToHSL(int,int,int,float[])
    public static void colorToHSL(int,float[])
    public static int HSLToColor(float[])
    public static void colorToLAB(int,double[])
    public static void RGBToLAB(int,int,int,double[])
    public static void colorToXYZ(int,double[])
    public static void RGBToXYZ(int,int,int,double[])
    public static void XYZToLAB(double,double,double,double[])
    public static void LABToXYZ(double,double,double,double[])
    public static int XYZToColor(double,double,double)
    public static int LABToColor(double,double,double)
    public static double distanceEuclidean(double[],double[])
    private static float constrain(float,float,float)
    private static int constrain(int,int,int)
    private static double pivotXyzComponent(double)
    public static int blendARGB(int,int,float)
    public static void blendHSL(float[],float[],float,float[])
    public static void blendLAB(double[],double[],double,double[])
    static float circularInterpolate(float,float,float)
    private static double[] getTempDouble3Array()
    private static final double XYZ_WHITE_REFERENCE_X
    private static final double XYZ_WHITE_REFERENCE_Y
    private static final double XYZ_WHITE_REFERENCE_Z
    private static final double XYZ_EPSILON
    private static final double XYZ_KAPPA
    private static final int MIN_ALPHA_SEARCH_MAX_ITERATIONS
    private static final int MIN_ALPHA_SEARCH_PRECISION
androidx.recyclerview.widget.RecyclerView$SimpleOnItemTouchListener
io.realm.rx.RealmObservableFactory$12$1
androidx.constraintlayout.widget.Placeholder:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public void <init>(android.content.Context,android.util.AttributeSet,int,int)
    private void init(android.util.AttributeSet)
androidx.coordinatorlayout.widget.DirectedAcyclicGraph:
    int size()
androidx.core.content.res.ResourcesCompat:
    public static android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme)
    public static int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)
    public static android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)
    public static float getFloat(android.content.res.Resources,int)
    private void <init>()
    private static final java.lang.String TAG
androidx.viewpager2.R$string
com.guilhermedaros.museunfc.Entities.Usuario:
    public void <init>(int,java.lang.String,java.lang.String)
    public int getId()
    public void setId(int)
    public java.lang.String getLogin()
    public void setLogin(java.lang.String)
    public java.lang.String getSenha()
    public void setSenha(java.lang.String)
    public void realmSet$id(int)
    public void realmSet$login(java.lang.String)
    public void realmSet$senha(java.lang.String)
com.google.gson.internal.GsonBuildConfig
com.google.android.material.internal.ViewUtils$2
com.caverock.androidsvg.SVG$Style$TextDecoration
androidx.arch.core.executor.TaskExecutor:
    public void executeOnMainThread(java.lang.Runnable)
androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper
androidx.core.graphics.PathSegment
androidx.vectordrawable.animated.R$layout
io.realm.com_guilhermedaros_museunfc_Entities_UsuarioRealmProxyInterface:
    public abstract void realmSet$id(int)
    public abstract void realmSet$login(java.lang.String)
    public abstract void realmSet$senha(java.lang.String)
com.google.android.material.snackbar.BaseTransientBottomBar$AnimationMode
androidx.core.graphics.drawable.RoundedBitmapDrawable
org.slf4j.helpers.NOPMDCAdapter
com.google.android.material.transition.FadeModeEvaluators$1
androidx.constraintlayout.widget.Constraints:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    private void init(android.util.AttributeSet)
    public static final java.lang.String TAG
com.google.android.material.tabs.TabLayout$TabIndicatorGravity
com.caverock.androidsvg.SVG$Style
androidx.coordinatorlayout.widget.CoordinatorLayout$DispatchChangeEvent
androidx.recyclerview.widget.PagerSnapHelper
androidx.core.database.sqlite.SQLiteCursorCompat
androidx.fragment.app.ListFragment$2
androidx.appcompat.app.AppCompatDialogFragment
androidx.core.net.TrafficStatsCompat
com.google.android.material.slider.BaseSlider$TooltipDrawableFactory
com.google.android.material.internal.ContextUtils
com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop$AlwaysStatefulMaterialShapeDrawable
com.google.android.material.tabs.TabLayout$TabView
androidx.activity.ImmLeaksCleaner:
    private static final int NOT_INITIALIAZED
    private static final int INIT_SUCCESS
    private static final int INIT_FAILED
androidx.appcompat.widget.ScrollingTabContainerView$TabView:
    private static final java.lang.String ACCESSIBILITY_CLASS_NAME
androidx.core.app.NotificationCompat$Action$Extender
com.caverock.androidsvg.SVG$Style$FontStyle
com.google.android.material.bottomsheet.BottomSheetDialogFragment$BottomSheetDismissCallback
com.caverock.androidsvg.SVG$Circle
com.google.android.material.circularreveal.CircularRevealHelper$Strategy
com.google.android.material.appbar.CollapsingToolbarLayout$OffsetUpdateListener
com.android.volley.ParseError:
    public void <init>()
    public void <init>(com.android.volley.NetworkResponse)
io.reactivex.android.schedulers.HandlerScheduler
io.realm.internal.modules.FilterableMediator:
    public void insert(io.realm.Realm,io.realm.RealmModel,java.util.Map)
    public void insert(io.realm.Realm,java.util.Collection)
    public void insertOrUpdate(io.realm.Realm,io.realm.RealmModel,java.util.Map)
    public void insertOrUpdate(io.realm.Realm,java.util.Collection)
    public io.realm.RealmModel createOrUpdateUsingJsonObject(java.lang.Class,io.realm.Realm,org.json.JSONObject,boolean)
    public io.realm.RealmModel createUsingJsonStream(java.lang.Class,io.realm.Realm,android.util.JsonReader)
    public io.realm.RealmModel createDetachedCopy(io.realm.RealmModel,int,java.util.Map)
com.google.android.material.bottomnavigation.LabelVisibilityMode
io.realm.RealmQuery:
    static io.realm.RealmQuery createDynamicQuery(io.realm.DynamicRealm,java.lang.String)
    static io.realm.RealmQuery createQueryFromResult(io.realm.RealmResults)
    static io.realm.RealmQuery createQueryFromList(io.realm.RealmList)
    private void <init>(io.realm.RealmResults,java.lang.Class)
    private void <init>(io.realm.BaseRealm,io.realm.internal.OsList,java.lang.Class)
    private void <init>(io.realm.BaseRealm,java.lang.String)
    private void <init>(io.realm.RealmResults,java.lang.String)
    private void <init>(io.realm.BaseRealm,io.realm.internal.OsList,java.lang.String)
    private io.realm.RealmQuery equalToWithoutThreadValidation(java.lang.String,java.lang.Byte)
    private io.realm.RealmQuery equalToWithoutThreadValidation(java.lang.String,java.lang.Short)
    private io.realm.RealmQuery equalToWithoutThreadValidation(java.lang.String,java.lang.Long)
    private io.realm.RealmQuery equalToWithoutThreadValidation(java.lang.String,java.lang.Double)
    private io.realm.RealmQuery equalToWithoutThreadValidation(java.lang.String,java.lang.Float)
    private io.realm.RealmQuery equalToWithoutThreadValidation(java.lang.String,java.lang.Boolean)
    private io.realm.RealmQuery equalToWithoutThreadValidation(java.lang.String,java.util.Date)
    private io.realm.RealmQuery beginGroupWithoutThreadValidation()
    private io.realm.RealmQuery endGroupWithoutThreadValidation()
    private io.realm.RealmQuery orWithoutThreadValidation()
    private io.realm.internal.OsResults lazyFindAll()
    private io.realm.SchemaConnector getSchemaConnector()
    private static native java.lang.String nativeSerializeQuery(long,long)
    private static native long nativeSubscribe(long,java.lang.String,long,long,long,boolean)
    public boolean isValid()
    public io.realm.RealmQuery isNull(java.lang.String)
    public io.realm.RealmQuery isNotNull(java.lang.String)
    public io.realm.RealmQuery equalTo(java.lang.String,java.lang.Byte)
    public io.realm.RealmQuery equalTo(java.lang.String,byte[])
    public io.realm.RealmQuery equalTo(java.lang.String,java.lang.Short)
    public io.realm.RealmQuery equalTo(java.lang.String,java.lang.Long)
    public io.realm.RealmQuery equalTo(java.lang.String,java.lang.Double)
    public io.realm.RealmQuery equalTo(java.lang.String,java.lang.Float)
    public io.realm.RealmQuery equalTo(java.lang.String,java.lang.Boolean)
    public io.realm.RealmQuery equalTo(java.lang.String,java.util.Date)
    public io.realm.RealmQuery in(java.lang.String,java.lang.String[])
    public io.realm.RealmQuery in(java.lang.String,java.lang.String[],io.realm.Case)
    public io.realm.RealmQuery in(java.lang.String,java.lang.Byte[])
    public io.realm.RealmQuery in(java.lang.String,java.lang.Short[])
    public io.realm.RealmQuery in(java.lang.String,java.lang.Integer[])
    public io.realm.RealmQuery in(java.lang.String,java.lang.Long[])
    public io.realm.RealmQuery in(java.lang.String,java.lang.Double[])
    public io.realm.RealmQuery in(java.lang.String,java.lang.Float[])
    public io.realm.RealmQuery in(java.lang.String,java.lang.Boolean[])
    public io.realm.RealmQuery in(java.lang.String,java.util.Date[])
    public io.realm.RealmQuery notEqualTo(java.lang.String,java.lang.String)
    public io.realm.RealmQuery notEqualTo(java.lang.String,java.lang.String,io.realm.Case)
    public io.realm.RealmQuery notEqualTo(java.lang.String,java.lang.Byte)
    public io.realm.RealmQuery notEqualTo(java.lang.String,byte[])
    public io.realm.RealmQuery notEqualTo(java.lang.String,java.lang.Short)
    public io.realm.RealmQuery notEqualTo(java.lang.String,java.lang.Integer)
    public io.realm.RealmQuery notEqualTo(java.lang.String,java.lang.Long)
    public io.realm.RealmQuery notEqualTo(java.lang.String,java.lang.Double)
    public io.realm.RealmQuery notEqualTo(java.lang.String,java.lang.Float)
    public io.realm.RealmQuery notEqualTo(java.lang.String,java.lang.Boolean)
    public io.realm.RealmQuery notEqualTo(java.lang.String,java.util.Date)
    public io.realm.RealmQuery greaterThan(java.lang.String,int)
    public io.realm.RealmQuery greaterThan(java.lang.String,long)
    public io.realm.RealmQuery greaterThan(java.lang.String,double)
    public io.realm.RealmQuery greaterThan(java.lang.String,float)
    public io.realm.RealmQuery greaterThan(java.lang.String,java.util.Date)
    public io.realm.RealmQuery greaterThanOrEqualTo(java.lang.String,int)
    public io.realm.RealmQuery greaterThanOrEqualTo(java.lang.String,long)
    public io.realm.RealmQuery greaterThanOrEqualTo(java.lang.String,double)
    public io.realm.RealmQuery greaterThanOrEqualTo(java.lang.String,float)
    public io.realm.RealmQuery greaterThanOrEqualTo(java.lang.String,java.util.Date)
    public io.realm.RealmQuery lessThan(java.lang.String,int)
    public io.realm.RealmQuery lessThan(java.lang.String,long)
    public io.realm.RealmQuery lessThan(java.lang.String,double)
    public io.realm.RealmQuery lessThan(java.lang.String,float)
    public io.realm.RealmQuery lessThan(java.lang.String,java.util.Date)
    public io.realm.RealmQuery lessThanOrEqualTo(java.lang.String,int)
    public io.realm.RealmQuery lessThanOrEqualTo(java.lang.String,long)
    public io.realm.RealmQuery lessThanOrEqualTo(java.lang.String,double)
    public io.realm.RealmQuery lessThanOrEqualTo(java.lang.String,float)
    public io.realm.RealmQuery lessThanOrEqualTo(java.lang.String,java.util.Date)
    public io.realm.RealmQuery between(java.lang.String,int,int)
    public io.realm.RealmQuery between(java.lang.String,long,long)
    public io.realm.RealmQuery between(java.lang.String,double,double)
    public io.realm.RealmQuery between(java.lang.String,float,float)
    public io.realm.RealmQuery between(java.lang.String,java.util.Date,java.util.Date)
    public io.realm.RealmQuery contains(java.lang.String,java.lang.String)
    public io.realm.RealmQuery contains(java.lang.String,java.lang.String,io.realm.Case)
    public io.realm.RealmQuery beginsWith(java.lang.String,java.lang.String)
    public io.realm.RealmQuery beginsWith(java.lang.String,java.lang.String,io.realm.Case)
    public io.realm.RealmQuery endsWith(java.lang.String,java.lang.String)
    public io.realm.RealmQuery endsWith(java.lang.String,java.lang.String,io.realm.Case)
    public io.realm.RealmQuery like(java.lang.String,java.lang.String)
    public io.realm.RealmQuery like(java.lang.String,java.lang.String,io.realm.Case)
    public io.realm.RealmQuery beginGroup()
    public io.realm.RealmQuery endGroup()
    public io.realm.RealmQuery or()
    public io.realm.RealmQuery and()
    public io.realm.RealmQuery not()
    public io.realm.RealmQuery isEmpty(java.lang.String)
    public io.realm.RealmQuery isNotEmpty(java.lang.String)
    public java.lang.Number sum(java.lang.String)
    public double average(java.lang.String)
    public java.lang.Number min(java.lang.String)
    public java.util.Date minimumDate(java.lang.String)
    public java.lang.Number max(java.lang.String)
    public java.util.Date maximumDate(java.lang.String)
    public long count()
    public io.realm.RealmResults findAllAsync()
    public io.realm.RealmQuery sort(java.lang.String)
    public io.realm.RealmQuery sort(java.lang.String,io.realm.Sort)
    public io.realm.RealmQuery sort(java.lang.String,io.realm.Sort,java.lang.String,io.realm.Sort)
    public io.realm.RealmQuery sort(java.lang.String[],io.realm.Sort[])
    public io.realm.RealmQuery distinct(java.lang.String)
    public varargs io.realm.RealmQuery distinct(java.lang.String,java.lang.String[])
    public io.realm.RealmQuery limit(long)
    public io.realm.RealmQuery alwaysTrue()
    public io.realm.RealmQuery alwaysFalse()
    public io.realm.Realm getRealm()
    public java.lang.String getDescription()
    public java.lang.String getTypeQueried()
    public java.lang.Object findFirstAsync()
    private static final java.lang.String TYPE_MISMATCH
    private static final java.lang.String EMPTY_VALUES
    private static final java.lang.String ASYNC_QUERY_WRONG_THREAD_MESSAGE
com.guilhermedaros.museunfc.R$color
com.google.android.material.resources.TextAppearance:
    private static final java.lang.String TAG
    private static final int TYPEFACE_SANS
    private static final int TYPEFACE_SERIF
    private static final int TYPEFACE_MONOSPACE
com.google.android.material.tabs.TabLayout$SlidingTabIndicator
androidx.appcompat.view.menu.BaseMenuPresenter:
    public boolean flagActionItems()
    public int getId()
androidx.annotation.ColorLong
com.google.android.material.snackbar.Snackbar$SnackbarLayout:
    public void <init>(android.content.Context)
androidx.transition.Slide$2
androidx.appcompat.widget.FitWindowsFrameLayout:
    public void <init>(android.content.Context)
com.android.volley.toolbox.ImageLoader$3
androidx.appcompat.widget.SwitchCompat
androidx.appcompat.view.StandaloneActionMode:
    public void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
    public boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
    public void onCloseSubMenu(androidx.appcompat.view.menu.SubMenuBuilder)
    public boolean isUiFocusable()
androidx.transition.GhostViewUtils
androidx.core.os.MessageCompat
com.google.android.material.tabs.TabLayout$TabView$1
com.google.android.material.transformation.ExpandableBehavior:
    public static com.google.android.material.transformation.ExpandableBehavior from(android.view.View,java.lang.Class)
    private static final int STATE_UNINITIALIZED
    private static final int STATE_EXPANDED
    private static final int STATE_COLLAPSED
com.google.gson.internal.PreJava9DateFormatProvider
androidx.appcompat.widget.AppCompatBackgroundHelper:
    public final boolean shouldApplyFrameworkTintUsingColorFilter()
    public final boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable)
androidx.core.view.ActionProvider$VisibilityListener:
    public abstract void onActionProviderVisibilityChanged(boolean)
androidx.cardview.widget.CardViewBaseImpl
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath:
    public void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)
    public final void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)
androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments
androidx.transition.ViewUtils:
    public static void setTransitionAlpha(android.view.View,float)
    public static void saveNonTransitionAlpha(android.view.View)
    public static void clearNonTransitionAlpha(android.view.View)
    public static void setTransitionVisibility(android.view.View,int)
    public static void transformMatrixToGlobal(android.view.View,android.graphics.Matrix)
    public static void transformMatrixToLocal(android.view.View,android.graphics.Matrix)
    public static final android.util.Property CLIP_BOUNDS
com.android.volley.toolbox.HttpStack
com.google.android.material.bottomappbar.BottomAppBar$Behavior:
    public static synthetic java.lang.ref.WeakReference access$2100(com.google.android.material.bottomappbar.BottomAppBar$Behavior)
    public static synthetic android.graphics.Rect access$2200(com.google.android.material.bottomappbar.BottomAppBar$Behavior)
    public static synthetic int access$2300(com.google.android.material.bottomappbar.BottomAppBar$Behavior)
    public boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.bottomappbar.BottomAppBar,int)
    public boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.bottomappbar.BottomAppBar,android.view.View,android.view.View,int,int)
androidx.cardview.widget.CardViewApi21Impl:
    public void setRadius(androidx.cardview.widget.CardViewDelegate,float)
    public void initStatic()
    public float getMinWidth(androidx.cardview.widget.CardViewDelegate)
    public float getMinHeight(androidx.cardview.widget.CardViewDelegate)
    public void setElevation(androidx.cardview.widget.CardViewDelegate,float)
    public float getElevation(androidx.cardview.widget.CardViewDelegate)
    public void updatePadding(androidx.cardview.widget.CardViewDelegate)
    public void onCompatPaddingChanged(androidx.cardview.widget.CardViewDelegate)
    public void onPreventCornerOverlapChanged(androidx.cardview.widget.CardViewDelegate)
    public android.content.res.ColorStateList getBackgroundColor(androidx.cardview.widget.CardViewDelegate)
com.google.android.material.chip.ChipDrawable:
    public static com.google.android.material.chip.ChipDrawable createFromAttributes(android.content.Context,android.util.AttributeSet,int,int)
    public static boolean isStateful(com.google.android.material.resources.TextAppearance)
    public static boolean hasState(int[],int)
    public boolean getUseCompatRipple()
    public void setDelegate(com.google.android.material.chip.ChipDrawable$Delegate)
    public void getCloseIconTouchBounds(android.graphics.RectF)
    public android.graphics.Paint$Align calculateTextOriginAndAlignment(android.graphics.Rect,android.graphics.PointF)
    public boolean isCloseIconStateful()
    public int[] getCloseIconState()
    public android.content.res.ColorStateList getChipBackgroundColor()
    public void setChipBackgroundColorResource(int)
    public float getChipMinHeight()
    public void setChipMinHeightResource(int)
    public void setChipCornerRadiusResource(int)
    public android.content.res.ColorStateList getChipStrokeColor()
    public void setChipStrokeColorResource(int)
    public float getChipStrokeWidth()
    public void setChipStrokeWidthResource(int)
    public android.content.res.ColorStateList getRippleColor()
    public void setRippleColorResource(int)
    public java.lang.CharSequence getText()
    public com.google.android.material.resources.TextAppearance getTextAppearance()
    public void setTextAppearanceResource(int)
    public android.text.TextUtils$TruncateAt getEllipsize()
    public void setEllipsize(android.text.TextUtils$TruncateAt)
    public void setChipIconVisible(int)
    public android.graphics.drawable.Drawable getChipIcon()
    public void setChipIconResource(int)
    public android.content.res.ColorStateList getChipIconTint()
    public void setChipIconTintResource(int)
    public float getChipIconSize()
    public void setChipIconSizeResource(int)
    public boolean isCloseIconVisible()
    public void setCloseIconResource(int)
    public android.content.res.ColorStateList getCloseIconTint()
    public void setCloseIconTintResource(int)
    public float getCloseIconSize()
    public void setCloseIconSizeResource(int)
    public void setCloseIconContentDescription(java.lang.CharSequence)
    public java.lang.CharSequence getCloseIconContentDescription()
    public boolean isCheckable()
    public void setCheckableResource(int)
    public void setCheckedIconVisible(int)
    public android.graphics.drawable.Drawable getCheckedIcon()
    public void setCheckedIconResource(int)
    public android.content.res.ColorStateList getCheckedIconTint()
    public void setCheckedIconTintResource(int)
    public com.google.android.material.animation.MotionSpec getShowMotionSpec()
    public void setShowMotionSpecResource(int)
    public void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
    public com.google.android.material.animation.MotionSpec getHideMotionSpec()
    public void setHideMotionSpecResource(int)
    public void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
    public float getChipStartPadding()
    public void setChipStartPaddingResource(int)
    public float getIconStartPadding()
    public void setIconStartPaddingResource(int)
    public float getIconEndPadding()
    public void setIconEndPaddingResource(int)
    public float getTextStartPadding()
    public void setTextStartPaddingResource(int)
    public float getTextEndPadding()
    public void setTextEndPaddingResource(int)
    public float getCloseIconStartPadding()
    public void setCloseIconStartPaddingResource(int)
    public float getCloseIconEndPadding()
    public void setCloseIconEndPaddingResource(int)
    public float getChipEndPadding()
    public void setChipEndPaddingResource(int)
    public void setMaxWidth(int)
    public boolean shouldDrawText()
    public void setShouldDrawText(boolean)
    public final void loadFromAttributes(android.util.AttributeSet,int,int)
    public final boolean canShowCheckedIcon()
    public final void drawChipSurface(android.graphics.Canvas,android.graphics.Rect)
    public final void drawChipBackground(android.graphics.Canvas,android.graphics.Rect)
    public final void drawChipStroke(android.graphics.Canvas,android.graphics.Rect)
    public final void drawCompatRipple(android.graphics.Canvas,android.graphics.Rect)
    public final void drawChipIcon(android.graphics.Canvas,android.graphics.Rect)
    public final void drawCheckedIcon(android.graphics.Canvas,android.graphics.Rect)
    public final void drawText(android.graphics.Canvas,android.graphics.Rect)
    public final void drawCloseIcon(android.graphics.Canvas,android.graphics.Rect)
    public final void drawDebug(android.graphics.Canvas,android.graphics.Rect)
    public final float calculateTextCenterFromBaseline()
    public final void calculateTextBounds(android.graphics.Rect,android.graphics.RectF)
    public final void calculateChipTouchBounds(android.graphics.Rect,android.graphics.RectF)
    public final android.graphics.ColorFilter getTintColorFilter()
    public final void updateCompatRippleColor()
    public final void setChipSurfaceColor(android.content.res.ColorStateList)
    public final void updateFrameworkCloseIconRipple()
androidx.collection.SimpleArrayMap:
    public static int binarySearchHashes(int[],int,int)
    public void <init>(androidx.collection.SimpleArrayMap)
    public void putAll(androidx.collection.SimpleArrayMap)
androidx.core.graphics.TypefaceCompat:
    public static android.graphics.Typeface findFromCache(android.content.res.Resources,int,int)
    public static android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)
    public static android.graphics.Typeface getBestFontFromFamily(android.content.Context,android.graphics.Typeface,int)
com.jaredrummler.materialspinner.MaterialSpinner:
    public static synthetic int access$000(com.jaredrummler.materialspinner.MaterialSpinner)
    public static synthetic com.jaredrummler.materialspinner.MaterialSpinnerBaseAdapter access$100(com.jaredrummler.materialspinner.MaterialSpinner)
    public static synthetic java.lang.String access$200(com.jaredrummler.materialspinner.MaterialSpinner)
    public static synthetic int access$002(com.jaredrummler.materialspinner.MaterialSpinner,int)
    public static synthetic boolean access$302(com.jaredrummler.materialspinner.MaterialSpinner,boolean)
    public static synthetic int access$400(com.jaredrummler.materialspinner.MaterialSpinner)
    public static synthetic com.jaredrummler.materialspinner.MaterialSpinner$OnItemSelectedListener access$500(com.jaredrummler.materialspinner.MaterialSpinner)
    public static synthetic boolean access$300(com.jaredrummler.materialspinner.MaterialSpinner)
    public static synthetic com.jaredrummler.materialspinner.MaterialSpinner$OnNothingSelectedListener access$600(com.jaredrummler.materialspinner.MaterialSpinner)
    public static synthetic boolean access$700(com.jaredrummler.materialspinner.MaterialSpinner)
    public static synthetic void access$800(com.jaredrummler.materialspinner.MaterialSpinner,boolean)
    public final void init(android.content.Context,android.util.AttributeSet)
    public final boolean canShowPopup()
androidx.appcompat.app.AlertController$AlertParams$2
com.google.android.material.internal.ThemeEnforcement:
    public static varargs androidx.appcompat.widget.TintTypedArray obtainTintedStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,int[])
    public static varargs boolean isCustomTextAppearanceValid(android.content.Context,android.util.AttributeSet,int[],int,int,int[])
    public static void checkAppCompatTheme(android.content.Context)
    public static void checkMaterialTheme(android.content.Context)
    public static boolean isTheme(android.content.Context,int[])
com.google.gson.internal.reflect.UnsafeReflectionAccessor:
    public static java.lang.Object getUnsafeInstance()
    public static java.lang.reflect.Field getOverrideField()
    public boolean makeAccessibleWithUnsafe(java.lang.reflect.AccessibleObject)
androidx.cardview.widget.RoundRectDrawableWithShadow$RoundRectHelper
androidx.transition.ViewOverlayImpl:
    public abstract void add(android.graphics.drawable.Drawable)
    public abstract void remove(android.graphics.drawable.Drawable)
com.google.android.material.appbar.AppBarLayout$2:
    public final synthetic com.google.android.material.appbar.AppBarLayout this$0
androidx.appcompat.app.AlertController$2:
    public void onScrollChange(androidx.core.widget.NestedScrollView,int,int,int,int)
    public final synthetic androidx.appcompat.app.AlertController this$0
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator:
    public int updateFrames(android.graphics.drawable.AnimationDrawable,boolean)
    public int getTotalDuration()
com.android.volley.toolbox.AdaptedHttpStack
io.realm.internal.objectstore.OsObjectBuilder$5
io.realm.RealmObjectSchema$FieldMetaData:
    public final io.realm.RealmFieldType fieldType
    public final io.realm.RealmFieldType listType
    public final boolean defaultNullable
androidx.appcompat.widget.DrawableUtils:
    public static void fixVectorDrawableTinting(android.graphics.drawable.Drawable)
    public static final android.graphics.Rect INSETS_NONE
    public static java.lang.Class sInsetsClazz
androidx.core.app.ComponentActivity:
    public androidx.collection.SimpleArrayMap mExtraDataMap
androidx.core.widget.NestedScrollView$SavedState$1:
    public androidx.core.widget.NestedScrollView$SavedState createFromParcel(android.os.Parcel)
    public androidx.core.widget.NestedScrollView$SavedState[] newArray(int)
com.google.android.material.datepicker.Month$1:
    public com.google.android.material.datepicker.Month createFromParcel(android.os.Parcel)
    public com.google.android.material.datepicker.Month[] newArray(int)
androidx.activity.OnBackPressedCallback:
    public final void setEnabled(boolean)
    public final boolean isEnabled()
    public final void remove()
    public abstract void handleOnBackPressed()
    public void addCancellable(androidx.activity.Cancellable)
    public void removeCancellable(androidx.activity.Cancellable)
androidx.transition.ChangeBounds$2:
    public void set(androidx.transition.ChangeBounds$ViewBounds,android.graphics.PointF)
    public android.graphics.PointF get()
androidx.savedstate.Recreator:
    public final void reflectiveNew(java.lang.String)
io.realm.RealmSchema:
    public final boolean haveColumnInfo()
    public final io.realm.internal.ColumnInfo getColumnInfo(java.lang.Class)
    public final io.realm.internal.ColumnInfo getColumnInfo(java.lang.String)
    public void refresh()
    public final boolean isProxyClass(java.lang.Class,java.lang.Class)
io.realm.internal.objectstore.OsObjectBuilder$12
androidx.transition.ViewUtilsApi23:
    public static void <clinit>()
com.google.android.material.snackbar.SnackbarManager$SnackbarRecord:
    public boolean isSnackbar(com.google.android.material.snackbar.SnackbarManager$Callback)
    public int duration
    public boolean paused
com.google.android.material.shape.MaterialShapeUtils
androidx.core.view.NestedScrollingChild:
    public abstract boolean isNestedScrollingEnabled()
    public abstract void stopNestedScroll()
com.android.volley.toolbox.DiskBasedCache$CountingInputStream:
    public long bytesRemaining()
com.google.gson.internal.bind.TypeAdapters$24:
    public java.util.UUID read(com.google.gson.stream.JsonReader)
    public void write(com.google.gson.stream.JsonWriter,java.util.UUID)
androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments
androidx.appcompat.widget.Toolbar$SavedState$1:
    public androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel)
    public androidx.appcompat.widget.Toolbar$SavedState[] newArray(int)
androidx.savedstate.SavedStateRegistryController:
    public static androidx.savedstate.SavedStateRegistryController create(androidx.savedstate.SavedStateRegistryOwner)
    public androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
androidx.versionedparcelable.VersionedParcelParcel:
    public void writeByteArray(byte[])
    public void writeInt(int)
    public void writeString(java.lang.String)
    public void writeParcelable(android.os.Parcelable)
    public void writeBoolean(boolean)
    public void writeCharSequence(java.lang.CharSequence)
    public java.lang.CharSequence readCharSequence()
    public int readInt()
    public java.lang.String readString()
    public byte[] readByteArray()
    public android.os.Parcelable readParcelable()
    public boolean readBoolean()
io.realm.rx.RealmObservableFactory:
    public final boolean returnFrozenObjects
    public java.lang.ThreadLocal resultsRefs
    public java.lang.ThreadLocal listRefs
    public java.lang.ThreadLocal objectRefs
    public static final io.reactivex.BackpressureStrategy BACK_PRESSURE_STRATEGY
com.getkeepsafe.relinker.ReLinkerInstance$2:
    public final synthetic com.getkeepsafe.relinker.ReLinkerInstance this$0
androidx.collection.ArrayMap:
    public boolean retainAll(java.util.Collection)
com.google.gson.internal.bind.MapTypeAdapterFactory:
    public final com.google.gson.TypeAdapter getKeyAdapter(com.google.gson.Gson,java.lang.reflect.Type)
io.realm.internal.Property:
    public static io.realm.RealmFieldType convertToRealmFieldType(int)
    public io.realm.RealmFieldType getType()
    public java.lang.String getLinkedObjectName()
    public long getColumnKey()
androidx.appcompat.app.AppCompatDelegateImpl$5:
    public void onAttachedFromWindow()
    public void onDetachedFromWindow()
io.realm.RealmObjectSchema:
    public java.lang.String getClassName()
    public varargs abstract io.realm.internal.fields.FieldDescriptor getFieldDescriptors(java.lang.String,io.realm.RealmFieldType[])
    public io.realm.internal.Table getTable()
    public final io.realm.SchemaConnector getSchemaConnector()
    public final io.realm.internal.ColumnInfo columnInfo
    public static final java.util.Map SUPPORTED_SIMPLE_FIELDS
    public static final java.util.Map SUPPORTED_LINKED_FIELDS
com.google.gson.internal.ConstructorConstructor$14:
    public final synthetic com.google.gson.internal.ConstructorConstructor this$0
androidx.core.widget.TextViewCompat$OreoCallback:
    public final void recomputeProcessTextMenuItems(android.view.Menu)
    public final java.util.List getSupportedActivities(android.content.Context,android.content.pm.PackageManager)
    public final boolean isSupportedActivity(android.content.pm.ResolveInfo,android.content.Context)
    public final android.content.Intent createProcessTextIntentForResolveInfo(android.content.pm.ResolveInfo,android.widget.TextView)
    public final boolean isEditable(android.widget.TextView)
    public final android.content.Intent createProcessTextIntent()
com.google.gson.Gson$4:
    public void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicLong)
    public java.util.concurrent.atomic.AtomicLong read(com.google.gson.stream.JsonReader)
com.google.android.material.datepicker.MaterialDatePicker:
    public static void <clinit>()
    public static final java.lang.Object CONFIRM_BUTTON_TAG
    public static final java.lang.Object CANCEL_BUTTON_TAG
    public static final java.lang.Object TOGGLE_BUTTON_TAG
com.google.android.material.theme.overlay.MaterialThemeOverlay:
    public static int obtainAndroidThemeOverlayId(android.content.Context,android.util.AttributeSet)
    public static int obtainMaterialThemeOverlayId(android.content.Context,android.util.AttributeSet,int,int)
com.google.android.material.appbar.ViewOffsetHelper:
    public void onViewLayout()
    public boolean setTopAndBottomOffset(int)
    public boolean setLeftAndRightOffset(int)
    public int getTopAndBottomOffset()
com.google.gson.internal.bind.TypeAdapters$3:
    public java.lang.Boolean read(com.google.gson.stream.JsonReader)
    public void write(com.google.gson.stream.JsonWriter,java.lang.Boolean)
com.google.android.material.bottomappbar.BottomAppBar:
    public static synthetic void access$1200(com.google.android.material.bottomappbar.BottomAppBar)
    public static void access$1400(com.google.android.material.bottomappbar.BottomAppBar)
    public static synthetic android.animation.Animator access$1702(com.google.android.material.bottomappbar.BottomAppBar,android.animation.Animator)
    public static synthetic com.google.android.material.floatingactionbutton.FloatingActionButton access$1900(com.google.android.material.bottomappbar.BottomAppBar)
    public static synthetic int access$2400(com.google.android.material.bottomappbar.BottomAppBar)
    public static synthetic int access$2500(com.google.android.material.bottomappbar.BottomAppBar)
    public static synthetic int access$2600(com.google.android.material.bottomappbar.BottomAppBar)
    public static synthetic int access$2700(com.google.android.material.bottomappbar.BottomAppBar)
    public static void access$2900(com.google.android.material.bottomappbar.BottomAppBar,com.google.android.material.floatingactionbutton.FloatingActionButton)
    public static void <clinit>()
    public boolean setFabDiameter(int)
    public final void dispatchAnimationStart()
    public final void dispatchAnimationEnd()
    public final void maybeAnimateModeChange(int)
    public final void createFabTranslationXAnimation(int,java.util.List)
    public final void maybeAnimateMenuView(int,boolean)
    public final void createMenuViewTranslationAnimation(int,boolean,java.util.List)
    public final void translateActionMenuView(androidx.appcompat.widget.ActionMenuView,int,boolean)
    public final void cancelAnimations()
    public final void setActionMenuViewPosition()
    public final void addFabAnimationListeners(com.google.android.material.floatingactionbutton.FloatingActionButton)
    public final int fabOffsetEndMode
    public final com.google.android.material.shape.MaterialShapeDrawable materialShapeDrawable
    public java.util.ArrayList animationListeners
    public int bottomInset
    public int rightInset
    public int leftInset
    public com.google.android.material.animation.TransformationCallback fabTransformationCallback
    public static final int DEF_STYLE_RES
com.google.android.material.behavior.HideBottomViewOnScrollBehavior:
    public static synthetic android.view.ViewPropertyAnimator access$002(com.google.android.material.behavior.HideBottomViewOnScrollBehavior,android.view.ViewPropertyAnimator)
    public void setAdditionalHiddenOffsetY(android.view.View,int)
    public void slideUp(android.view.View)
    public void slideDown(android.view.View)
androidx.transition.ViewGroupUtilsApi14
androidx.recyclerview.widget.RecyclerView$5:
    public void addView(android.view.View,int)
    public int indexOfChild(android.view.View)
    public void removeAllViews()
    public androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View)
    public void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams)
    public void detachViewFromParent(int)
    public void onEnteredHiddenState(android.view.View)
    public void onLeftHiddenState(android.view.View)
com.google.android.material.button.MaterialButtonHelper:
    public static void <clinit>()
    public void loadFromAttributes(android.content.res.TypedArray)
    public void setBackgroundOverwritten()
    public boolean isBackgroundOverwritten()
    public void setSupportBackgroundTintList(android.content.res.ColorStateList)
    public android.content.res.ColorStateList getSupportBackgroundTintList()
    public void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
    public android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
    public void setShouldDrawSurfaceColorStroke(boolean)
    public void updateMaskBounds(int,int)
    public void setBackgroundColor(int)
    public void setRippleColor(android.content.res.ColorStateList)
    public android.content.res.ColorStateList getRippleColor()
    public void setStrokeColor(android.content.res.ColorStateList)
    public android.content.res.ColorStateList getStrokeColor()
    public void setStrokeWidth(int)
    public int getStrokeWidth()
    public void setCornerRadius(int)
    public int getCornerRadius()
    public void setCheckable(boolean)
    public boolean isCheckable()
    public com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
    public final android.graphics.drawable.InsetDrawable wrapDrawableWithInset(android.graphics.drawable.Drawable)
    public final android.graphics.drawable.Drawable createBackground()
    public final void updateButtonShape(com.google.android.material.shape.ShapeAppearanceModel)
    public static final boolean IS_LOLLIPOP
com.google.android.material.internal.TextDrawableHelper:
    public static synthetic boolean access$002(com.google.android.material.internal.TextDrawableHelper,boolean)
    public static synthetic java.lang.ref.WeakReference access$100(com.google.android.material.internal.TextDrawableHelper)
    public void setDelegate(com.google.android.material.internal.TextDrawableHelper$TextDrawableDelegate)
    public android.text.TextPaint getTextPaint()
    public void setTextWidthDirty(boolean)
    public com.google.android.material.resources.TextAppearance getTextAppearance()
    public void setTextAppearance(com.google.android.material.resources.TextAppearance,android.content.Context)
    public void updateTextPaintDrawState(android.content.Context)
    public final float calculateTextWidth(java.lang.CharSequence)
androidx.viewpager.widget.ViewPager$SavedState$1:
    public androidx.viewpager.widget.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public androidx.viewpager.widget.ViewPager$SavedState createFromParcel(android.os.Parcel)
    public androidx.viewpager.widget.ViewPager$SavedState[] newArray(int)
com.google.gson.internal.bind.TypeAdapters$11:
    public java.lang.Number read(com.google.gson.stream.JsonReader)
    public void write(com.google.gson.stream.JsonWriter,java.lang.Number)
androidx.recyclerview.widget.LinearSnapHelper:
    public int findTargetSnapPosition(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int)
    public final float computeDistancePerChild(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper)
androidx.appcompat.view.ContextThemeWrapper:
    public void <init>(android.content.Context,android.content.res.Resources$Theme)
    public int getThemeResId()
    public void onApplyThemeResource(android.content.res.Resources$Theme,int)
    public final android.content.res.Resources getResourcesInternal()
    public android.content.res.Configuration mOverrideConfiguration
com.google.gson.internal.bind.TreeTypeAdapter$GsonContextImpl:
    public void <init>(com.google.gson.internal.bind.TreeTypeAdapter)
    public final synthetic com.google.gson.internal.bind.TreeTypeAdapter this$0
com.google.android.material.button.MaterialButton$SavedState:
    public final void readFromParcel(android.os.Parcel)
io.realm.internal.OsRealmConfig:
    public void <init>(io.realm.RealmConfiguration,java.lang.String,boolean,io.realm.internal.OsSchemaInfo,io.realm.internal.OsSharedRealm$MigrationCallback,io.realm.internal.OsSharedRealm$InitializationCallback)
    public io.realm.RealmConfiguration getRealmConfiguration()
    public java.net.URI getResolvedRealmURI()
    public io.realm.internal.NativeContext getContext()
    public final io.realm.internal.OsSharedRealm$MigrationCallback migrationCallback
    public final io.realm.internal.OsSharedRealm$InitializationCallback initializationCallback
androidx.appcompat.widget.AppCompatDrawableManager$1:
    public android.graphics.drawable.Drawable createDrawableFor(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)
    public boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)
    public boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)
    public android.graphics.PorterDuff$Mode getTintModeForDrawableRes(int)
    public final android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context)
    public final android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context)
    public final android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context)
    public final android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context)
com.google.android.material.appbar.HeaderBehavior:
    public final boolean fling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,float)
    public abstract void onFlingFinished(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)
    public abstract boolean canDragView(android.view.View)
    public abstract int getMaxDragOffset(android.view.View)
    public abstract int getScrollRangeForDragFling(android.view.View)
    public final void ensureVelocityTracker()
androidx.viewpager.widget.ViewPager$PageTransformer
com.google.android.material.transformation.FabTransformationBehavior:
    public abstract com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec onCreateMotionSpec(android.content.Context,boolean)
    public final void createDependencyTranslationAnimation(android.view.View,android.view.View,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List)
    public final void createIconFadeAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List)
    public final void createExpansionAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,float,float,java.util.List,java.util.List)
    public final void calculateDependencyWindowBounds(android.view.View,android.graphics.RectF)
    public final float calculateRevealCenterX(android.view.View,android.view.View,com.google.android.material.animation.Positioning)
    public final float calculateRevealCenterY(android.view.View,android.view.View,com.google.android.material.animation.Positioning)
    public final void calculateChildVisibleBoundsAtEndOfExpansion(android.view.View,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,com.google.android.material.animation.MotionTiming,com.google.android.material.animation.MotionTiming,float,float,float,float,android.graphics.RectF)
    public final android.view.ViewGroup calculateChildContentContainer(android.view.View)
    public final int getBackgroundTint(android.view.View)
    public final void createPreFillRadialExpansion(android.view.View,long,int,int,float,java.util.List)
    public final void createPostFillRadialExpansion(android.view.View,long,long,long,int,int,float,java.util.List)
com.google.android.material.color.MaterialColors
com.google.gson.internal.ConstructorConstructor$4:
    public final synthetic com.google.gson.internal.ConstructorConstructor this$0
com.google.android.material.textfield.CutoutDrawable:
    public boolean hasCutout()
    public void setCutout(android.graphics.RectF)
    public void removeCutout()
    public final void setPaintStyles()
    public final void preDraw(android.graphics.Canvas)
    public final void saveCanvasLayer(android.graphics.Canvas)
    public final void postDraw(android.graphics.Canvas)
    public final boolean useHardwareLayer(android.graphics.drawable.Drawable$Callback)
androidx.collection.SparseArrayCompat:
    public int indexOfValue(java.lang.Object)
    public void clear()
androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments
com.google.android.material.shape.MaterialShapeDrawable$2
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks
androidx.cardview.widget.RoundRectDrawable:
    public void setPadding(float,boolean,boolean)
    public float getPadding()
    public void setRadius(float)
    public float getRadius()
    public void setColor(android.content.res.ColorStateList)
    public android.content.res.ColorStateList getColor()
    public final void setBackground(android.content.res.ColorStateList)
    public final android.graphics.Paint mPaint
    public final android.graphics.RectF mBoundsF
    public final android.graphics.Rect mBoundsI
androidx.core.util.DebugUtils
com.google.android.material.checkbox.MaterialCheckBox:
    public void <init>(android.content.Context,android.util.AttributeSet,int)
io.realm.internal.ColumnInfo$ColumnDetails:
    public void <init>(long,io.realm.RealmFieldType,java.lang.String)
io.realm.RealmAsyncTask
com.guilhermedaros.museunfc.Fragments.FragmentNFC:
    public static com.guilhermedaros.museunfc.Fragments.FragmentNFC newInstance()
    public void onNfcDetected(android.nfc.tech.Ndef)
    public final void initViews(android.view.View)
    public final void writeToNfc(android.nfc.tech.Ndef,java.lang.String)
com.google.gson.internal.JavaVersion:
    public static int determineMajorJavaVersion()
    public static int getMajorJavaVersion(java.lang.String)
    public static int parseDotted(java.lang.String)
    public static int extractBeginningInt(java.lang.String)
    public static int getMajorJavaVersion()
    public static boolean isJava9OrLater()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition:
    public void <init>()
androidx.collection.LongSparseArray:
    public void <init>(int)
    public void delete(long)
    public void remove(long)
    public void removeAt(int)
    public long keyAt(int)
    public int indexOfKey(long)
com.google.android.material.button.MaterialButton$SavedState$1:
    public com.google.android.material.button.MaterialButton$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public com.google.android.material.button.MaterialButton$SavedState createFromParcel(android.os.Parcel)
    public com.google.android.material.button.MaterialButton$SavedState[] newArray(int)
androidx.core.graphics.drawable.WrappedDrawableState:
    public boolean canConstantState()
com.getkeepsafe.relinker.elf.Elf$DynamicStructure
com.google.android.material.animation.ChildrenAlphaProperty:
    public java.lang.Float get(android.view.ViewGroup)
    public void set(android.view.ViewGroup,java.lang.Float)
com.google.android.material.transformation.FabTransformationBehavior$4:
    public final synthetic com.google.android.material.transformation.FabTransformationBehavior this$0
androidx.core.view.ActionProvider$SubUiVisibilityListener
androidx.appcompat.view.menu.MenuAdapter:
    public void setForceShowIcon(boolean)
    public androidx.appcompat.view.menu.MenuBuilder getAdapterMenu()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState:
    public void drawCachedBitmapWithRootAlpha(android.graphics.Canvas,android.graphics.ColorFilter,android.graphics.Rect)
    public boolean hasTranslucentRoot()
    public android.graphics.Paint getPaint(android.graphics.ColorFilter)
    public void createCachedBitmapIfNeeded(int,int)
    public boolean canReuseBitmap(int,int)
    public boolean canReuseCache()
    public void updateCacheStates()
    public boolean onStateChanged(int[])
com.google.android.material.snackbar.SnackbarContentLayout:
    public static void updateTopBottomPadding(android.view.View,int,int)
androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener:
    public abstract boolean onMenuItemClick(android.view.MenuItem)
com.google.android.material.internal.FlowLayout:
    public static int getMeasuredDimension(int,int,int)
    public int getRowIndex(android.view.View)
    public final void loadFromAttributes(android.content.Context,android.util.AttributeSet)
com.google.android.material.shape.ShapePath$ShadowCompatOperation:
    public final void draw(com.google.android.material.shadow.ShadowRenderer,int,android.graphics.Canvas)
androidx.appcompat.view.SupportMenuInflater:
    public java.lang.Object getRealOwner()
androidx.appcompat.widget.TintTypedArray:
    public static androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,int,int[])
    public float getFloat(int,float)
    public int getInteger(int,int)
    public java.lang.CharSequence[] getTextArray(int)
    public void recycle()
com.google.gson.internal.bind.DateTypeAdapter:
    public java.util.Date read(com.google.gson.stream.JsonReader)
    public synchronized void write(com.google.gson.stream.JsonWriter,java.util.Date)
    public final synchronized java.util.Date deserializeToDate(java.lang.String)
com.google.gson.FieldNamingPolicy:
    public void <init>(java.lang.String,int)
    public static java.lang.String modifyString(char,java.lang.String,int)
androidx.core.graphics.PathParser$PathDataNode:
    public static void addCommand(android.graphics.Path,float[],char,char,float[])
    public static void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double)
    public void interpolatePathDataNode(androidx.core.graphics.PathParser$PathDataNode,androidx.core.graphics.PathParser$PathDataNode,float)
com.getkeepsafe.relinker.elf.Elf$Header
androidx.appcompat.view.menu.MenuDialogHelper:
    public void show(android.os.IBinder)
    public void dismiss()
    public androidx.appcompat.view.menu.MenuPresenter$Callback mPresenterCallback
androidx.transition.Scene:
    public static void setCurrentScene(android.view.ViewGroup,androidx.transition.Scene)
    public static androidx.transition.Scene getCurrentScene(android.view.ViewGroup)
    public void exit()
    public android.view.ViewGroup mSceneRoot
    public java.lang.Runnable mExitAction
io.realm.internal.ObservableCollection$CollectionObserverPair:
    public void onChange(java.lang.Object,io.realm.internal.OsCollectionChangeSet)
io.realm.Realm$1$2
androidx.lifecycle.Lifecycling:
    public static java.lang.reflect.Constructor generatedConstructor(java.lang.Class)
    public static int resolveObserverCallbackType(java.lang.Class)
    public static boolean isLifecycleParent(java.lang.Class)
androidx.lifecycle.FullLifecycleObserverAdapter$1
androidx.appcompat.app.TwilightCalculator:
    public static androidx.appcompat.app.TwilightCalculator getInstance()
androidx.transition.ViewUtilsApi22:
    public static void <clinit>()
androidx.appcompat.graphics.drawable.StateListDrawable:
    public int[] extractStateSet(android.util.AttributeSet)
com.google.gson.TypeAdapter:
    public final com.google.gson.TypeAdapter nullSafe()
    public final com.google.gson.JsonElement toJsonTree(java.lang.Object)
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealEvaluator:
    public com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo evaluate(float,com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo,com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
androidx.core.app.ActivityCompat$PermissionCompatDelegate:
    public abstract boolean onActivityResult(android.app.Activity,int,int,android.content.Intent)
androidx.appcompat.widget.AppCompatTextHelper:
    public void setTypefaceByCallback(android.graphics.Typeface)
    public void runOnUiThread(java.lang.Runnable)
    public void setAllCaps(boolean)
    public void onSetCompoundDrawables()
    public void onLayout()
    public void setTextSize(int,float)
    public void autoSizeText()
    public int getAutoSizeTextType()
    public int getAutoSizeStepGranularity()
    public int getAutoSizeMinTextSize()
    public int getAutoSizeMaxTextSize()
    public int[] getAutoSizeTextAvailableSizes()
    public android.content.res.ColorStateList getCompoundDrawableTintList()
    public void setCompoundDrawableTintList(android.content.res.ColorStateList)
    public android.graphics.PorterDuff$Mode getCompoundDrawableTintMode()
    public void setCompoundDrawableTintMode(android.graphics.PorterDuff$Mode)
    public final void setTextSizeInternal(int,float)
    public final void setCompoundTints()
    public final void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.core.widget.ImageViewCompat
com.getkeepsafe.relinker.elf.Dynamic64Structure
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath:
    public void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)
    public final android.graphics.Paint$Cap getStrokeLineCap(int,android.graphics.Paint$Cap)
    public final android.graphics.Paint$Join getStrokeLineJoin(int,android.graphics.Paint$Join)
    public final void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)
androidx.appcompat.widget.TooltipCompatHandler:
    public static void setTooltipText(android.view.View,java.lang.CharSequence)
    public final void scheduleShow()
    public final void cancelPendingShow()
    public final boolean updateAnchorPos(android.view.MotionEvent)
com.google.gson.internal.$Gson$Types:
    public static varargs java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])
    public static java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type)
    public static java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type)
    public static java.lang.reflect.WildcardType supertypeOf(java.lang.reflect.Type)
    public static boolean equal(java.lang.Object,java.lang.Object)
    public static int hashCodeOrZero(java.lang.Object)
    public static java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type)
    public static java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type,java.lang.Class)
    public static java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class)
    public static java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable)
    public static int indexOf(java.lang.Object[],java.lang.Object)
    public static java.lang.Class declaringClassOf(java.lang.reflect.TypeVariable)
com.guilhermedaros.museunfc.Acitivities.LoginActivity:
    public static synthetic android.view.View access$200(com.guilhermedaros.museunfc.Acitivities.LoginActivity)
    public static synthetic android.view.View access$300(com.guilhermedaros.museunfc.Acitivities.LoginActivity)
    public final void attemptLogin()
    public final boolean verificaConexao()
    public final void addEmailsToAutoComplete(java.util.List)
com.google.android.material.textfield.MaterialAutoCompleteTextView:
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public static synthetic androidx.appcompat.widget.ListPopupWindow access$000(com.google.android.material.textfield.MaterialAutoCompleteTextView)
    public final int measureContentWidth()
    public final void updateText(java.lang.Object)
androidx.constraintlayout.solver.widgets.Analyzer
androidx.appcompat.graphics.drawable.DrawableContainer:
    public int getCurrentIndex()
    public final void updateDensity(android.content.res.Resources)
    public final boolean needsMirroring()
    public int mLastIndex
io.realm.internal.OsObjectStore:
    public static java.lang.String getPrimaryKeyForObject(io.realm.internal.OsSharedRealm,java.lang.String)
    public static void setSchemaVersion(io.realm.internal.OsSharedRealm,long)
    public static long getSchemaVersion(io.realm.internal.OsSharedRealm)
    public static boolean callWithLock(io.realm.RealmConfiguration,java.lang.Runnable)
androidx.constraintlayout.solver.widgets.Snapshot:
    public void updateFrom(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public void applyTo(androidx.constraintlayout.solver.widgets.ConstraintWidget)
androidx.constraintlayout.solver.widgets.ResolutionNode:
    public void addDependent(androidx.constraintlayout.solver.widgets.ResolutionNode)
    public void reset()
io.realm.internal.OsResults$Mode:
    public static io.realm.internal.OsResults$Mode getByValue(byte)
androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener
io.realm.RealmConfiguration$Builder:
    public void <init>()
    public io.realm.RealmConfiguration$Builder name(java.lang.String)
    public final void initializeBuilder(android.content.Context)
    public java.lang.String assetFilePath
    public io.realm.Realm$Transaction initialDataTransaction
androidx.core.graphics.Insets:
    public static androidx.core.graphics.Insets of(int,int,int,int)
androidx.customview.widget.ViewDragHelper:
    public static androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,androidx.customview.widget.ViewDragHelper$Callback)
    public static androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,float,androidx.customview.widget.ViewDragHelper$Callback)
    public int getTouchSlop()
    public boolean smoothSlideViewTo(android.view.View,int,int)
    public boolean isPointerDown(int)
    public boolean isCapturedViewUnder(int,int)
    public boolean isViewUnder(android.view.View,int,int)
    public final int computeSettleDuration(android.view.View,int,int,int,int)
    public final float distanceInfluenceForSnapDuration(float)
    public final void clearMotionHistory()
    public final void ensureMotionHistorySizeForId(int)
    public final void dragTo(int,int,int,int)
    public final int getEdgesTouched(int,int)
    public int mTrackingEdges
com.google.gson.internal.bind.JsonTreeReader:
    public void promoteNameToValue()
io.realm.internal.ObserverPairList:
    public void clear()
    public int size()
androidx.cardview.widget.RoundRectDrawableWithShadow:
    public void setAddPaddingForCorners(boolean)
    public void setAlpha(int)
    public void onBoundsChange(android.graphics.Rect)
    public boolean getPadding(android.graphics.Rect)
    public boolean onStateChange(int[])
    public boolean isStateful()
    public void setColorFilter(android.graphics.ColorFilter)
    public int getOpacity()
    public void setCornerRadius(float)
    public void draw(android.graphics.Canvas)
    public float getCornerRadius()
    public void getMaxShadowAndCornerPadding(android.graphics.Rect)
    public void setShadowSize(float)
    public void setMaxShadowSize(float)
    public float getShadowSize()
    public float getMaxShadowSize()
    public float getMinWidth()
    public float getMinHeight()
    public void setColor(android.content.res.ColorStateList)
    public android.content.res.ColorStateList getColor()
    public final void setBackground(android.content.res.ColorStateList)
    public final int toEven(float)
    public final void setShadowSize(float,float)
    public final void drawShadow(android.graphics.Canvas)
    public final void buildShadowCorners()
    public final void buildComponents(android.graphics.Rect)
    public final int mInsetShadow
    public android.graphics.Paint mPaint
    public android.graphics.Paint mCornerShadowPaint
    public android.graphics.Paint mEdgeShadowPaint
    public final android.graphics.RectF mCardBounds
    public float mCornerRadius
    public android.graphics.Path mCornerShadowPath
    public float mRawMaxShadowSize
    public float mShadowSize
    public float mRawShadowSize
    public android.content.res.ColorStateList mBackground
    public boolean mDirty
    public final int mShadowStartColor
    public final int mShadowEndColor
    public boolean mAddPaddingForCorners
    public boolean mPrintedShadowClipWarning
    public static androidx.cardview.widget.RoundRectDrawableWithShadow$RoundRectHelper sRoundRectHelper
io.realm.internal.NativeObjectReference$ReferencePool:
    public void <init>()
    public synchronized void add(io.realm.internal.NativeObjectReference)
    public synchronized void remove(io.realm.internal.NativeObjectReference)
androidx.appcompat.widget.LinearLayoutCompat:
    public void drawDividersVertical(android.graphics.Canvas)
    public void drawDividersHorizontal(android.graphics.Canvas)
    public android.view.View getVirtualChildAt(int)
    public void measureVertical(int,int)
    public void measureHorizontal(int,int)
    public void layoutVertical(int,int,int,int)
    public void layoutHorizontal(int,int,int,int)
    public final void forceUniformWidth(int,int)
    public final void forceUniformHeight(int,int)
    public final void setChildFrame(android.view.View,int,int,int,int)
androidx.transition.ChangeBounds$3:
    public void set(androidx.transition.ChangeBounds$ViewBounds,android.graphics.PointF)
    public android.graphics.PointF get()
androidx.recyclerview.widget.RecyclerView$4:
    public void processPersistent(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public void unused(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat:
    public void inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState cloneConstantState()
    public final boolean selectTransition(int)
    public final void updateStateFromTypedArray(android.content.res.TypedArray)
    public final void init()
    public final void inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public final int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public final int parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public static final java.lang.String LOGTAG
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams:
    public int getAnchorId()
    public androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
    public void setBehavior(androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior)
    public void setLastChildRect(android.graphics.Rect)
    public android.graphics.Rect getLastChildRect()
    public boolean checkAnchorChanged()
    public boolean didBlockInteraction()
    public boolean isBlockingInteractionBelow(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)
    public void resetTouchBehaviorTracking()
    public void resetNestedScroll(int)
    public boolean getChangedAfterNestedScroll()
    public void setChangedAfterNestedScroll(boolean)
    public void resetChangedAfterNestedScroll()
    public boolean dependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View)
    public android.view.View findAnchorView(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)
    public final void resolveAnchorView(android.view.View,androidx.coordinatorlayout.widget.CoordinatorLayout)
    public final boolean verifyAnchorView(android.view.View,androidx.coordinatorlayout.widget.CoordinatorLayout)
    public final boolean shouldDodge(android.view.View,int)
    public java.lang.Object mBehaviorTag
io.realm.DynamicRealmObject$1
com.android.volley.toolbox.Volley
com.android.volley.Request:
    public static int findDefaultTrafficStatsTag(java.lang.String)
    public static synthetic com.android.volley.VolleyLog$MarkerLog access$000(com.android.volley.Request)
    public int getMethod()
    public int getTrafficStatsTag()
    public com.android.volley.Request setRetryPolicy(com.android.volley.DefaultRetryPolicy)
    public com.android.volley.Request setRequestQueue(com.android.volley.RequestQueue)
    public final com.android.volley.Request setSequence(int)
    public java.lang.String getUrl()
    public java.lang.String getCacheKey()
    public com.android.volley.Request setCacheEntry(com.android.volley.Cache$Entry)
    public com.android.volley.Cache$Entry getCacheEntry()
    public java.util.Map getHeaders()
    public java.util.Map getPostParams()
    public java.lang.String getPostParamsEncoding()
    public java.lang.String getPostBodyContentType()
    public byte[] getPostBody()
    public java.util.Map getParams()
    public java.lang.String getParamsEncoding()
    public java.lang.String getBodyContentType()
    public final boolean shouldCache()
    public final boolean shouldRetryServerErrors()
    public com.android.volley.Request$Priority getPriority()
    public final int getTimeoutMs()
    public com.android.volley.DefaultRetryPolicy getRetryPolicy()
    public void markDelivered()
    public boolean hasHadResponseDelivered()
    public com.android.volley.VolleyError parseNetworkError(com.android.volley.VolleyError)
    public abstract void deliverResponse(java.lang.Object)
    public void deliverError(com.android.volley.VolleyError)
    public void setNetworkRequestCompleteListener(com.android.volley.Request$NetworkRequestCompleteListener)
    public int compareTo(com.android.volley.Request)
    public final byte[] encodeParameters(java.util.Map,java.lang.String)
androidx.transition.ViewGroupOverlayApi14
io.realm.OrderedRealmCollectionImpl:
    public void <init>(io.realm.BaseRealm,io.realm.internal.OsResults,java.lang.String)
    public void <init>(io.realm.BaseRealm,io.realm.internal.OsResults,java.lang.Class,java.lang.String)
    public java.lang.Object first(java.lang.Object)
    public boolean deleteAllFromRealm()
    public final java.lang.Object firstImpl(boolean,java.lang.Object)
    public final boolean forValues
com.google.gson.internal.bind.TypeAdapters$2:
    public java.util.BitSet read(com.google.gson.stream.JsonReader)
    public void write(com.google.gson.stream.JsonWriter,java.util.BitSet)
androidx.core.graphics.PathParser$ExtractFloatResult
com.getkeepsafe.relinker.elf.Elf$SectionHeader
androidx.cardview.widget.CardViewApi17Impl$1
com.google.android.material.canvas.CanvasCompat
androidx.core.provider.SelfDestructiveThread:
    public void postAndReply(java.util.concurrent.Callable,androidx.core.provider.SelfDestructiveThread$ReplyCallback)
    public void onInvokeRunnable(java.lang.Runnable)
    public void onDestruction()
androidx.appcompat.widget.ContentFrameLayout:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public void setDecorPadding(int,int,int,int)
com.getkeepsafe.relinker.elf.Elf32Header
androidx.appcompat.widget.AppCompatTextClassifierHelper:
    public void setTextClassifier(android.view.textclassifier.TextClassifier)
io.realm.internal.objectstore.OsObjectBuilder$11
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener:
    public abstract void onShown()
    public abstract void onHidden()
androidx.appcompat.app.TwilightManager:
    public static androidx.appcompat.app.TwilightManager getInstance(android.content.Context)
    public boolean isNight()
    public final android.location.Location getLastKnownLocation()
    public final boolean isStateValid()
    public final void updateState(android.location.Location)
com.google.android.material.shape.ShapeAppearancePathProvider$PathListener:
    public abstract void onCornerPathCreated(com.google.android.material.shape.ShapePath,android.graphics.Matrix,int)
    public abstract void onEdgePathCreated(com.google.android.material.shape.ShapePath,android.graphics.Matrix,int)
androidx.transition.ChangeBounds:
    public final boolean parentMatches(android.view.View,android.view.View)
androidx.appcompat.widget.VectorEnabledTintResources:
    public void <init>(android.content.Context,android.content.res.Resources)
    public static boolean isCompatVectorFromResourcesEnabled()
    public static void <clinit>()
    public android.graphics.drawable.Drawable getDrawable(int)
    public final android.graphics.drawable.Drawable superGetDrawable(int)
    public final java.lang.ref.WeakReference mContextRef
    public static boolean sCompatVectorFromResourcesEnabled
androidx.constraintlayout.solver.widgets.Snapshot$Connection:
    public void updateFrom(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public void applyTo(androidx.constraintlayout.solver.widgets.ConstraintWidget)
com.google.android.material.resources.CancelableFontCallback:
    public void cancel()
androidx.collection.MapCollections$MapIterator:
    public java.util.Map$Entry next()
com.android.volley.DefaultRetryPolicy:
    public void <init>(int,int,float)
    public int getCurrentTimeout()
    public int getCurrentRetryCount()
    public void retry(com.android.volley.VolleyError)
    public boolean hasAttemptRemaining()
androidx.cursoradapter.widget.ResourceCursorAdapter:
    public android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
androidx.constraintlayout.solver.widgets.Barrier:
    public void setBarrierType(int)
    public void setAllowsGoneWidget(boolean)
io.realm.internal.ColumnInfo:
    public void <init>(int,boolean)
    public io.realm.internal.ColumnInfo$ColumnDetails getColumnDetails(java.lang.String)
    public void copyFrom(io.realm.internal.ColumnInfo)
io.realm.Realm$Transaction$OnError
androidx.core.widget.ListViewAutoScrollHelper:
    public void scrollTargetBy(int,int)
    public boolean canTargetScrollHorizontally(int)
    public boolean canTargetScrollVertically(int)
androidx.viewpager.widget.ViewPager$OnAdapterChangeListener
androidx.arch.core.executor.ArchTaskExecutor:
    public static void <clinit>()
    public void executeOnDiskIO(java.lang.Runnable)
    public void postToMainThread(java.lang.Runnable)
    public static final java.util.concurrent.Executor sMainThreadExecutor
    public static final java.util.concurrent.Executor sIOThreadExecutor
androidx.activity.ComponentActivity$NonConfigurationInstances:
    public java.lang.Object custom
org.slf4j.helpers.MarkerIgnoringBase:
    private void constructor$org$slf4j$helpers$NamedLoggerBase()
    public synthetic bridge abstract java.lang.String getName()
com.google.gson.internal.LinkedTreeMap$KeySet$1:
    public final synthetic com.google.gson.internal.LinkedTreeMap$KeySet this$1
io.realm.DynamicRealm:
    public static io.realm.DynamicRealm createInstance(io.realm.RealmCache,io.realm.internal.OsSharedRealm$VersionID)
    public static io.realm.DynamicRealm createInstance(io.realm.internal.OsSharedRealm)
com.google.android.material.datepicker.MonthAdapter:
    public android.widget.TextView getView(int,android.view.View,android.view.ViewGroup)
    public int positionToDay(int)
    public int dayToPosition(int)
    public boolean withinMonth(int)
    public boolean isFirstInRow(int)
    public boolean isLastInRow(int)
    public final void initializeStyles(android.content.Context)
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior:
    public static boolean isBottomSheet(android.view.View)
    public boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,android.view.View)
    public boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,int)
    public final void offsetIfNeeded(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton)
    public com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener internalAutoHideListener
androidx.transition.ViewUtilsBase:
    public final void fetchSetFrame()
    public static java.lang.reflect.Method sSetFrameMethod
    public static boolean sSetFrameFetched
androidx.appcompat.widget.AppCompatPopupWindow:
    public static void <clinit>()
    public final void init(android.content.Context,android.util.AttributeSet,int,int)
    public final void setSupportOverlapAnchor(boolean)
    public boolean mOverlapAnchor
    public static final boolean COMPAT_OVERLAP_ANCHOR
androidx.transition.TransitionPropagation:
    public abstract long getStartDelay(android.view.ViewGroup,androidx.transition.Transition,androidx.transition.TransitionValues,androidx.transition.TransitionValues)
    public abstract void captureValues(androidx.transition.TransitionValues)
    public abstract java.lang.String[] getPropagationProperties()
androidx.transition.ViewUtilsApi19:
    public static void <clinit>()
com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter:
    public java.lang.Enum read(com.google.gson.stream.JsonReader)
    public void write(com.google.gson.stream.JsonWriter,java.lang.Enum)
com.google.gson.internal.bind.TypeAdapters$12:
    public java.lang.Number read(com.google.gson.stream.JsonReader)
    public void write(com.google.gson.stream.JsonWriter,java.lang.Number)
com.google.android.material.internal.CheckableImageButton$SavedState$1:
    public com.google.android.material.internal.CheckableImageButton$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public com.google.android.material.internal.CheckableImageButton$SavedState createFromParcel(android.os.Parcel)
    public com.google.android.material.internal.CheckableImageButton$SavedState[] newArray(int)
androidx.core.text.TextDirectionHeuristicsCompat:
    public static int isRtlText(int)
    public static final androidx.core.text.TextDirectionHeuristicCompat ANYRTL_LTR
    public static final androidx.core.text.TextDirectionHeuristicCompat LOCALE
com.google.android.material.datepicker.MonthsPagerAdapter:
    public static synthetic com.google.android.material.datepicker.MaterialCalendar$OnDayClickListener access$000(com.google.android.material.datepicker.MonthsPagerAdapter)
    public com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder onCreateViewHolder(android.view.ViewGroup)
    public void onBindViewHolder(com.google.android.material.datepicker.MonthsPagerAdapter$ViewHolder,int)
    public java.lang.CharSequence getPageTitle(int)
androidx.transition.ViewGroupUtils:
    public static androidx.transition.ViewGroupOverlayImpl getOverlay(android.view.ViewGroup)
    public static void hiddenSuppressLayout(android.view.ViewGroup,boolean)
    public static void <clinit>()
androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver:
    public void onChanged()
com.google.gson.internal.LinkedTreeMap$1:
    public int compare(java.lang.Comparable,java.lang.Comparable)
com.google.gson.internal.bind.TypeAdapters$25:
    public java.util.Currency read(com.google.gson.stream.JsonReader)
    public void write(com.google.gson.stream.JsonWriter,java.util.Currency)
androidx.coordinatorlayout.widget.ViewGroupUtils:
    public static void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState:
    public void setupAnimatorSet()
com.google.android.material.datepicker.DaysOfWeekAdapter:
    public java.lang.Integer getItem(int)
    public final int positionToDayOfWeek(int)
io.realm.internal.objectstore.OsObjectBuilder$6
com.google.android.material.bottomappbar.BottomAppBar$SavedState$1:
    public com.google.android.material.bottomappbar.BottomAppBar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public com.google.android.material.bottomappbar.BottomAppBar$SavedState createFromParcel(android.os.Parcel)
    public com.google.android.material.bottomappbar.BottomAppBar$SavedState[] newArray(int)
com.guilhermedaros.museunfc.Fragments.FragmentMain$OnFragmentInteractionListener
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments:
    public void setBundle(android.os.Bundle)
    public android.os.Bundle mBundle
androidx.appcompat.widget.SearchView$SavedState$1:
    public androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel)
    public androidx.appcompat.widget.SearchView$SavedState[] newArray(int)
androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener:
    public void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.constraintlayout.solver.Pools$Pool
androidx.transition.TransitionSet:
    public int getTransitionCount()
    public androidx.transition.TransitionSet setDuration(long)
    public androidx.transition.TransitionSet setStartDelay(long)
    public androidx.transition.TransitionSet setInterpolator(android.animation.TimeInterpolator)
    public androidx.transition.TransitionSet addTarget(android.view.View)
    public androidx.transition.TransitionSet addListener(androidx.transition.Transition$TransitionListener)
    public androidx.transition.TransitionSet removeTarget(android.view.View)
    public androidx.transition.TransitionSet removeListener(androidx.transition.Transition$TransitionListener)
    public final void addTransitionInternal(androidx.transition.Transition)
    public final void setupStartEndListeners()
com.google.gson.stream.JsonWriter:
    public final void setLenient(boolean)
    public boolean isLenient()
    public final boolean getSerializeNulls()
    public final com.google.gson.stream.JsonWriter open(int,java.lang.String)
    public final void newline()
    public final void beforeName()
    public java.lang.String indent
    public boolean htmlSafe
androidx.lifecycle.LifecycleRegistry$1
com.google.gson.Gson$5:
    public void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicLongArray)
    public java.util.concurrent.atomic.AtomicLongArray read(com.google.gson.stream.JsonReader)
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer$3:
    public final synthetic androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer this$1
androidx.appcompat.widget.TintResources:
    public void <init>(android.content.Context,android.content.res.Resources)
    public android.graphics.drawable.Drawable getDrawable(int)
    public final java.lang.ref.WeakReference mContextRef
io.realm.internal.SubscriptionAwareOsResults:
    public static synthetic boolean access$002(io.realm.internal.SubscriptionAwareOsResults,boolean)
    public static synthetic boolean access$102(io.realm.internal.SubscriptionAwareOsResults,boolean)
    public static synthetic long access$202(io.realm.internal.SubscriptionAwareOsResults,long)
    public static synthetic boolean access$100(io.realm.internal.SubscriptionAwareOsResults)
    public static synthetic boolean access$000(io.realm.internal.SubscriptionAwareOsResults)
    public static void access$300(io.realm.internal.SubscriptionAwareOsResults)
    public final void triggerDelayedChangeListener()
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1:
    public void write(com.google.gson.stream.JsonWriter,java.lang.Object)
    public void read(com.google.gson.stream.JsonReader,java.lang.Object)
    public boolean writeField(java.lang.Object)
    public final synthetic com.google.gson.internal.bind.ReflectiveTypeAdapterFactory this$0
androidx.recyclerview.widget.RecyclerView$Recycler:
    public void setViewCacheSize(int)
    public java.util.List getScrapList()
    public boolean validateViewHolderForOffsetPosition(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public android.view.View getViewForPosition(int)
    public android.view.View getViewForPosition(int,boolean)
    public void quickRecycleScrapView(android.view.View)
    public int getScrapCount()
    public android.view.View getScrapViewAt(int)
    public void clearScrap()
    public androidx.recyclerview.widget.RecyclerView$ViewHolder getChangedScrapViewForPosition(int)
    public androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int,boolean)
    public androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrCachedViewForId(long,int,boolean)
    public void dispatchViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean)
    public void offsetPositionRecordsForMove(int,int)
    public void offsetPositionRecordsForInsert(int,int)
    public void offsetPositionRecordsForRemove(int,int,boolean)
    public void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension)
    public void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool)
    public void viewRangeUpdate(int,int)
    public void markKnownViewsInvalid()
    public void clearOldPositions()
    public void markItemDecorInsetsDirty()
    public final boolean tryBindViewHolderByDeadline(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,long)
    public final void attachAccessibilityDelegateOnBind(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public final void invalidateDisplayListInt(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public final void invalidateDisplayListInt(android.view.ViewGroup,boolean)
    public androidx.recyclerview.widget.RecyclerView$ViewCacheExtension mViewCacheExtension
io.realm.Case:
    public boolean getValue()
com.google.android.material.datepicker.MaterialCalendarGridView$1:
    public final synthetic com.google.android.material.datepicker.MaterialCalendarGridView this$0
androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener
com.google.android.material.circularreveal.CircularRevealFrameLayout:
    public final com.google.android.material.circularreveal.CircularRevealHelper helper
androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo:
    public android.widget.ListView getListView()
androidx.loader.app.LoaderManagerImpl$LoaderViewModel:
    public static androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)
    public void markForRedelivery()
    public void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
    public boolean mCreatingLoader
androidx.constraintlayout.solver.widgets.WidgetContainer:
    public void add(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public void remove(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer getRootConstraintContainer()
    public void removeAllChildren()
androidx.appcompat.widget.ActionMenuView:
    public void <init>(android.content.Context)
    public boolean isOverflowReserved()
    public androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet)
    public androidx.appcompat.widget.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams()
    public void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback)
    public androidx.appcompat.view.menu.MenuBuilder peekMenu()
    public boolean showOverflowMenu()
    public boolean hideOverflowMenu()
    public boolean isOverflowMenuShowing()
    public boolean isOverflowMenuShowPending()
    public void dismissPopupMenus()
    public final void onMeasureExactFormat(int,int)
androidx.recyclerview.widget.ViewInfoStore:
    public void clear()
    public androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPostLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public void addToOldChangeHolders(long,androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public void addToAppearedInPreLayoutHolders(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public boolean isInPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public androidx.recyclerview.widget.RecyclerView$ViewHolder getFromOldChangeHolders(long)
    public void process(androidx.recyclerview.widget.ViewInfoStore$ProcessCallback)
    public void onDetach()
    public void onViewDetached(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.google.android.material.card.MaterialCardViewHelper
io.realm.internal.OsObject$OsObjectChangeSet:
    public final java.lang.String[] changedFields
    public final boolean deleted
androidx.lifecycle.ClassesInfoCache$CallbackInfo:
    public void invokeCallbacks(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object)
com.google.android.material.chip.ChipGroup:
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public static synthetic boolean access$300(com.google.android.material.chip.ChipGroup)
    public static synthetic boolean access$400(com.google.android.material.chip.ChipGroup)
    public static synthetic void access$500(com.google.android.material.chip.ChipGroup,int,boolean)
    public static void access$600(com.google.android.material.chip.ChipGroup,int,boolean)
    public static synthetic int access$700(com.google.android.material.chip.ChipGroup)
    public static synthetic boolean access$800(com.google.android.material.chip.ChipGroup)
    public static synthetic com.google.android.material.chip.ChipGroup$CheckedStateTracker access$1000(com.google.android.material.chip.ChipGroup)
    public void clearCheck()
    public int getIndexOfChip(android.view.View)
    public boolean isSingleSelection()
    public final void setCheckedId(int,boolean)
androidx.recyclerview.widget.LinearSmoothScroller:
    public void onStart()
    public void onSeekTargetStep(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action)
    public void onStop()
    public int calculateTimeForDeceleration(int)
    public int getHorizontalSnapPreference()
    public int getVerticalSnapPreference()
    public void updateActionForInterimTarget(androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action)
    public int calculateDyToMakeVisible(android.view.View,int)
    public int calculateDxToMakeVisible(android.view.View,int)
    public final float getSpeedPerPixel()
    public final int clampApplyScroll(int,int)
com.google.android.material.appbar.AppBarLayout$LayoutParams:
    public int getScrollFlags()
    public android.view.animation.Interpolator getScrollInterpolator()
    public boolean isCollapsible()
androidx.appcompat.widget.Toolbar$1:
    public boolean onMenuItemClick(android.view.MenuItem)
androidx.constraintlayout.solver.widgets.ResolutionAnchor:
    public void setType(int)
    public void update()
    public void setOpposite(androidx.constraintlayout.solver.widgets.ResolutionAnchor,float)
    public void setOpposite(androidx.constraintlayout.solver.widgets.ResolutionAnchor,int,androidx.constraintlayout.solver.widgets.ResolutionDimension)
    public float getResolvedValue()
    public float computedValue
    public float oppositeOffset
androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback:
    public abstract androidx.appcompat.view.menu.ShowableListMenu getPopup()
androidx.recyclerview.widget.SimpleItemAnimator:
    public boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public boolean animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public boolean animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public boolean animatePersistence(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public abstract boolean animateRemove(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public abstract boolean animateAdd(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public abstract boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int)
    public final void dispatchRemoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public final void dispatchMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public final void dispatchAddFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public final void dispatchChangeFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean)
    public final void dispatchRemoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public final void dispatchMoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public final void dispatchAddStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public final void dispatchChangeStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean)
    public void onRemoveStarting()
    public void onRemoveFinished()
    public void onAddStarting()
    public void onAddFinished()
    public void onMoveStarting()
    public void onMoveFinished()
    public void onChangeStarting()
    public void onChangeFinished()
com.google.gson.FieldAttributes:
    public final java.lang.reflect.Field field
androidx.core.provider.FontsContractCompat$5:
    public int compare(byte[],byte[])
com.google.gson.stream.JsonReader$1:
    public void promoteNameToValue(com.google.gson.stream.JsonReader)
androidx.core.view.accessibility.AccessibilityNodeProviderCompat:
    public java.lang.Object getProvider()
    public java.util.List findAccessibilityNodeInfosByText()
androidx.fragment.app.Fragment$OnStartEnterTransitionListener:
    public abstract void onStartEnterTransition()
    public abstract void startListening()
com.google.android.material.transformation.FabTransformationBehavior$3:
    public final synthetic com.google.android.material.transformation.FabTransformationBehavior this$0
com.google.gson.internal.ConstructorConstructor$3:
    public final synthetic com.google.gson.internal.ConstructorConstructor this$0
com.google.android.material.appbar.AppBarLayout$BaseOnOffsetChangedListener
androidx.appcompat.app.AlertDialog$Builder:
    public void <init>(android.content.Context,int)
    public android.content.Context getContext()
    public androidx.appcompat.app.AlertDialog$Builder setTitle(java.lang.CharSequence)
    public androidx.appcompat.app.AlertDialog$Builder setCustomTitle(android.view.View)
    public androidx.appcompat.app.AlertDialog$Builder setIcon(android.graphics.drawable.Drawable)
    public androidx.appcompat.app.AlertDialog$Builder setOnKeyListener(android.content.DialogInterface$OnKeyListener)
    public androidx.appcompat.app.AlertDialog$Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener)
    public androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener)
com.android.volley.toolbox.HttpClientStack$HttpPatch
io.realm.rx.RealmObservableFactory$3:
    public io.realm.rx.RealmObservableFactory$StrongReferenceCounter initialValue()
    public final synthetic io.realm.rx.RealmObservableFactory this$0
androidx.loader.app.LoaderManagerImpl$LoaderObserver:
    public abstract boolean hasDeliveredData()
    public abstract void reset()
    public abstract void dump(java.lang.String,java.io.PrintWriter)
com.android.volley.Cache$Entry:
    public boolean isExpired()
    public boolean refreshNeeded()
com.guilhermedaros.museunfc.Models.ResponseUsuario:
    public com.guilhermedaros.museunfc.Entities.Usuario data
androidx.core.graphics.TypefaceCompatBaseImpl:
    public static long getUniqueKey(android.graphics.Typeface)
    public androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry getFontFamily(android.graphics.Typeface)
    public final androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry findBestEntry(androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,int)
    public final void addFontFamily(android.graphics.Typeface,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry)
com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback
androidx.fragment.app.FragmentManagerImpl$1:
    public void handleOnBackPressed()
androidx.appcompat.app.AppCompatViewInflater:
    public static android.content.Context themifyContext(android.content.Context,android.util.AttributeSet,boolean,boolean)
    public final android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean)
    public androidx.appcompat.widget.AppCompatImageView createImageView(android.content.Context,android.util.AttributeSet)
    public androidx.appcompat.widget.AppCompatEditText createEditText(android.content.Context,android.util.AttributeSet)
    public androidx.appcompat.widget.AppCompatSpinner createSpinner(android.content.Context,android.util.AttributeSet)
    public androidx.appcompat.widget.AppCompatImageButton createImageButton(android.content.Context,android.util.AttributeSet)
    public androidx.appcompat.widget.AppCompatCheckedTextView createCheckedTextView(android.content.Context,android.util.AttributeSet)
    public androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView createMultiAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
    public androidx.appcompat.widget.AppCompatRatingBar createRatingBar(android.content.Context,android.util.AttributeSet)
    public androidx.appcompat.widget.AppCompatSeekBar createSeekBar(android.content.Context,android.util.AttributeSet)
    public androidx.appcompat.widget.AppCompatToggleButton createToggleButton(android.content.Context,android.util.AttributeSet)
    public final android.view.View createViewFromTag(android.content.Context,java.lang.String,android.util.AttributeSet)
    public final void checkOnClickListener(android.view.View,android.util.AttributeSet)
androidx.recyclerview.widget.RecyclerView$ViewHolder:
    public void flagRemovedAndOffsetPosition(int,int,boolean)
    public void saveOldPosition()
    public final int getAdapterPosition()
    public final int getOldPosition()
    public final long getItemId()
    public final int getItemViewType()
    public void unScrap()
    public void clearTmpDetachFlag()
    public void setScrapContainer(androidx.recyclerview.widget.RecyclerView$Recycler,boolean)
    public boolean needsUpdate()
    public boolean isAdapterPositionUnknown()
    public void clearPayload()
    public void onEnteredHiddenState(androidx.recyclerview.widget.RecyclerView)
    public void onLeftHiddenState(androidx.recyclerview.widget.RecyclerView)
    public boolean shouldBeKeptAsChild()
    public boolean doesTransientStatePreventRecycling()
    public final void createPayloadsIfNeeded()
androidx.constraintlayout.solver.widgets.Optimizer:
    public static void checkMatchParent(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public static void analyze(int,androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public static boolean applyChainOptimized(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.LinearSystem,int,int,androidx.constraintlayout.solver.widgets.ChainHead)
androidx.fragment.app.FragmentContainer:
    public androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)
androidx.cardview.widget.CardViewApi17Impl
androidx.lifecycle.LifecycleRegistry:
    public static androidx.lifecycle.Lifecycle$Event downEvent(androidx.lifecycle.Lifecycle$State)
    public void markState(androidx.lifecycle.Lifecycle$State)
    public void setCurrentState(androidx.lifecycle.Lifecycle$State)
    public void removeObserver(androidx.lifecycle.LifecycleObserver)
    public androidx.lifecycle.Lifecycle$State getCurrentState()
    public final boolean isSynced()
    public final void pushParentState(androidx.lifecycle.Lifecycle$State)
    public final void forwardPass(androidx.lifecycle.LifecycleOwner)
    public final void backwardPass(androidx.lifecycle.LifecycleOwner)
androidx.appcompat.widget.ActionBarContextView:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public void closeMode()
    public boolean showOverflowMenu()
    public boolean isTitleOptional()
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealProperty:
    public com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo get(com.google.android.material.circularreveal.CircularRevealWidget)
    public void set(com.google.android.material.circularreveal.CircularRevealWidget,com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
androidx.fragment.app.FragmentHostCallback:
    public void <init>(android.app.Activity,android.content.Context,android.os.Handler,int)
    public void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
    public boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment)
    public android.view.LayoutInflater onGetLayoutInflater()
    public abstract java.lang.Object onGetHost()
    public void onSupportInvalidateOptionsMenu()
    public boolean onHasWindowAnimations()
    public int onGetWindowAnimations()
    public android.view.View onFindViewById(int)
    public boolean onHasView()
    public android.app.Activity getActivity()
    public android.content.Context getContext()
    public android.os.Handler getHandler()
    public void onAttachFragment(androidx.fragment.app.Fragment)
com.google.android.material.bottomsheet.BottomSheetBehavior$3:
    public androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,com.google.android.material.internal.ViewUtils$RelativePadding)
androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback:
    public androidx.appcompat.view.menu.ShowableListMenu getPopup()
androidx.fragment.app.FragmentTransaction:
    public androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment,java.lang.String)
    public androidx.fragment.app.FragmentTransaction detach(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction attach(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentTransaction disallowAddToBackStack()
    public abstract void commitNowAllowingStateLoss()
    public boolean mAllowAddToBackStack
com.google.gson.internal.bind.TreeTypeAdapter:
    public final com.google.gson.TypeAdapter delegate()
com.google.android.material.stateful.ExtendableSavedState:
    public void <init>(android.os.Parcelable)
    public void <init>(android.os.Parcel,java.lang.ClassLoader)
com.google.android.material.datepicker.SmoothCalendarLayoutManager$1:
    public final synthetic com.google.android.material.datepicker.SmoothCalendarLayoutManager this$0
androidx.lifecycle.ViewModelProvider$Factory:
    public abstract androidx.lifecycle.ViewModel create(java.lang.Class)
androidx.core.content.res.GrowingArrayUtils
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1:
    public final synthetic androidx.appcompat.widget.AppCompatSpinner val$this$0
androidx.appcompat.view.menu.MenuItemWrapperICS:
    public void setExclusiveCheckable(boolean)
com.google.gson.internal.bind.ObjectTypeAdapter$2
androidx.core.view.ViewCompat$5:
    public java.lang.Boolean frameworkGet(android.view.View)
    public void frameworkSet(android.view.View,java.lang.Boolean)
    public boolean shouldUpdate(java.lang.Boolean,java.lang.Boolean)
androidx.core.text.ICUCompat
io.realm.internal.OsObject$Callback:
    public void onCalled(io.realm.internal.OsObject$ObjectObserverPair,java.lang.Object)
    public final io.realm.ObjectChangeSet createChangeSet()
com.google.gson.internal.reflect.ReflectionAccessor:
    public static com.google.gson.internal.reflect.ReflectionAccessor getInstance()
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry:
    public androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] getEntries()
com.google.android.material.internal.ViewUtils$OnApplyWindowInsetsListener:
    public abstract androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,com.google.android.material.internal.ViewUtils$RelativePadding)
androidx.transition.ViewGroupOverlayImpl
androidx.fragment.app.FragmentManager:
    public abstract androidx.fragment.app.FragmentTransaction beginTransaction()
    public abstract java.util.List getFragments()
    public void setFragmentFactory(androidx.fragment.app.FragmentFactory)
    public androidx.fragment.app.FragmentFactory getFragmentFactory()
androidx.core.graphics.drawable.WrappedDrawableApi14:
    public void setTint(int)
    public void setTintList(android.content.res.ColorStateList)
    public void setTintMode(android.graphics.PorterDuff$Mode)
    public final void updateLocalState(android.content.res.Resources)
    public final androidx.core.graphics.drawable.WrappedDrawableState mutateConstantState()
androidx.fragment.app.FragmentTransition:
    public static androidx.fragment.app.FragmentTransitionImpl resolveSupportImpl()
    public static androidx.collection.ArrayMap calculateNameOverrides(int,java.util.ArrayList,java.util.ArrayList,int,int)
    public static void configureTransitionsReordered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap)
    public static void replaceHide(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList)
    public static void configureTransitionsOrdered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap)
    public static void scheduleTargetChange(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,androidx.fragment.app.Fragment,android.view.View,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList)
    public static java.lang.Object configureSharedElementsReordered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object)
    public static java.lang.Object configureSharedElementsOrdered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object)
    public static java.lang.String findKeyForValue(androidx.collection.ArrayMap,java.lang.String)
    public static void retainValues(androidx.collection.ArrayMap,androidx.collection.ArrayMap)
    public static void calculateFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean)
    public static void calculatePopFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean)
    public static androidx.fragment.app.FragmentTransition$FragmentContainerTransition ensureContainer(androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.util.SparseArray,int)
com.google.android.material.textfield.ClearTextEndIconDelegate:
    public static boolean hasText(android.text.Editable)
    public static boolean access$000(android.text.Editable)
    public static synthetic void access$100(com.google.android.material.textfield.ClearTextEndIconDelegate,boolean)
    public static synthetic android.view.View$OnFocusChangeListener access$200(com.google.android.material.textfield.ClearTextEndIconDelegate)
    public static synthetic android.text.TextWatcher access$300(com.google.android.material.textfield.ClearTextEndIconDelegate)
    public final void initAnimators()
    public final varargs android.animation.ValueAnimator getAlphaAnimator(float[])
    public final android.animation.ValueAnimator getScaleAnimator()
androidx.appcompat.widget.AppCompatSeekBar:
    public void <init>(android.content.Context,android.util.AttributeSet,int)
androidx.arch.core.executor.ArchTaskExecutor$1
com.google.android.material.datepicker.CalendarConstraints:
    public void <init>(com.google.android.material.datepicker.Month,com.google.android.material.datepicker.Month,com.google.android.material.datepicker.Month,com.google.android.material.datepicker.CalendarConstraints$DateValidator)
    public com.google.android.material.datepicker.CalendarConstraints$DateValidator getDateValidator()
    public com.google.android.material.datepicker.Month getStart()
    public com.google.android.material.datepicker.Month getEnd()
    public com.google.android.material.datepicker.Month getOpenAt()
    public int getMonthSpan()
    public int getYearSpan()
    public com.google.android.material.datepicker.Month clamp(com.google.android.material.datepicker.Month)
io.realm.internal.objectstore.OsObjectBuilder$3
androidx.core.widget.NestedScrollView$OnScrollChangeListener:
    public abstract void onScrollChange(androidx.core.widget.NestedScrollView,int,int,int,int)
com.google.gson.internal.bind.TypeAdapters$1:
    public void write(java.lang.Class)
    public java.lang.Class read()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer:
    public static float cross(float,float,float,float)
    public void draw(android.graphics.Canvas,int,int,android.graphics.ColorFilter)
    public boolean isStateful()
    public boolean onStateChanged(int[])
    public final void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)
    public final float getMatrixScale(android.graphics.Matrix)
io.realm.RealmCache:
    public static void synchronizeInitialSubscriptionsIfNeeded(io.realm.Realm,boolean)
    public static void invokeWithGlobalRefCount(io.realm.RealmConfiguration,io.realm.RealmCache$Callback)
    public static void copyAssetFileIfNeeded(io.realm.RealmConfiguration)
    public static void copyFileIfNeeded(java.lang.String,java.io.File)
    public synchronized void release(io.realm.BaseRealm)
    public io.realm.RealmConfiguration getConfiguration()
    public void leak()
    public final synchronized io.realm.BaseRealm doCreateRealmOrGetFromCache(io.realm.RealmConfiguration,java.lang.Class,io.realm.internal.OsSharedRealm$VersionID)
    public final synchronized void doInvokeWithGlobalRefCount(io.realm.RealmCache$Callback)
    public final int getTotalLiveRealmGlobalRefCount()
androidx.constraintlayout.solver.SolverVariable:
    public static void increaseErrorId()
    public static void <clinit>()
    public void setType(androidx.constraintlayout.solver.SolverVariable$Type)
    public static int uniqueSlackId
    public static int uniqueUnrestrictedId
    public static int uniqueConstantId
    public static int uniqueId
androidx.appcompat.widget.AppCompatSpinner$SavedState$1:
    public androidx.appcompat.widget.AppCompatSpinner$SavedState createFromParcel(android.os.Parcel)
    public androidx.appcompat.widget.AppCompatSpinner$SavedState[] newArray(int)
androidx.recyclerview.widget.OrientationHelper:
    public void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager)
    public static androidx.recyclerview.widget.OrientationHelper createHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager)
    public static androidx.recyclerview.widget.OrientationHelper createVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager)
    public void onLayoutComplete()
com.android.volley.ExecutorDelivery:
    public void postResponse(com.android.volley.Request,com.android.volley.Response)
    public void postError(com.android.volley.Request,com.android.volley.VolleyError)
io.realm.internal.util.Pair:
    public final boolean equals(java.lang.Object,java.lang.Object)
com.google.android.material.floatingactionbutton.BorderDrawable
io.realm.internal.OsResults$Iterator:
    public void invalidate()
androidx.core.math.MathUtils
androidx.core.os.TraceCompat:
    public static long sTraceTagApp
    public static java.lang.reflect.Method sIsTagEnabledMethod
    public static java.lang.reflect.Method sAsyncTraceBeginMethod
    public static java.lang.reflect.Method sAsyncTraceEndMethod
    public static java.lang.reflect.Method sTraceCounterMethod
androidx.core.app.ActivityCompat:
    public static androidx.core.app.ActivityCompat$PermissionCompatDelegate sDelegate
androidx.appcompat.app.AlertController$AlertParams:
    public void apply(androidx.appcompat.app.AlertController)
    public final void createListView(androidx.appcompat.app.AlertController)
    public java.lang.CharSequence mMessage
    public java.lang.CharSequence mPositiveButtonText
    public android.graphics.drawable.Drawable mPositiveButtonIcon
    public android.content.DialogInterface$OnClickListener mPositiveButtonListener
    public java.lang.CharSequence mNegativeButtonText
    public android.graphics.drawable.Drawable mNegativeButtonIcon
    public android.content.DialogInterface$OnClickListener mNegativeButtonListener
    public java.lang.CharSequence mNeutralButtonText
    public android.graphics.drawable.Drawable mNeutralButtonIcon
    public android.content.DialogInterface$OnClickListener mNeutralButtonListener
    public java.lang.CharSequence[] mItems
    public int mViewLayoutResId
    public android.view.View mView
    public int mViewSpacingLeft
    public int mViewSpacingTop
    public int mViewSpacingRight
    public int mViewSpacingBottom
    public boolean[] mCheckedItems
    public boolean mIsMultiChoice
    public android.content.DialogInterface$OnMultiChoiceClickListener mOnCheckboxClickListener
    public android.database.Cursor mCursor
    public java.lang.String mLabelColumn
    public java.lang.String mIsCheckedColumn
    public android.widget.AdapterView$OnItemSelectedListener mOnItemSelectedListener
    public androidx.appcompat.app.AlertController$AlertParams$OnPrepareListViewListener mOnPrepareListViewListener
    public boolean mRecycleOnMeasure
androidx.recyclerview.widget.StaggeredGridLayoutManager:
    public void setSpanCount(int)
    public void setOrientation(int)
    public void setReverseLayout(boolean)
    public void invalidateSpanAssignments()
    public void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo)
    public boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo)
    public void updateMeasureSpecs(int)
    public int findFirstVisibleItemPositionInt()
    public boolean areAllEndsEqual()
    public boolean areAllStartsEqual()
    public final void createOrientationHelpers()
    public final boolean checkSpanForGap(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span)
    public final void repositionToWrapContentIfNecessary()
    public final void applyPendingSavedState(androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo)
    public final boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo)
    public final void measureChildWithDecorationsAndMargin(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,boolean)
    public final androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromEnd(int)
    public final androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromStart(int)
    public final void attachViewToSpans(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,androidx.recyclerview.widget.LayoutState)
    public final void appendViewToAllSpans(android.view.View)
    public final void prependViewToAllSpans(android.view.View)
    public final int getMaxStart(int)
    public final int getMinEnd(int)
    public final androidx.recyclerview.widget.StaggeredGridLayoutManager$Span getNextSpan(androidx.recyclerview.widget.LayoutState)
    public final int findFirstReferenceChildPosition(int)
    public final int findLastReferenceChildPosition(int)
    public final int convertFocusDirectionToLayoutDirection(int)
androidx.core.util.ObjectsCompat
com.google.android.material.shape.ShapeAppearanceModel$Builder:
    public static synthetic com.google.android.material.shape.CornerTreatment access$100(com.google.android.material.shape.ShapeAppearanceModel$Builder)
    public static synthetic com.google.android.material.shape.CornerTreatment access$200(com.google.android.material.shape.ShapeAppearanceModel$Builder)
    public static synthetic com.google.android.material.shape.CornerTreatment access$300(com.google.android.material.shape.ShapeAppearanceModel$Builder)
    public static synthetic com.google.android.material.shape.CornerTreatment access$400(com.google.android.material.shape.ShapeAppearanceModel$Builder)
    public static synthetic com.google.android.material.shape.CornerSize access$500(com.google.android.material.shape.ShapeAppearanceModel$Builder)
    public static synthetic com.google.android.material.shape.CornerSize access$600(com.google.android.material.shape.ShapeAppearanceModel$Builder)
    public static synthetic com.google.android.material.shape.CornerSize access$700(com.google.android.material.shape.ShapeAppearanceModel$Builder)
    public static synthetic com.google.android.material.shape.CornerSize access$800(com.google.android.material.shape.ShapeAppearanceModel$Builder)
    public static synthetic com.google.android.material.shape.EdgeTreatment access$900(com.google.android.material.shape.ShapeAppearanceModel$Builder)
    public static synthetic com.google.android.material.shape.EdgeTreatment access$1000(com.google.android.material.shape.ShapeAppearanceModel$Builder)
    public static synthetic com.google.android.material.shape.EdgeTreatment access$1100(com.google.android.material.shape.ShapeAppearanceModel$Builder)
    public static synthetic com.google.android.material.shape.EdgeTreatment access$1200(com.google.android.material.shape.ShapeAppearanceModel$Builder)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setAllCornerSizes(float)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCornerSize(com.google.android.material.shape.CornerSize)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCornerSize(com.google.android.material.shape.CornerSize)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCornerSize(com.google.android.material.shape.CornerSize)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCornerSize(com.google.android.material.shape.CornerSize)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCorner(int,com.google.android.material.shape.CornerSize)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setTopLeftCorner(com.google.android.material.shape.CornerTreatment)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCorner(int,com.google.android.material.shape.CornerSize)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setTopRightCorner(com.google.android.material.shape.CornerTreatment)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCorner(int,com.google.android.material.shape.CornerSize)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomRightCorner(com.google.android.material.shape.CornerTreatment)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCorner(int,com.google.android.material.shape.CornerSize)
    public com.google.android.material.shape.ShapeAppearanceModel$Builder setBottomLeftCorner(com.google.android.material.shape.CornerTreatment)
io.realm.internal.objectstore.OsObjectBuilder:
    public static void <clinit>()
    public void addBoolean(long,java.lang.Boolean)
    public void updateExistingObject()
    public static io.realm.internal.objectstore.OsObjectBuilder$ItemCallback objectItemCallback
    public static io.realm.internal.objectstore.OsObjectBuilder$ItemCallback stringItemCallback
    public static io.realm.internal.objectstore.OsObjectBuilder$ItemCallback byteItemCallback
    public static io.realm.internal.objectstore.OsObjectBuilder$ItemCallback shortItemCallback
    public static io.realm.internal.objectstore.OsObjectBuilder$ItemCallback integerItemCallback
    public static io.realm.internal.objectstore.OsObjectBuilder$ItemCallback longItemCallback
    public static io.realm.internal.objectstore.OsObjectBuilder$ItemCallback booleanItemCallback
    public static io.realm.internal.objectstore.OsObjectBuilder$ItemCallback floatItemCallback
    public static io.realm.internal.objectstore.OsObjectBuilder$ItemCallback doubleItemCallback
    public static io.realm.internal.objectstore.OsObjectBuilder$ItemCallback dateItemCallback
    public static io.realm.internal.objectstore.OsObjectBuilder$ItemCallback byteArrayItemCallback
    public static io.realm.internal.objectstore.OsObjectBuilder$ItemCallback mutableRealmIntegerItemCallback
androidx.recyclerview.widget.RecyclerView$State:
    public void prepareForNestedPrefetch(androidx.recyclerview.widget.RecyclerView$Adapter)
    public boolean isPreLayout()
    public boolean willRunPredictiveAnimations()
    public int getTargetScrollPosition()
    public boolean hasTargetScrollPosition()
    public android.util.SparseArray mData
    public int mRemainingScrollVertical
com.google.android.material.card.MaterialCardView:
    public static synthetic float access$001(com.google.android.material.card.MaterialCardView)
    public boolean isDragged()
    public boolean isCheckable()
    public final void forceRippleRedrawIfNeeded()
    public final com.google.android.material.card.MaterialCardViewHelper cardViewHelper
    public boolean isParentCardViewDoneInitializing
    public static final int DEF_STYLE_RES
com.google.android.material.transformation.FabTransformationSheetBehavior:
    public com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec onCreateMotionSpec(android.content.Context,boolean)
    public final void updateImportantForAccessibility(android.view.View,boolean)
com.google.android.material.shape.ShapeAppearanceModel$CornerSizeUnaryOperator
androidx.transition.TransitionManager:
    public static void sceneChangeRunTransition(android.view.ViewGroup,androidx.transition.Transition)
    public static void sceneChangeSetup(android.view.ViewGroup,androidx.transition.Transition)
    public static void beginDelayedTransition(android.view.ViewGroup,androidx.transition.Transition)
com.google.gson.internal.bind.TimeTypeAdapter:
    public synchronized java.sql.Time read(com.google.gson.stream.JsonReader)
    public synchronized void write(com.google.gson.stream.JsonWriter,java.sql.Time)
com.google.gson.Gson$2:
    public java.lang.Float read(com.google.gson.stream.JsonReader)
    public void write(com.google.gson.stream.JsonWriter,java.lang.Number)
    public final synthetic com.google.gson.Gson this$0
com.google.gson.internal.bind.JsonTreeWriter:
    public com.google.gson.JsonElement get()
androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14
com.jaredrummler.materialspinner.MaterialSpinnerBaseAdapter:
    public java.lang.String getItemText(int)
    public int getSelectedIndex()
    public void notifyItemSelected(int)
    public void setHintEnabled(boolean)
    public boolean isHintEnabled()
    public com.jaredrummler.materialspinner.MaterialSpinnerBaseAdapter setTextColor(int)
    public com.jaredrummler.materialspinner.MaterialSpinnerBaseAdapter setBackgroundSelector(int)
com.google.android.material.appbar.AppBarLayout$BaseBehavior:
    public static android.view.View getAppBarChildOnOffset(com.google.android.material.appbar.AppBarLayout,int)
    public static synthetic int access$000(com.google.android.material.appbar.AppBarLayout$BaseBehavior)
    public void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int)
    public boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,int,int)
    public boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int)
    public boolean canDragView(com.google.android.material.appbar.AppBarLayout)
    public void onFlingFinished(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout)
    public int getMaxDragOffset(com.google.android.material.appbar.AppBarLayout)
    public int getScrollRangeForDragFling(com.google.android.material.appbar.AppBarLayout)
    public int setHeaderTopBottomOffset(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,int)
    public android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout)
    public void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.os.Parcelable)
    public int getScrollRangeForDragFling(android.view.View)
    public int getMaxDragOffset(android.view.View)
    public boolean canDragView(android.view.View)
    public void onFlingFinished(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)
    public final boolean canScrollChildren(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View)
    public final void animateOffsetWithDuration(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int)
    public final int getChildIndexOnOffset(com.google.android.material.appbar.AppBarLayout,int)
    public final void addAccessibilityScrollActions(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View)
    public final void addActionToExpand(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat,boolean)
    public final int interpolateOffset(com.google.android.material.appbar.AppBarLayout,int)
    public final boolean shouldJumpElevationState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout)
    public com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback onDragCallback
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver:
    public void onChanged()
io.realm.RealmCache$RealmCacheType:
    public static io.realm.RealmCache$RealmCacheType valueOf(java.lang.Class)
com.getkeepsafe.relinker.elf.Dynamic32Structure
com.google.gson.internal.ConstructorConstructor$1:
    public final synthetic com.google.gson.internal.ConstructorConstructor this$0
androidx.recyclerview.widget.ChildHelper$Callback:
    public abstract int getChildCount()
    public abstract void addView(android.view.View,int)
    public abstract int indexOfChild(android.view.View)
    public abstract void removeViewAt(int)
    public abstract android.view.View getChildAt(int)
    public abstract void removeAllViews()
    public abstract androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View)
    public abstract void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams)
    public abstract void detachViewFromParent(int)
    public abstract void onEnteredHiddenState(android.view.View)
    public abstract void onLeftHiddenState(android.view.View)
androidx.cardview.widget.CardView:
    public int mUserSetMinWidth
    public int mUserSetMinHeight
    public final android.graphics.Rect mContentPadding
    public final androidx.cardview.widget.CardViewDelegate mCardViewDelegate
    public static final int[] COLOR_BACKGROUND_ATTR
com.google.gson.internal.bind.TypeAdapters$13:
    public java.lang.Number read(com.google.gson.stream.JsonReader)
    public void write(com.google.gson.stream.JsonWriter,java.lang.Number)
com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter:
    public java.util.Map read(com.google.gson.stream.JsonReader)
    public void write(com.google.gson.stream.JsonWriter,java.util.Map)
    public final java.lang.String keyToString(com.google.gson.JsonElement)
io.realm.internal.ObservableCollection$Callback:
    public void onCalled(io.realm.internal.ObservableCollection$CollectionObserverPair,java.lang.Object)
androidx.appcompat.widget.ActionMenuPresenter:
    public static synthetic androidx.appcompat.view.menu.MenuBuilder access$000(androidx.appcompat.widget.ActionMenuPresenter)
    public static synthetic androidx.appcompat.view.menu.MenuBuilder access$100(androidx.appcompat.widget.ActionMenuPresenter)
    public static synthetic androidx.appcompat.view.menu.MenuView access$200(androidx.appcompat.widget.ActionMenuPresenter)
    public static synthetic androidx.appcompat.view.menu.MenuBuilder access$300(androidx.appcompat.widget.ActionMenuPresenter)
    public static synthetic androidx.appcompat.view.menu.MenuBuilder access$400(androidx.appcompat.widget.ActionMenuPresenter)
    public static synthetic androidx.appcompat.view.menu.MenuView access$500(androidx.appcompat.widget.ActionMenuPresenter)
    public void onConfigurationChanged()
    public void setReserveOverflow(boolean)
    public void setExpandedActionViewsExclusive(boolean)
    public void setOverflowIcon(android.graphics.drawable.Drawable)
    public android.graphics.drawable.Drawable getOverflowIcon()
    public androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
    public void bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)
    public boolean shouldIncludeItem(int,androidx.appcompat.view.menu.MenuItemImpl)
    public boolean filterLeftoverView(android.view.ViewGroup,int)
    public boolean isOverflowMenuShowPending()
    public void setMenuView(androidx.appcompat.widget.ActionMenuView)
    public final android.view.View findViewForItem(android.view.MenuItem)
    public boolean mMaxItemsSet
    public boolean mStrictWidthLimit
    public boolean mWidthLimitSet
com.getkeepsafe.relinker.elf.Program64Header
androidx.constraintlayout.solver.Metrics
androidx.transition.TransitionManager$MultiListener:
    public final void removeListeners()
com.google.android.material.appbar.HeaderScrollingViewBehavior:
    public static int resolveGravity(int)
    public boolean shouldHeaderOverlapScrollingChild()
    public abstract float getOverlapRatioForOffset(android.view.View)
    public abstract android.view.View findFirstDependency(java.util.List)
    public int getScrollRange(android.view.View)
    public final int getVerticalLayoutGap()
    public final void setOverlayTop(int)
    public final int getOverlayTop()
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView:
    public final boolean isOutOfBounds(int,int)
androidx.fragment.app.BackStackRecord:
    public void dump(java.lang.String,java.io.PrintWriter)
    public androidx.fragment.app.FragmentTransaction detach(androidx.fragment.app.Fragment)
    public void runOnCommitRunnables()
    public void commitNowAllowingStateLoss()
    public androidx.fragment.app.Fragment expandOps(java.util.ArrayList,androidx.fragment.app.Fragment)
    public androidx.fragment.app.Fragment trackAddedFragmentsInPop(java.util.ArrayList,androidx.fragment.app.Fragment)
    public boolean isPostponed()
    public void setOnStartPostponedListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener)
    public java.lang.String getName()
    public boolean mCommitted
com.android.volley.toolbox.JsonRequest:
    public void deliverResponse(java.lang.Object)
    public java.lang.String getPostBodyContentType()
    public byte[] getPostBody()
    public java.lang.String getBodyContentType()
io.realm.internal.android.AndroidCapabilities:
    public static boolean isIntentServiceThread()
    public static void <clinit>()
    public final boolean hasLooper()
    public static boolean EMULATE_MAIN_THREAD
com.google.gson.internal.JsonReaderInternalAccess:
    public abstract void promoteNameToValue(com.google.gson.stream.JsonReader)
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo:
    public androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom1(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public int right
    public int bottom
io.realm.RealmList$RealmItr:
    public void <init>(io.realm.RealmList)
com.jaredrummler.materialspinner.Utils
com.google.android.material.internal.CheckableImageButton:
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public boolean isCheckable()
com.google.android.material.textfield.DropdownMenuEndIconDelegate:
    public static synthetic boolean access$202(com.google.android.material.textfield.DropdownMenuEndIconDelegate,boolean)
    public static synthetic android.view.accessibility.AccessibilityManager access$300(com.google.android.material.textfield.DropdownMenuEndIconDelegate)
    public static void access$500(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.AutoCompleteTextView)
    public static void access$600(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.AutoCompleteTextView)
    public static void access$700(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.AutoCompleteTextView)
    public static synthetic android.text.TextWatcher access$800(com.google.android.material.textfield.DropdownMenuEndIconDelegate)
    public static synthetic com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate access$900(com.google.android.material.textfield.DropdownMenuEndIconDelegate)
    public static synthetic android.view.View$OnFocusChangeListener access$1000(com.google.android.material.textfield.DropdownMenuEndIconDelegate)
    public static synthetic boolean access$1100()
    public static synthetic boolean access$1200(com.google.android.material.textfield.DropdownMenuEndIconDelegate)
    public static synthetic long access$1302(com.google.android.material.textfield.DropdownMenuEndIconDelegate,long)
    public static synthetic boolean access$1400(com.google.android.material.textfield.DropdownMenuEndIconDelegate)
    public static synthetic android.animation.ValueAnimator access$1500(com.google.android.material.textfield.DropdownMenuEndIconDelegate)
    public static void <clinit>()
    public final void showHideDropdown(android.widget.AutoCompleteTextView)
    public final void setPopupBackground(android.widget.AutoCompleteTextView)
    public final void addRippleEffect(android.widget.AutoCompleteTextView)
    public final void addRippleEffectOnOutlinedLayout(android.widget.AutoCompleteTextView,int,int[][],com.google.android.material.shape.MaterialShapeDrawable)
    public final void addRippleEffectOnFilledLayout(android.widget.AutoCompleteTextView,int,int[][],com.google.android.material.shape.MaterialShapeDrawable)
    public final void setUpDropdownShowHideBehavior(android.widget.AutoCompleteTextView)
    public final android.widget.AutoCompleteTextView castAutoCompleteTextViewOrThrow(android.widget.EditText)
    public final void setEndIconChecked(boolean)
    public final void initAnimators()
    public final varargs android.animation.ValueAnimator getAlphaAnimator(int,float[])
    public static final boolean IS_LOLLIPOP
org.slf4j.event.Level
androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache:
    public static int generateCacheKey(int,android.graphics.PorterDuff$Mode)
    public android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode)
    public android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter)
io.realm.internal.PendingRow:
    public void executeQuery()
    public final void clearPendingCollection()
    public final void notifyFrontEnd()
    public io.realm.internal.OsSharedRealm sharedRealm
    public io.realm.RealmChangeListener listener
    public java.lang.ref.WeakReference frontEndRef
    public boolean returnCheckedRow
androidx.appcompat.view.menu.MenuPopupHelper:
    public void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int)
    public void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)
    public void setAnchorView(android.view.View)
    public void setForceShowIcon(boolean)
    public void setGravity(int)
    public void show()
    public boolean tryShow(int,int)
    public void dismiss()
    public final androidx.appcompat.view.menu.MenuPopup createPopup()
androidx.appcompat.app.AlertController$AlertParams$4
androidx.core.view.ViewPropertyAnimatorCompat$1:
    public final synthetic androidx.core.view.ViewPropertyAnimatorCompat this$0
com.google.android.material.textfield.PasswordToggleEndIconDelegate:
    public static boolean isInputTypePassword(android.widget.EditText)
    public static synthetic android.text.TextWatcher access$100(com.google.android.material.textfield.PasswordToggleEndIconDelegate)
    public final boolean hasPasswordTransformation()
com.google.android.material.shape.ShapeAppearancePathProvider:
    public void calculatePath(com.google.android.material.shape.ShapeAppearanceModel,float,android.graphics.RectF,android.graphics.Path)
    public final void setCornerPathAndTransform(com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec,int)
    public final void setEdgePathAndTransform(int)
    public final void appendCornerPath(com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec,int)
    public final void appendEdgePath(com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec,int)
    public final float getEdgeCenterForIndex(android.graphics.RectF,int)
    public final com.google.android.material.shape.CornerTreatment getCornerTreatmentForIndex(int,com.google.android.material.shape.ShapeAppearanceModel)
    public final com.google.android.material.shape.CornerSize getCornerSizeForIndex(int,com.google.android.material.shape.ShapeAppearanceModel)
    public final com.google.android.material.shape.EdgeTreatment getEdgeTreatmentForIndex(int,com.google.android.material.shape.ShapeAppearanceModel)
    public final void getCoordinatesOfCorner(int,android.graphics.RectF,android.graphics.PointF)
    public final float angleOfEdge(int)
com.google.android.material.internal.ViewUtils
androidx.appcompat.widget.TooltipCompat
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton:
    public static synthetic com.google.android.material.floatingactionbutton.MotionStrategy access$000(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
    public static synthetic com.google.android.material.floatingactionbutton.MotionStrategy access$100(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
    public static synthetic com.google.android.material.floatingactionbutton.MotionStrategy access$300(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
    public static synthetic com.google.android.material.floatingactionbutton.MotionStrategy access$400(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
    public final void performMotion(com.google.android.material.floatingactionbutton.MotionStrategy,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback)
    public final boolean shouldAnimateVisibilityChange()
    public final androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior behavior
    public static final int DEF_STYLE_RES
    public static final android.util.Property WIDTH
    public static final android.util.Property HEIGHT
com.google.android.material.animation.DrawableAlphaProperty:
    public java.lang.Integer get(android.graphics.drawable.Drawable)
    public void set(android.graphics.drawable.Drawable,java.lang.Integer)
androidx.appcompat.widget.ResourceManagerInternal:
    public static void installDefaultInflateDelegates(androidx.appcompat.widget.ResourceManagerInternal)
    public static long createCacheKey(android.util.TypedValue)
    public static android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int[])
    public static boolean isVectorDrawable(android.graphics.drawable.Drawable)
    public synchronized void setHooks(androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks)
    public synchronized void onConfigurationChanged(android.content.Context)
    public synchronized android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context,androidx.appcompat.widget.VectorEnabledTintResources,int)
    public android.graphics.PorterDuff$Mode getTintMode(int)
    public final android.content.res.ColorStateList getTintListFromCache(android.content.Context,int)
    public final void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList)
    public final void checkVectorDrawableSetup(android.content.Context)
com.google.android.material.appbar.AppBarLayout$BaseBehavior$3:
    public final synthetic com.google.android.material.appbar.AppBarLayout$BaseBehavior this$0
androidx.fragment.app.FragmentTransitionCompat21$2:
    public final synthetic androidx.fragment.app.FragmentTransitionCompat21 this$0
io.realm.com_guilhermedaros_museunfc_Entities_ItemMuseuRealmProxy:
    public static io.realm.internal.OsObjectSchemaInfo createExpectedObjectSchemaInfo()
    public static io.realm.internal.OsObjectSchemaInfo getExpectedObjectSchemaInfo()
    public static io.realm.com_guilhermedaros_museunfc_Entities_ItemMuseuRealmProxy newProxyInstance(io.realm.BaseRealm,io.realm.internal.Row)
    public static com.guilhermedaros.museunfc.Entities.ItemMuseu copy(io.realm.Realm,io.realm.com_guilhermedaros_museunfc_Entities_ItemMuseuRealmProxy$ItemMuseuColumnInfo,com.guilhermedaros.museunfc.Entities.ItemMuseu,java.util.Map,java.util.Set)
    public static com.guilhermedaros.museunfc.Entities.ItemMuseu update(io.realm.Realm,io.realm.com_guilhermedaros_museunfc_Entities_ItemMuseuRealmProxy$ItemMuseuColumnInfo,com.guilhermedaros.museunfc.Entities.ItemMuseu,com.guilhermedaros.museunfc.Entities.ItemMuseu,java.util.Set)
androidx.core.app.TaskStackBuilder
androidx.coordinatorlayout.widget.CoordinatorLayout$ViewElevationComparator:
    public int compare(android.view.View,android.view.View)
androidx.lifecycle.LiveData$LifecycleBoundObserver:
    public void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer)
    public boolean isAttachedTo(androidx.lifecycle.LifecycleOwner)
    public void detachObserver()
io.realm.internal.ObjectServerFacade:
    public void initialize()
    public void realmClosed()
    public java.lang.Object[] getSyncConfigurationOptions()
    public void wrapObjectStoreSessionIfRequired()
    public java.lang.String getSyncServerCertificateAssetName()
    public java.lang.String getSyncServerCertificateFilePath()
    public void downloadInitialRemoteChanges()
    public boolean isPartialRealm()
    public void downloadInitialSubscriptions()
androidx.core.provider.SelfDestructiveThread$3:
    public final synthetic androidx.core.provider.SelfDestructiveThread this$0
androidx.fragment.app.FragmentTransitionImpl$3:
    public final synthetic androidx.fragment.app.FragmentTransitionImpl this$0
androidx.appcompat.view.menu.MenuItemImpl$1:
    public void onActionProviderVisibilityChanged(boolean)
androidx.transition.ChangeBounds$9:
    public final synthetic androidx.transition.ChangeBounds this$0
com.google.gson.internal.ConstructorConstructor$2:
    public final synthetic com.google.gson.internal.ConstructorConstructor this$0
androidx.core.view.ViewPropertyAnimatorUpdateListener:
    public abstract void onAnimationUpdate(android.view.View)
androidx.customview.widget.ViewDragHelper$Callback:
    public void onEdgeTouched()
    public boolean onEdgeLock()
    public void onEdgeDragStarted()
    public int getOrderedChildIndex(int)
androidx.fragment.app.BackStackState:
    public androidx.fragment.app.BackStackRecord instantiate(androidx.fragment.app.FragmentManagerImpl)
com.getkeepsafe.relinker.ReLinker$LibraryInstaller:
    public abstract void installLibrary(android.content.Context,java.lang.String[],java.lang.String,java.io.File,com.getkeepsafe.relinker.ReLinkerInstance)
androidx.versionedparcelable.ParcelImpl$1:
    public androidx.versionedparcelable.ParcelImpl createFromParcel(android.os.Parcel)
    public androidx.versionedparcelable.ParcelImpl[] newArray(int)
androidx.appcompat.app.WindowDecorActionBar$3:
    public void onAnimationUpdate(android.view.View)
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1:
    public final synthetic androidx.appcompat.widget.ActionMenuPresenter val$this$0
androidx.recyclerview.widget.RecyclerView$LayoutParams:
    public boolean isViewInvalid()
io.realm.internal.sync.OsSubscription$SubscriptionState:
    public static io.realm.internal.sync.OsSubscription$SubscriptionState fromInternalValue(int)
com.google.android.material.floatingactionbutton.FloatingActionButton$1:
    public void onShown()
    public void onHidden()
com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener:
    public void <init>(com.google.android.material.chip.ChipGroup)
    public static synthetic android.view.ViewGroup$OnHierarchyChangeListener access$202(com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener,android.view.ViewGroup$OnHierarchyChangeListener)
com.google.gson.internal.ConstructorConstructor:
    public final com.google.gson.internal.ObjectConstructor newDefaultConstructor(java.lang.Class)
    public final com.google.gson.internal.ObjectConstructor newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class)
    public final com.google.gson.internal.ObjectConstructor newUnsafeAllocator(java.lang.reflect.Type,java.lang.Class)
androidx.appcompat.widget.SearchView:
    public void setQuery(java.lang.CharSequence,boolean)
    public boolean isIconified()
    public void onTextChanged(java.lang.CharSequence)
    public void onVoiceClicked()
    public void onTextFocusChanged()
    public void adjustDropDownSizeAndPosition()
    public final void getChildBoundsWithinSearchView(android.view.View,android.graphics.Rect)
    public final boolean hasVoiceSearch()
    public final boolean isSubmitAreaEnabled()
    public final void postUpdateFocusedState()
    public final java.lang.CharSequence getDecoratedHint(java.lang.CharSequence)
    public final void updateSearchAutoComplete()
    public final void dismissSuggestions()
    public final void rewriteQueryFromSuggestion(int)
    public final boolean launchSuggestion(int,int,java.lang.String)
    public final void launchIntent(android.content.Intent)
    public final android.content.Intent createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo)
    public final android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String)
androidx.customview.widget.FocusStrategy
com.google.android.material.resources.CancelableFontCallback$ApplyFont:
    public abstract void apply(android.graphics.Typeface)
androidx.core.provider.FontsContractCompat$FontFamilyResult:
    public int getStatusCode()
    public androidx.core.provider.FontsContractCompat$FontInfo[] getFonts()
io.realm.RealmCache$Callback
com.google.android.material.bottomsheet.BottomSheetBehavior$4:
    public final boolean releasedLow(android.view.View)
androidx.recyclerview.widget.LayoutState:
    public boolean hasMore(androidx.recyclerview.widget.RecyclerView$State)
    public android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler)
androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback$TypefaceApplyCallback:
    public final synthetic androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback this$0
org.slf4j.helpers.SubstituteLoggerFactory:
    public java.util.List getLoggers()
    public java.util.concurrent.LinkedBlockingQueue getEventQueue()
    public void postInitialization()
    public void clear()
io.realm.RealmCache$ReferenceCounter:
    public void incrementThreadCount(int)
    public void setThreadCount(int)
    public int getGlobalCount()
io.realm.ProxyState$QueryCallback:
    public void <init>()
    public void onCalled(io.realm.internal.OsObject$ObjectObserverPair,java.lang.Object)
org.slf4j.Marker
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo:
    public boolean isViewValidAsAnchor(android.view.View,androidx.recyclerview.widget.RecyclerView$State)
io.realm.log.RealmLog:
    public static int getLevel()
    public static varargs void warn(java.lang.Throwable,java.lang.String,java.lang.Object[])
    public static varargs void error(java.lang.Throwable,java.lang.String,java.lang.Object[])
    public static varargs void fatal(java.lang.String,java.lang.Object[])
    public static varargs void fatal(java.lang.Throwable,java.lang.String,java.lang.Object[])
    public static void <clinit>()
    public static java.lang.String REALM_JAVA_TAG
androidx.appcompat.widget.AlertDialogLayout:
    private void forceUniformWidth(int,int)
    private void setChildFrame(android.view.View,int,int,int,int)
    public final boolean tryOnMeasure(int,int)
com.google.android.material.math.MathUtils
androidx.activity.ComponentActivity:
    public java.lang.Object onRetainCustomNonConfigurationInstance()
    public int mContentLayoutId
com.google.android.material.transformation.FabTransformationScrimBehavior$1:
    public final synthetic com.google.android.material.transformation.FabTransformationScrimBehavior this$0
androidx.core.view.accessibility.AccessibilityRecordCompat
com.google.android.material.datepicker.MaterialCalendar$1:
    public final synthetic com.google.android.material.datepicker.MaterialCalendar this$0
com.google.android.material.chip.Chip$ChipTouchHelper:
    public int getVirtualViewAt(float,float)
    public void onVirtualViewKeyboardFocusChanged(int,boolean)
    public void onPopulateNodeForHost(androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat
androidx.appcompat.app.ActionBar$Tab:
    public void <init>()
    public abstract android.graphics.drawable.Drawable getIcon()
    public abstract java.lang.CharSequence getText()
    public abstract android.view.View getCustomView()
    public abstract java.lang.CharSequence getContentDescription()
io.realm.internal.OsResults:
    public static native void nativeClear(long)
    public static native boolean nativeIsValid(long)
    public static synthetic io.realm.internal.OsSharedRealm access$000(io.realm.internal.OsResults)
    public static synthetic boolean access$100(io.realm.internal.OsResults)
    public io.realm.internal.OsResults createSnapshot()
    public io.realm.internal.UncheckedRow getUncheckedRow(int)
    public void clear()
    public void removeListener(java.lang.Object,io.realm.OrderedRealmCollectionChangeListener)
    public void removeListener(java.lang.Object,io.realm.RealmChangeListener)
    public boolean isValid()
    public io.realm.internal.OsResults$Mode getMode()
    public boolean isLoaded()
    public void load()
    public final native void nativeStopListening(long)
androidx.transition.Transition:
    public long getDuration()
    public long getStartDelay()
    public android.animation.TimeInterpolator getInterpolator()
    public java.util.List getTargetIds()
    public java.util.List getTargets()
    public java.util.List getTargetNames()
    public java.util.List getTargetTypes()
    public void playTransition(android.view.ViewGroup)
    public void animate(android.animation.Animator)
    public androidx.transition.PathMotion getPathMotion()
    public androidx.transition.Transition$EpicenterCallback getEpicenterCallback()
    public void getPropagation()
    public java.lang.String getName()
    public final void matchInstances(androidx.collection.ArrayMap,androidx.collection.ArrayMap)
    public final void matchItemIds(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.LongSparseArray,androidx.collection.LongSparseArray)
    public final void matchIds(androidx.collection.ArrayMap,androidx.collection.ArrayMap,android.util.SparseArray,android.util.SparseArray)
    public final void matchNames(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap)
    public final void addUnmatched(androidx.collection.ArrayMap,androidx.collection.ArrayMap)
    public final void matchStartAndEnd(androidx.transition.TransitionValuesMaps,androidx.transition.TransitionValuesMaps)
    public final void runAnimator(android.animation.Animator,androidx.collection.ArrayMap)
    public android.view.ViewGroup mSceneRoot
    public androidx.collection.ArrayMap mNameOverrides
com.google.gson.internal.LinkedTreeMap$Node:
    public com.google.gson.internal.LinkedTreeMap$Node first()
    public com.google.gson.internal.LinkedTreeMap$Node last()
com.android.volley.Response:
    public static com.android.volley.Response success(java.lang.Object,com.android.volley.Cache$Entry)
    public static com.android.volley.Response error(com.android.volley.VolleyError)
    public boolean isSuccess()
androidx.transition.TransitionUtils:
    public static android.graphics.Bitmap createViewBitmap(android.view.View,android.graphics.Matrix,android.graphics.RectF,android.view.ViewGroup)
    public static final boolean HAS_IS_ATTACHED_TO_WINDOW
    public static final boolean HAS_OVERLAY
androidx.constraintlayout.solver.widgets.ConstraintAnchor$1
androidx.core.view.ViewPropertyAnimatorCompat:
    public long getDuration()
    public androidx.core.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator)
    public androidx.core.view.ViewPropertyAnimatorCompat setStartDelay(long)
    public void start()
io.realm.RealmConfiguration:
    public static io.realm.internal.RealmProxyMediator createSchemaMediator(java.util.Set,java.util.Set)
    public static java.lang.String getCanonicalPath(java.io.File)
    public static synthetic java.lang.Object access$000()
    public java.io.File getRealmDirectory()
    public java.lang.String getRealmFileName()
    public long getSchemaVersion()
    public io.realm.RealmMigration getMigration()
    public boolean shouldDeleteRealmIfMigrationNeeded()
    public io.realm.internal.OsRealmConfig$Durability getDurability()
    public io.realm.internal.RealmProxyMediator getSchemaMediator()
    public io.realm.Realm$Transaction getInitialDataTransaction()
    public boolean hasAssetFile()
    public java.lang.String getAssetFilePath()
    public io.realm.CompactOnLaunchCallback getCompactOnLaunchCallback()
    public java.lang.String getPath()
    public boolean realmExists()
    public boolean isReadOnly()
    public boolean isRecoveryConfiguration()
    public long getMaxNumberOfActiveVersions()
    public boolean isSyncConfiguration()
androidx.core.content.res.ComplexColorCompat:
    public static androidx.core.content.res.ComplexColorCompat from(android.graphics.Shader)
    public static androidx.core.content.res.ComplexColorCompat from(android.content.res.ColorStateList)
    public static androidx.core.content.res.ComplexColorCompat from(int)
    public static androidx.core.content.res.ComplexColorCompat inflate(android.content.res.Resources,int,android.content.res.Resources$Theme)
    public android.graphics.Shader getShader()
    public int getColor()
    public void setColor(int)
    public boolean willDraw()
androidx.recyclerview.widget.GapWorker$Task:
    public void clear()
androidx.recyclerview.widget.ViewInfoStore$ProcessCallback:
    public abstract void processDisappeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public abstract void processAppeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public abstract void processPersistent(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public abstract void unused(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.google.android.material.card.MaterialCardView$OnCheckedChangeListener:
    public abstract void onCheckedChanged(com.google.android.material.card.MaterialCardView,boolean)
io.realm.internal.OsObject$ObjectObserverPair:
    public void onChange(io.realm.RealmModel,io.realm.ObjectChangeSet)
com.getkeepsafe.relinker.elf.Section32Header
com.google.android.material.datepicker.MaterialCalendar:
    public static synthetic androidx.recyclerview.widget.RecyclerView access$000(com.google.android.material.datepicker.MaterialCalendar)
    public static synthetic com.google.android.material.datepicker.CalendarConstraints access$100(com.google.android.material.datepicker.MaterialCalendar)
    public static synthetic com.google.android.material.datepicker.DateSelector access$200(com.google.android.material.datepicker.MaterialCalendar)
    public static synthetic androidx.recyclerview.widget.RecyclerView access$300(com.google.android.material.datepicker.MaterialCalendar)
    public static synthetic com.google.android.material.datepicker.CalendarStyle access$400(com.google.android.material.datepicker.MaterialCalendar)
    public static synthetic android.view.View access$500(com.google.android.material.datepicker.MaterialCalendar)
    public static synthetic com.google.android.material.datepicker.Month access$602(com.google.android.material.datepicker.MaterialCalendar,com.google.android.material.datepicker.Month)
    public com.google.android.material.datepicker.Month getCurrentMonth()
    public com.google.android.material.datepicker.CalendarConstraints getCalendarConstraints()
    public com.google.android.material.datepicker.DateSelector getDateSelector()
    public com.google.android.material.datepicker.CalendarStyle getCalendarStyle()
    public void toggleVisibleSelector()
    public final androidx.recyclerview.widget.RecyclerView$ItemDecoration createItemDecoration()
    public final void addActionsToMonthNavigation(android.view.View,com.google.android.material.datepicker.MonthsPagerAdapter)
androidx.appcompat.widget.TintInfo:
    public void clear()
androidx.appcompat.widget.AppCompatCheckedTextView:
    public void <init>(android.content.Context,android.util.AttributeSet,int)
androidx.viewpager.widget.ViewPager$ViewPositionComparator:
    public int compare(android.view.View,android.view.View)
androidx.viewpager2.adapter.FragmentStateAdapter
com.guilhermedaros.museunfc.Models.ResponseItem:
    public java.util.List getData()
androidx.customview.widget.ExploreByTouchHelper:
    public static int keyToDirection(int)
    public static android.graphics.Rect guessPreviouslyFocusedRect(android.view.View,int,android.graphics.Rect)
    public final boolean dispatchHoverEvent(android.view.MotionEvent)
    public final boolean dispatchKeyEvent(android.view.KeyEvent)
    public final void onFocusChanged(boolean,int,android.graphics.Rect)
    public final int getAccessibilityFocusedVirtualViewId()
    public final int getKeyboardFocusedVirtualViewId()
    public void onVirtualViewKeyboardFocusChanged(int,boolean)
    public boolean performAction(int,int,android.os.Bundle)
    public abstract int getVirtualViewAt(float,float)
    public void onPopulateEventForVirtualView()
    public void onPopulateEventForHost()
    public void onPopulateNodeForHost(androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
    public final void getBoundsInParent(int,android.graphics.Rect)
    public final androidx.collection.SparseArrayCompat getAllNodes()
    public final boolean clickKeyboardFocusedVirtualView()
    public final android.view.accessibility.AccessibilityEvent createEvent(int,int)
    public final android.view.accessibility.AccessibilityEvent createEventForHost(int)
    public final android.view.accessibility.AccessibilityEvent createEventForChild(int,int)
    public final androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForHost()
    public final boolean performActionForHost(int,android.os.Bundle)
    public final boolean performActionForChild(int,int,android.os.Bundle)
    public final boolean isVisibleToUser(android.graphics.Rect)
    public final boolean requestAccessibilityFocus(int)
androidx.appcompat.widget.AppCompatCompoundButtonHelper:
    public void setSupportButtonTintList(android.content.res.ColorStateList)
    public android.content.res.ColorStateList getSupportButtonTintList()
    public void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
    public android.graphics.PorterDuff$Mode getSupportButtonTintMode()
    public void onSetButtonDrawable()
    public int getCompoundPaddingLeft(int)
io.realm.internal.OsList:
    public final io.realm.internal.Table targetTable
com.google.android.material.resources.TextAppearanceConfig
androidx.core.graphics.TypefaceCompatBaseImpl$1:
    public int getWeight(androidx.core.provider.FontsContractCompat$FontInfo)
    public boolean isItalic(androidx.core.provider.FontsContractCompat$FontInfo)
    public final synthetic androidx.core.graphics.TypefaceCompatBaseImpl this$0
io.realm.internal.Table:
    public long size()
    public long getColumnCount()
    public java.lang.String getColumnName(long)
    public java.lang.String[] getColumnNames()
    public long getColumnKey(java.lang.String)
    public io.realm.internal.OsSharedRealm getSharedRealm()
    public io.realm.internal.UncheckedRow getUncheckedRowByPointer(long)
    public io.realm.internal.CheckedRow getCheckedRow(long)
    public io.realm.internal.TableQuery where()
    public long findFirstLong(long,long)
    public static final int CLASS_NAME_MAX_LENGTH
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener:
    public abstract void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.fragment.app.FragmentManagerState$1:
    public androidx.fragment.app.FragmentManagerState createFromParcel(android.os.Parcel)
    public androidx.fragment.app.FragmentManagerState[] newArray(int)
androidx.arch.core.internal.SafeIterableMap:
    public java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)
    public int size()
    public java.util.Iterator descendingIterator()
    public java.util.Map$Entry eldest()
    public java.util.Map$Entry newest()
androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments
androidx.viewpager.widget.ViewPager:
    public static boolean isDecorView(android.view.View)
    public void initViewPager()
    public void setCurrentItem(int,boolean)
    public void setCurrentItemInternal(int,boolean,boolean)
    public float distanceInfluenceForSnapDuration(float)
    public void smoothScrollTo(int,int,int)
    public void populate()
    public androidx.viewpager.widget.ViewPager$ItemInfo infoForAnyChild(android.view.View)
    public boolean executeKeyEvent(android.view.KeyEvent)
    public final void removeNonDecorViews()
    public final void sortChildDrawingOrder()
    public final void calculatePageOffsets(androidx.viewpager.widget.ViewPager$ItemInfo,int,androidx.viewpager.widget.ViewPager$ItemInfo)
    public final void dispatchOnPageScrolled(int,float,int)
    public final void dispatchOnScrollStateChanged(int)
    public final boolean isGutterDrag(float,float)
    public final void enableLayers(boolean)
    public final int determineTargetPage(int,float,int,int)
    public final void endDrag()
    public int mChildWidthMeasureSpec
    public boolean mFakeDragging
    public boolean mNeedCalculatePageOffsets
    public java.util.List mOnPageChangeListeners
    public androidx.viewpager.widget.ViewPager$OnPageChangeListener mInternalPageChangeListener
    public java.util.List mAdapterChangeListeners
    public androidx.viewpager.widget.ViewPager$PageTransformer mPageTransformer
    public int mPageTransformerLayerType
    public int mDrawingOrder
io.realm.Realm$1$1$1
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper:
    public static java.lang.Object accessAndReturnWithDefault(java.lang.Object,java.lang.String,java.lang.Object)
    public static java.lang.reflect.Field getTextViewField(java.lang.String)
    public void loadFromAttributes(android.util.AttributeSet,int)
    public void setAutoSizeTextTypeWithDefaults(int)
    public void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)
    public void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)
    public int getAutoSizeTextType()
    public int getAutoSizeStepGranularity()
    public int getAutoSizeMinTextSize()
    public int getAutoSizeMaxTextSize()
    public int[] getAutoSizeTextAvailableSizes()
    public void initTempTextPaint(int)
    public android.text.StaticLayout createLayout(java.lang.CharSequence,android.text.Layout$Alignment,int,int)
    public boolean isAutoSizeEnabled()
    public final void setupAutoSizeUniformPresetSizes(android.content.res.TypedArray)
    public final void clearAutoSizeConfiguration()
    public final void setRawTextSize(float)
    public final boolean suggestedSizeFitsInSpace(int,android.graphics.RectF)
    public final android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int)
    public final android.text.StaticLayout createStaticLayoutForMeasuringPre23(java.lang.CharSequence,android.text.Layout$Alignment,int)
    public final android.text.StaticLayout createStaticLayoutForMeasuringPre16(java.lang.CharSequence,android.text.Layout$Alignment,int)
androidx.constraintlayout.solver.widgets.Rectangle
androidx.cursoradapter.widget.CursorFilter$CursorFilterClient:
    public abstract java.lang.CharSequence convertToString(android.database.Cursor)
    public abstract android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)
    public abstract android.database.Cursor getCursor()
    public abstract void changeCursor(android.database.Cursor)
com.google.android.material.chip.Chip:
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public static synthetic com.google.android.material.chip.ChipDrawable access$000(com.google.android.material.chip.Chip)
    public static synthetic android.view.View$OnClickListener access$300(com.google.android.material.chip.Chip)
    public static synthetic boolean access$402(com.google.android.material.chip.Chip,boolean)
    public static synthetic android.graphics.Rect access$600()
    public boolean performCloseIconClick()
    public boolean isCloseIconVisible()
    public boolean shouldEnsureMinTouchTargetSize()
    public final void initMinTouchTarget(android.content.Context,android.util.AttributeSet,int)
    public final void validateAttributes(android.util.AttributeSet)
    public final void initOutlineProvider()
    public final void updateBackgroundDrawable()
    public final void ensureChipDrawableHasCallback()
    public final void unapplyChipDrawable(com.google.android.material.chip.ChipDrawable)
    public final void applyChipDrawable(com.google.android.material.chip.ChipDrawable)
    public final boolean handleAccessibilityExit(android.view.MotionEvent)
    public final int[] createCloseIconDrawableState()
    public final void insetChipBackgroundDrawable(int,int,int,int)
com.google.gson.reflect.TypeToken:
    public static java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class)
    public static com.google.gson.reflect.TypeToken get(java.lang.reflect.Type)
    public static com.google.gson.reflect.TypeToken get(java.lang.Class)
    public final java.lang.Class getRawType()
    public final java.lang.reflect.Type getType()
com.android.volley.toolbox.HttpResponse:
    public final int getStatusCode()
    public final java.util.List getHeaders()
    public final int getContentLength()
    public final java.io.InputStream getContent()
androidx.customview.widget.ExploreByTouchHelper$2:
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat get(androidx.collection.SparseArrayCompat,int)
    public int size(androidx.collection.SparseArrayCompat)
    public int size(java.lang.Object)
    public java.lang.Object get(java.lang.Object,int)
com.guilhermedaros.museunfc.Entities.ItemMuseu:
    public int getId()
    public java.lang.String getNome()
    public java.lang.String getOrdem()
    public java.lang.String getFamilia()
    public java.lang.String getDescricao()
    public java.lang.String getDistribuicaoGeografica()
    public java.lang.String getHabitat()
    public java.lang.String getHabitosAlimentares()
    public java.lang.String getReproducao()
    public java.lang.String getPeriodoDeVida()
    public int id
    public java.lang.String nome
    public java.lang.String ordem
    public java.lang.String familia
    public java.lang.String descricao
    public java.lang.String distribuicaoGeografica
    public java.lang.String habitat
    public java.lang.String habitosAlimentares
    public java.lang.String reproducao
    public java.lang.String periodoDeVida
    public boolean ativo
androidx.transition.ChangeBounds$1:
    public void set(android.graphics.drawable.Drawable,android.graphics.PointF)
    public android.graphics.PointF get(android.graphics.drawable.Drawable)
androidx.core.app.ActivityRecreator:
    public static boolean queueOnStopIfNecessary(java.lang.Object,android.app.Activity)
    public static java.lang.reflect.Method getPerformStopActivity3Params(java.lang.Class)
    public static java.lang.reflect.Method getPerformStopActivity2Params(java.lang.Class)
    public static java.lang.reflect.Method getRequestRelaunchActivityMethod(java.lang.Class)
    public static java.lang.reflect.Field getMainThreadField()
    public static java.lang.reflect.Field getTokenField()
    public static java.lang.Class getActivityThreadClass()
androidx.transition.ChangeBounds$ViewBounds:
    public void setTopLeft(android.graphics.PointF)
    public void setBottomRight(android.graphics.PointF)
    public final void setLeftTopRightBottom()
androidx.fragment.app.FragmentPagerAdapter:
    public void <init>(androidx.fragment.app.FragmentManager,int)
    public abstract androidx.fragment.app.Fragment getItem(int)
    public java.lang.Object instantiateItem(android.view.ViewGroup,int)
    public void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)
    public boolean isViewFromObject(android.view.View,java.lang.Object)
    public android.os.Parcelable saveState()
    public void restoreState(android.os.Parcelable,java.lang.ClassLoader)
    public long getItemId(int)
com.android.volley.NetworkDispatcher:
    public void quit()
    public final void addTrafficStatsTag(com.android.volley.Request)
    public final void parseAndDeliverNetworkError(com.android.volley.Request,com.android.volley.VolleyError)
com.google.gson.internal.bind.TypeAdapters$14:
    public java.lang.Number read(com.google.gson.stream.JsonReader)
    public void write(com.google.gson.stream.JsonWriter,java.lang.Number)
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions:
    public java.util.Map$Entry next()
com.google.gson.internal.bind.TypeAdapters$27:
    public java.util.Calendar read(com.google.gson.stream.JsonReader)
    public void write(com.google.gson.stream.JsonWriter,java.util.Calendar)
androidx.transition.PropertyValuesHolderUtils
com.android.volley.Request$NetworkRequestCompleteListener:
    public abstract void onResponseReceived(com.android.volley.Request,com.android.volley.Response)
    public abstract void onNoUsableResponseReceived(com.android.volley.Request)
androidx.fragment.app.FragmentManagerImpl:
    public static androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator makeFadeAnimation(float,float)
    public static void executeOps(java.util.ArrayList,java.util.ArrayList,int,int)
    public static int transitToStyleIndex(int,boolean)
    public androidx.fragment.app.FragmentTransaction beginTransaction()
    public void handleOnBackPressed()
    public int getBackStackEntryCount()
    public void putFragment(android.os.Bundle,java.lang.String,androidx.fragment.app.Fragment)
    public androidx.fragment.app.Fragment getFragment(android.os.Bundle,java.lang.String)
    public java.util.List getFragments()
    public androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment)
    public void addRetainedFragment(androidx.fragment.app.Fragment)
    public void removeRetainedFragment(androidx.fragment.app.Fragment)
    public boolean isDestroyed()
    public boolean isStateAtLeast(int)
    public void moveToState(androidx.fragment.app.Fragment)
    public void ensureInflatedFragmentView(androidx.fragment.app.Fragment)
    public void completeShowHideFragment(androidx.fragment.app.Fragment)
    public void makeInactive(androidx.fragment.app.Fragment)
    public void hideFragment(androidx.fragment.app.Fragment)
    public void showFragment(androidx.fragment.app.Fragment)
    public void scheduleCommit()
    public void setBackStackIndex(int,androidx.fragment.app.BackStackRecord)
    public void freeBackStackIndex(int)
    public void execSingleAction(androidx.fragment.app.FragmentManagerImpl$OpGenerator,boolean)
    public void reportBackStackChanged()
    public void addBackStackState(androidx.fragment.app.BackStackRecord)
    public boolean popBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String,int,int)
    public android.os.Bundle saveFragmentBasicState(androidx.fragment.app.Fragment)
    public void dispatchActivityCreated()
    public void dispatchStart()
    public void dispatchResume()
    public void dispatchPause()
    public void dispatchStop()
    public void dispatchDestroyView()
    public void dispatchPrimaryNavigationFragmentChanged()
    public androidx.fragment.app.Fragment getPrimaryNavigationFragment()
    public boolean checkForMenus()
    public android.view.LayoutInflater$Factory2 getLayoutInflaterFactory()
    public final boolean popBackStackImmediate(java.lang.String,int,int)
    public final void animateRemoveFragment(androidx.fragment.app.Fragment,androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator,int)
    public final void checkStateLoss()
    public final void makeRemovedFragmentsInvisible(androidx.collection.ArraySet)
    public final int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int,androidx.collection.ArraySet)
    public final androidx.fragment.app.Fragment findFragmentUnder(androidx.fragment.app.Fragment)
    public final void forcePostponedTransactions()
    public final void endAnimatingAwayFragments()
    public final boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList)
    public java.util.ArrayList mPendingActions
    public java.util.ArrayList mBackStackChangeListeners
io.realm.internal.objectstore.OsObjectBuilder$4
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:
    public static boolean excludeField(java.lang.reflect.Field,boolean,com.google.gson.internal.Excluder)
    public final java.util.List getFieldNames(java.lang.reflect.Field)
    public final com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField createBoundField(com.google.gson.Gson,java.lang.reflect.Field,java.lang.String,com.google.gson.reflect.TypeToken,boolean,boolean)
    public final java.util.Map getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class)
com.google.gson.internal.LinkedTreeMap$EntrySet$1:
    public java.util.Map$Entry next()
    public final synthetic com.google.gson.internal.LinkedTreeMap$EntrySet this$1
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem:
    public int getGapForSpan(int)
androidx.core.graphics.TypefaceCompatApi24Impl:
    public static boolean isUsable()
    public static java.lang.Object newFamily()
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup:
    public int getSpan(int)
    public void setSpan(int,androidx.recyclerview.widget.StaggeredGridLayoutManager$Span)
    public int sizeForPosition(int)
    public final void offsetFullSpansForRemoval(int,int)
    public final void offsetFullSpansForAddition(int,int)
    public final int invalidateFullSpansAfter(int)
androidx.recyclerview.widget.LinearLayoutManager$SavedState:
    public void invalidateAnchor()
com.google.android.material.datepicker.Month:
    public static com.google.android.material.datepicker.Month create(int,int)
    public static com.google.android.material.datepicker.Month current()
    public long getStableId()
    public long getDay(int)
    public java.lang.String getLongName()
    public final long timeInMillis
androidx.transition.ViewOverlayApi18:
    public void add(android.graphics.drawable.Drawable)
    public void remove(android.graphics.drawable.Drawable)
androidx.appcompat.widget.DropDownListView:
    public final void clickPressedItem(android.view.View,int)
    public final void drawSelectorCompat(android.graphics.Canvas)
    public final void positionSelectorLikeTouchCompat(int,android.view.View,float,float)
    public final void positionSelectorLikeFocusCompat(int,android.view.View)
    public final void positionSelectorCompat(int,android.view.View)
    public final void clearPressedItem()
    public final void setPressedItem(android.view.View,int,float,float)
    public final boolean touchModeDrawsInPressedStateCompat()
androidx.coordinatorlayout.widget.CoordinatorLayout:
    public static void releaseTempRect(android.graphics.Rect)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public static int resolveGravity(int)
    public static int resolveKeylineGravity(int)
    public static int resolveAnchoredChildGravity(int)
    public static int clamp(int,int,int)
    public final androidx.core.view.WindowInsetsCompat setWindowInsets(androidx.core.view.WindowInsetsCompat)
    public void getDescendantRect(android.view.View,android.graphics.Rect)
    public void recordLastChildRect(android.view.View,android.graphics.Rect)
    public void getLastChildRect(android.view.View,android.graphics.Rect)
    public void getDesiredAnchoredChildRect(android.view.View,int,android.graphics.Rect,android.graphics.Rect)
    public void dispatchDependentViewsChanged(android.view.View)
    public void ensurePreDrawListener()
    public void addPreDrawListener()
    public void removePreDrawListener()
    public void offsetChildToAnchor(android.view.View,int)
    public androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
    public androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    public androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateDefaultLayoutParams()
    public final void getTopSortedChildren(java.util.List)
    public final androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsetsToBehaviors(androidx.core.view.WindowInsetsCompat)
    public final void layoutChildWithAnchor(android.view.View,android.view.View,int)
    public final void layoutChildWithKeyline(android.view.View,int,int)
    public final void layoutChild(android.view.View,int)
    public final void offsetChildByInset(android.view.View,android.graphics.Rect,int)
    public final boolean hasDependencies(android.view.View)
androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl:
    public void setPrefetchVector(int,int)
    public void clearPrefetchPositions()
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult:
    public void resetInternal()
androidx.core.view.ViewPropertyAnimatorCompat$2:
    public final synthetic androidx.core.view.ViewPropertyAnimatorCompat this$0
androidx.appcompat.view.menu.ListMenuItemView:
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public final void addContentView(android.view.View)
    public final void addContentView(android.view.View,int)
    public final void insertIconView()
    public int mMenuType
com.google.android.material.shape.CornerTreatment:
    public void getCornerPath(com.google.android.material.shape.ShapePath,float,float,android.graphics.RectF,com.google.android.material.shape.CornerSize)
com.android.volley.VolleyLog$MarkerLog:
    public final long getTotalDuration()
com.google.gson.Gson:
    public void <init>(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.lang.String,int,int,java.util.List,java.util.List,java.util.List)
    public static com.google.gson.TypeAdapter longAdapter(com.google.gson.LongSerializationPolicy)
    public static com.google.gson.TypeAdapter atomicLongAdapter(com.google.gson.TypeAdapter)
    public static com.google.gson.TypeAdapter atomicLongArrayAdapter(com.google.gson.TypeAdapter)
    public com.google.gson.TypeAdapter getAdapter(java.lang.Class)
    public java.lang.Object fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type)
    public java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.reflect.Type)
    public final com.google.gson.TypeAdapter doubleAdapter(boolean)
    public final com.google.gson.TypeAdapter floatAdapter(boolean)
    public final com.google.gson.internal.Excluder excluder
    public final com.google.gson.FieldNamingStrategy fieldNamingStrategy
    public final java.util.Map instanceCreators
    public final boolean complexMapKeySerialization
    public final boolean generateNonExecutableJson
    public final boolean htmlSafe
    public final boolean prettyPrinting
    public final boolean lenient
    public final boolean serializeSpecialFloatingPointValues
    public final java.lang.String datePattern
    public final int dateStyle
    public final int timeStyle
    public final com.google.gson.LongSerializationPolicy longSerializationPolicy
    public final java.util.List builderFactories
    public final java.util.List builderHierarchyFactories
androidx.cardview.widget.CardViewImpl:
    public abstract void setRadius(androidx.cardview.widget.CardViewDelegate,float)
    public abstract float getRadius(androidx.cardview.widget.CardViewDelegate)
    public abstract void setElevation(androidx.cardview.widget.CardViewDelegate,float)
    public abstract float getElevation(androidx.cardview.widget.CardViewDelegate)
    public abstract void initStatic()
    public abstract void setMaxElevation(androidx.cardview.widget.CardViewDelegate,float)
    public abstract float getMaxElevation(androidx.cardview.widget.CardViewDelegate)
    public abstract float getMinWidth(androidx.cardview.widget.CardViewDelegate)
    public abstract float getMinHeight(androidx.cardview.widget.CardViewDelegate)
    public abstract void onCompatPaddingChanged(androidx.cardview.widget.CardViewDelegate)
    public abstract void onPreventCornerOverlapChanged(androidx.cardview.widget.CardViewDelegate)
    public abstract void setBackgroundColor(androidx.cardview.widget.CardViewDelegate,android.content.res.ColorStateList)
    public abstract android.content.res.ColorStateList getBackgroundColor(androidx.cardview.widget.CardViewDelegate)
androidx.arch.core.internal.SafeIterableMap$ListIterator:
    public java.util.Map$Entry next()
    public final androidx.arch.core.internal.SafeIterableMap$Entry nextNode()
com.google.gson.internal.bind.SqlDateTypeAdapter:
    public synchronized java.sql.Date read(com.google.gson.stream.JsonReader)
    public synchronized void write(com.google.gson.stream.JsonWriter,java.sql.Date)
com.google.gson.Gson$3:
    public java.lang.Number read(com.google.gson.stream.JsonReader)
    public void write(com.google.gson.stream.JsonWriter,java.lang.Number)
io.realm.RealmCache$ThreadConfinedReferenceCounter:
    public void <init>()
androidx.core.provider.FontsContractCompat:
    public static android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources)
    public static java.util.List getCertificates(androidx.core.provider.FontRequest,android.content.res.Resources)
    public static boolean equalsByteArrayList(java.util.List,java.util.List)
    public static java.util.List convertToByteArrayList(android.content.pm.Signature[])
    public static androidx.core.provider.FontsContractCompat$FontInfo[] getFontFromProvider(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal)
androidx.appcompat.graphics.drawable.DrawableWrapper:
    public android.graphics.drawable.Drawable getWrappedDrawable()
    public void setWrappedDrawable(android.graphics.drawable.Drawable)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior:
    public static boolean isBottomSheet(android.view.View)
    public boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,android.graphics.Rect)
    public boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,android.view.View)
    public void shrinkOrHide(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
    public void extendOrShow(com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)
    public boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,int)
    public com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback internalAutoHideCallback
    public com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$OnChangedCallback internalAutoShrinkCallback
androidx.constraintlayout.widget.ConstraintSet$1
androidx.core.app.AppOpsManagerCompat
androidx.recyclerview.widget.LinearLayoutManager:
    public int getOrientation()
    public void setReverseLayout(boolean)
    public int getExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State)
    public androidx.recyclerview.widget.LinearLayoutManager$LayoutState createLayoutState()
    public boolean isSmoothScrollbarEnabled()
    public final void layoutForPredictiveAnimations(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int)
    public final void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)
    public final boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)
    public final boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)
    public final void updateLayoutStateToFillEnd(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)
    public final void updateLayoutStateToFillStart(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)
    public final void recycleViewsFromStart(androidx.recyclerview.widget.RecyclerView$Recycler,int,int)
    public final void recycleViewsFromEnd(androidx.recyclerview.widget.RecyclerView$Recycler,int,int)
    public final android.view.View findReferenceChildClosestToEnd(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
    public final android.view.View findReferenceChildClosestToStart(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
    public final android.view.View findPartiallyOrCompletelyInvisibleChildClosestToEnd()
    public final android.view.View findPartiallyOrCompletelyInvisibleChildClosestToStart()
    public final android.view.View findFirstPartiallyOrCompletelyInvisibleChild()
    public final android.view.View findLastPartiallyOrCompletelyInvisibleChild()
    public boolean mRecycleChildrenOnDetach
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat:
    public static android.graphics.PorterDuff$Mode parseTintModeCompat(int,android.graphics.PorterDuff$Mode)
    public java.lang.Object getTargetByName(java.lang.String)
    public void setAllowCaching(boolean)
    public final void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)
    public final void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public final boolean needMirroring()
    public android.graphics.drawable.Drawable$ConstantState mCachedConstantStateDelegate
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1:
    public androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState createFromParcel(android.os.Parcel)
    public androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState[] newArray(int)
com.google.android.material.button.MaterialButton:
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public final boolean isLayoutRTL()
    public final void resetIconDrawable(boolean)
androidx.appcompat.app.ToolbarActionBar$2:
    public boolean onMenuItemClick(android.view.MenuItem)
androidx.transition.Visibility:
    public void setMode(int)
    public void captureStartValues(androidx.transition.TransitionValues)
    public android.animation.Animator onAppear(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues)
    public abstract android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues)
    public android.animation.Animator onDisappear(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues,int)
io.realm.SchemaConnector:
    public boolean hasCache()
    public io.realm.internal.ColumnInfo getColumnInfo(java.lang.String)
    public long getNativeTablePtr(java.lang.String)
androidx.constraintlayout.solver.LinearSystem$Row:
    public abstract androidx.constraintlayout.solver.SolverVariable getPivotCandidate(androidx.constraintlayout.solver.LinearSystem,boolean[])
    public abstract void clear()
    public abstract void initFromRow(androidx.constraintlayout.solver.LinearSystem$Row)
    public abstract androidx.constraintlayout.solver.SolverVariable getKey()
androidx.fragment.app.FragmentTransitionCompat21$4:
    public final synthetic androidx.fragment.app.FragmentTransitionCompat21 this$0
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior:
    public static int getAppBarLayoutOffset(com.google.android.material.appbar.AppBarLayout)
    public float getOverlapRatioForOffset(android.view.View)
    public int getScrollRange(android.view.View)
    public synthetic bridge android.view.View findFirstDependency(java.util.List)
    public final void offsetChildAsNeeded(android.view.View,android.view.View)
    public final void updateLiftedStateIfNeeded(android.view.View,android.view.View)
com.google.android.material.shape.MaterialShapeDrawable:
    public void <init>(android.content.Context,android.util.AttributeSet,int,int)
    public static int modulateAlpha(int,int)
    public static synthetic java.util.BitSet access$000(com.google.android.material.shape.MaterialShapeDrawable)
    public static synthetic com.google.android.material.shape.ShapePath$ShadowCompatOperation[] access$100(com.google.android.material.shape.MaterialShapeDrawable)
    public static synthetic com.google.android.material.shape.ShapePath$ShadowCompatOperation[] access$200(com.google.android.material.shape.MaterialShapeDrawable)
    public synthetic void <init>(com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState,com.google.android.material.shape.MaterialShapeDrawable$1)
    public static synthetic boolean access$402(com.google.android.material.shape.MaterialShapeDrawable,boolean)
    public com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
    public android.content.res.ColorStateList getFillColor()
    public android.content.res.ColorStateList getTintList()
    public void setStrokeWidth(float)
    public void setPadding(int,int,int,int)
    public boolean isElevationOverlayEnabled()
    public float getParentAbsoluteElevation()
    public void setParentAbsoluteElevation(float)
    public float getElevation()
    public float getTranslationZ()
    public float getZ()
    public void setShadowCompatRotation(int)
    public int getShadowRadius()
    public boolean requiresCompatShadow()
    public void drawShape(android.graphics.Canvas,android.graphics.Paint,android.graphics.Path,android.graphics.RectF)
    public float getTopRightCornerResolvedSize()
    public float getBottomLeftCornerResolvedSize()
    public float getBottomRightCornerResolvedSize()
    public boolean isRoundRect()
    public final void invalidateSelfIgnoreShape()
    public final boolean hasCompatShadow()
    public final boolean hasFill()
    public final void maybeDrawCompatShadow(android.graphics.Canvas)
    public final void drawFillShape(android.graphics.Canvas)
    public final void drawStrokeShape(android.graphics.Canvas)
    public final void prepareCanvasForShadow(android.graphics.Canvas)
    public final void calculateStrokePath()
    public final android.graphics.PorterDuffColorFilter calculatePaintColorTintFilter(android.graphics.Paint,boolean)
    public final android.graphics.PorterDuffColorFilter calculateTintColorTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,boolean)
    public final android.graphics.RectF getBoundsInsetByStroke()
androidx.recyclerview.widget.RecyclerView$ItemAnimator:
    public long getMoveDuration()
    public long getAddDuration()
    public long getRemoveDuration()
    public long getChangeDuration()
    public void setListener(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener)
    public androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPostLayoutInformation(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public abstract boolean animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public abstract boolean animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public abstract boolean animatePersistence(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public abstract void runPendingAnimations()
    public void onAnimationFinished()
    public abstract boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo obtainHolderInfo()
androidx.constraintlayout.solver.widgets.Chain
com.google.android.material.textfield.TextInputLayout:
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public static void updateCounterContentDescription(android.content.Context,android.widget.TextView,int,int,boolean)
    public static void setIconOnClickListener(com.google.android.material.internal.CheckableImageButton,android.view.View$OnClickListener,android.view.View$OnLongClickListener)
    public static void setIconOnLongClickListener(com.google.android.material.internal.CheckableImageButton,android.view.View$OnLongClickListener)
    public static synthetic boolean access$000(com.google.android.material.textfield.TextInputLayout)
    public static synthetic boolean access$100(com.google.android.material.textfield.TextInputLayout)
    public static synthetic void access$200(com.google.android.material.textfield.TextInputLayout,int)
    public static synthetic com.google.android.material.internal.CheckableImageButton access$300(com.google.android.material.textfield.TextInputLayout)
    public void updateLabelState(boolean)
    public boolean isProvidingHint()
    public boolean isHelperTextEnabled()
    public boolean isStartIconVisible()
    public void addOnEndIconChangedListener(com.google.android.material.textfield.TextInputLayout$OnEndIconChangedListener)
    public final boolean isHintExpanded()
    public final void assignBoxBackgroundByMode()
    public final void setEditTextBoxBackground()
    public final boolean shouldUseEditTextBackgroundForBoxBackground()
    public final void updatePlaceholderText()
    public final void showPlaceholderText()
    public final void hidePlaceholderText()
    public final void addPlaceholderTextView()
    public final void removePlaceholderTextView()
    public final android.graphics.Rect calculateCollapsedTextBounds(android.graphics.Rect)
    public final android.graphics.Rect calculateExpandedTextBounds(android.graphics.Rect)
    public final int calculateExpandedLabelTop(android.graphics.Rect,float)
    public final int calculateExpandedLabelBottom(android.graphics.Rect,android.graphics.Rect,float)
    public final boolean isSingleLineFilledTextField()
    public final int calculateBoxBackgroundColor()
    public final void applyBoxUnderlineAttributes()
    public final boolean canDrawOutlineStroke()
    public final boolean canDrawStroke()
    public final boolean updateEditTextHeightBasedOnIcon()
    public final void updatePlaceholderMeasurementsBasedOnEditText()
    public final void dispatchOnEditTextAttached()
    public final void dispatchOnEndIconChanged(int)
    public final void tintEndIconOnError(boolean)
    public final boolean shouldUpdateStartDummyDrawable()
    public final boolean shouldUpdateEndDummyDrawable()
    public final void updateBoxUnderlineBounds(android.graphics.Rect)
    public final void drawHint(android.graphics.Canvas)
    public final void drawBoxUnderline(android.graphics.Canvas)
    public final void collapseHint(boolean)
    public final void closeCutout()
    public final void applyCutoutPadding(android.graphics.RectF)
    public final boolean isErrorIconVisible()
    public final void expandHint(boolean)
com.google.android.material.datepicker.YearGridAdapter:
    public static synthetic com.google.android.material.datepicker.MaterialCalendar access$000(com.google.android.material.datepicker.YearGridAdapter)
    public com.google.android.material.datepicker.YearGridAdapter$ViewHolder onCreateViewHolder(android.view.ViewGroup)
    public void onBindViewHolder(com.google.android.material.datepicker.YearGridAdapter$ViewHolder,int)
    public int getYearForPosition(int)
    public final android.view.View$OnClickListener createYearClickListener(int)
com.google.gson.internal.bind.TypeAdapters$9:
    public java.util.concurrent.atomic.AtomicBoolean read(com.google.gson.stream.JsonReader)
    public void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicBoolean)
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup:
    public static int findFirstKeyLessThan(android.util.SparseIntArray,int)
    public abstract int getSpanSize(int)
    public void invalidateSpanIndexCache()
    public void invalidateSpanGroupIndexCache()
    public abstract int getSpanIndex(int,int)
com.android.volley.VolleyError:
    public void setNetworkTimeMs(long)
    public final com.android.volley.NetworkResponse networkResponse
    public long networkTimeMs
androidx.recyclerview.widget.FastScroller:
    public void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)
    public void requestRedraw()
    public void hide(int)
    public void updateScrollPosition(int,int)
    public final void setupCallbacks()
    public final void destroyCallbacks()
    public final boolean isLayoutRTL()
    public final void resetHideDelay(int)
    public final void drawVerticalScrollbar(android.graphics.Canvas)
    public final void drawHorizontalScrollbar(android.graphics.Canvas)
    public final void verticalScrollTo(float)
    public final void horizontalScrollTo(float)
    public final int[] getVerticalRange()
    public final int[] getHorizontalRange()
com.google.android.material.bottomappbar.BottomAppBar$AnimationListener
androidx.core.provider.FontRequest:
    public java.lang.String getProviderAuthority()
    public java.lang.String getProviderPackage()
    public java.lang.String getQuery()
    public java.util.List getCertificates()
    public int getCertificatesArrayResId()
    public java.lang.String getIdentifier()
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span:
    public int getStartLine()
    public int getEndLine()
    public void cacheReferenceLineAndClear(boolean,int)
    public void invalidateCache()
    public void setLine(int)
    public int getDeletedSize()
    public void onOffset(int)
    public int findOnePartiallyOrCompletelyVisibleChild(int,int,boolean,boolean,boolean)
org.slf4j.helpers.NamedLoggerBase
androidx.loader.app.LoaderManagerImpl$LoaderInfo:
    public void getLoader()
    public void markForRedelivery()
    public void destroy(boolean)
    public void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
    public final int mId
    public final android.os.Bundle mArgs
    public final androidx.loader.content.Loader mLoader
    public androidx.loader.content.Loader mPriorLoader
io.realm.ManagedListOperator:
    public final boolean isValid()
    public final int size()
    public abstract java.lang.Object get(int)
    public final void append(java.lang.Object)
    public final void insert(int,java.lang.Object)
    public final java.lang.Object set(int,java.lang.Object)
    public final void remove(int)
    public final void removeAll()
com.android.volley.NetworkResponse:
    public void <init>(int,byte[],java.util.Map,boolean,long)
    public void <init>(byte[],java.util.Map)
    public static java.util.Map toHeaderMap(java.util.List)
    public static java.util.List toAllHeaderList(java.util.Map)
    public final int statusCode
    public final long networkTimeMs
com.google.android.material.shape.MaterialShapeDrawable$1:
    public void onCornerPathCreated(com.google.android.material.shape.ShapePath,android.graphics.Matrix,int)
    public void onEdgePathCreated(com.google.android.material.shape.ShapePath,android.graphics.Matrix,int)
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB:
    public final synthetic androidx.appcompat.view.menu.MenuItemWrapperICS this$0
androidx.recyclerview.widget.ChildHelper:
    public void addView(android.view.View,boolean)
    public void removeView(android.view.View)
    public void removeViewAt(int)
    public void removeAllViewsUnfiltered()
    public android.view.View findHiddenNonRemovedView(int)
    public void hide(android.view.View)
    public void unhide(android.view.View)
    public boolean removeViewIfHidden(android.view.View)
com.getkeepsafe.relinker.ReLinker
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator:
    public androidx.core.graphics.PathParser$PathDataNode[] evaluate(float,androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[])
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams:
    public float dimensionRatioValue
androidx.lifecycle.ViewModelProvider
androidx.loader.app.LoaderManagerImpl:
    public static void <clinit>()
    public void markForRedelivery()
    public static boolean DEBUG
androidx.loader.app.LoaderManager:
    public abstract void markForRedelivery()
androidx.core.provider.SelfDestructiveThread$2:
    public final synthetic androidx.core.provider.SelfDestructiveThread this$0
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl:
    public boolean dispatchOnCreate()
androidx.core.graphics.TypefaceCompatApi26Impl:
    public java.lang.Class obtainFontFamily()
    public java.lang.reflect.Constructor obtainFontFamilyCtor(java.lang.Class)
    public java.lang.reflect.Method obtainFreezeMethod(java.lang.Class)
    public java.lang.reflect.Method obtainAbortCreationMethod(java.lang.Class)
    public final boolean addFontFromBuffer(java.lang.Object,java.nio.ByteBuffer,int,int,int)
com.guilhermedaros.museunfc.Acitivities.LoginActivity$3:
    public void onResponse(org.json.JSONObject)
com.android.volley.CacheDispatcher$WaitingRequestManager:
    public void onResponseReceived(com.android.volley.Request,com.android.volley.Response)
    public final synchronized boolean maybeAddToWaitingRequests(com.android.volley.Request)
io.realm.internal.Util:
    public static java.lang.String getTablePrefix()
    public static boolean deleteRealm(java.lang.String,java.io.File,java.lang.String)
    public static varargs java.util.Set toSet(java.lang.Object[])
androidx.core.graphics.drawable.IconCompat:
    public static java.lang.String typeToString(int)
    public static java.lang.String getResPackage(android.graphics.drawable.Icon)
    public static int getResId(android.graphics.drawable.Icon)
    public java.lang.String getResPackage()
    public int getResId()
    public void onPreParceling(boolean)
    public void onPostParceling()
androidx.core.content.res.GradientColorInflaterCompat
com.guilhermedaros.museunfc.Models.Response:
    public java.lang.Boolean getSucesso()
    public java.lang.String getMensagem()
    public java.lang.Boolean sucesso
    public java.lang.String mensagem
com.google.android.material.textview.MaterialTextView:
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public void <init>(android.content.Context,android.util.AttributeSet,int,int)
    public static boolean canApplyTextAppearanceLineHeight(android.content.Context)
    public static boolean viewAttrsHasLineHeight(android.content.Context,android.content.res.Resources$Theme,android.util.AttributeSet,int,int)
    public static int findViewAppearanceResourceId(android.content.res.Resources$Theme,android.util.AttributeSet,int,int)
androidx.recyclerview.widget.GapWorker$1:
    public int compare(androidx.recyclerview.widget.GapWorker$Task,androidx.recyclerview.widget.GapWorker$Task)
androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments
androidx.appcompat.widget.TintContextWrapper:
    public static boolean shouldWrap(android.content.Context)
    public void <init>(android.content.Context)
    public android.content.res.Resources$Theme getTheme()
    public void setTheme(int)
    public android.content.res.Resources getResources()
    public android.content.res.AssetManager getAssets()
    public final android.content.res.Resources mResources
    public final android.content.res.Resources$Theme mTheme
    public static java.util.ArrayList sCache
androidx.customview.view.AbsSavedState:
    public void <init>()
    public final android.os.Parcelable getSuperState()
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState$1:
    public androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState createFromParcel(android.os.Parcel)
    public androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState[] newArray(int)
androidx.appcompat.widget.AppCompatProgressBarHelper:
    public android.graphics.Bitmap getSampleTile()
    public final android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable)
    public final android.graphics.drawable.shapes.Shape getDrawableShape()
com.android.volley.CacheDispatcher:
    public static synthetic java.util.concurrent.BlockingQueue access$100(com.android.volley.CacheDispatcher)
    public static synthetic com.android.volley.ResponseDelivery access$200(com.android.volley.CacheDispatcher)
    public void quit()
com.google.android.material.shape.ShapePath$PathLineOperation:
    public static synthetic float access$002(com.google.android.material.shape.ShapePath$PathLineOperation,float)
    public static synthetic float access$102(com.google.android.material.shape.ShapePath$PathLineOperation,float)
    public static synthetic float access$100(com.google.android.material.shape.ShapePath$PathLineOperation)
    public static synthetic float access$000(com.google.android.material.shape.ShapePath$PathLineOperation)
androidx.appcompat.view.menu.MenuItemImpl:
    public boolean invoke()
    public int getOrdering()
    public java.lang.String getShortcutLabel()
    public void setSubMenu(androidx.appcompat.view.menu.SubMenuBuilder)
    public java.lang.CharSequence getTitleForItemView(androidx.appcompat.view.menu.MenuView$ItemView)
    public void setExclusiveCheckable(boolean)
    public void setMenuInfo(android.view.ContextMenu$ContextMenuInfo)
    public void actionFormatChanged()
    public boolean shouldShowIcon()
    public boolean requestsActionButton()
    public boolean requiresActionButton()
    public boolean showsTextAsAction()
    public androidx.core.internal.view.SupportMenuItem setActionView(int)
    public androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int)
    public void setActionViewExpanded(boolean)
    public java.lang.Runnable mItemCallback
com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState
androidx.lifecycle.Lifecycle$State:
    public boolean isAtLeast(androidx.lifecycle.Lifecycle$State)
androidx.versionedparcelable.VersionedParcel:
    public boolean isStream()
    public abstract void writeByteArray(byte[])
    public abstract void writeCharSequence(java.lang.CharSequence)
    public abstract void writeInt(int)
    public abstract void writeString(java.lang.String)
    public abstract void writeParcelable(android.os.Parcelable)
    public abstract void writeBoolean(boolean)
    public abstract int readInt()
    public abstract java.lang.String readString()
    public abstract byte[] readByteArray()
    public abstract java.lang.CharSequence readCharSequence()
    public abstract android.os.Parcelable readParcelable()
    public abstract boolean readBoolean()
    public void setSerializationFlags()
    public void writeBoolean(boolean,int)
    public void writeByteArray(byte[],int)
    public void writeCharSequence(java.lang.CharSequence,int)
    public void writeString(java.lang.String,int)
    public java.lang.String readString(java.lang.String,int)
    public byte[] readByteArray(byte[],int)
    public void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int)
    public androidx.versionedparcelable.VersionedParcelable readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int)
    public androidx.versionedparcelable.VersionedParcelable readFromParcel(java.lang.String,androidx.versionedparcelable.VersionedParcel)
    public void writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel)
    public final void writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable)
androidx.core.text.TextDirectionHeuristicCompat:
    public abstract boolean isRtl(java.lang.CharSequence,int,int)
androidx.customview.widget.ExploreByTouchHelper$1:
    public void obtainBounds(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,android.graphics.Rect)
androidx.core.app.SharedElementCallback:
    public abstract void onSharedElementStart(java.util.List,java.util.List,java.util.List)
    public abstract void onSharedElementEnd(java.util.List,java.util.List,java.util.List)
    public abstract void onMapSharedElements(java.util.List,java.util.Map)
com.google.android.material.stateful.ExtendableSavedState$1:
    public com.google.android.material.stateful.ExtendableSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public com.google.android.material.stateful.ExtendableSavedState createFromParcel(android.os.Parcel)
    public com.google.android.material.stateful.ExtendableSavedState[] newArray(int)
io.realm.internal.PendingRow$FrontEnd
com.google.gson.internal.ConstructorConstructor$9:
    public final synthetic com.google.gson.internal.ConstructorConstructor this$0
androidx.recyclerview.widget.OpReorderer:
    public void reorderOps(java.util.List)
    public void swapMoveRemove(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    public void swapMoveUpdate(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    public final void swapMoveOp(java.util.List,int,int)
    public final void swapMoveAdd(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    public final int getLastMoveOutOfOrder(java.util.List)
io.realm.Realm$1$1
androidx.transition.ViewUtilsApi21:
    public static void <clinit>()
    public static boolean sTryHiddenSetAnimationMatrix
com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:
    public final java.lang.reflect.Type getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type,java.lang.Object)
androidx.appcompat.view.SupportMenuInflater$MenuState:
    public void resetGroup()
    public void readGroup(android.util.AttributeSet)
    public void readItem(android.util.AttributeSet)
    public void addItem()
    public boolean hasAddedItem()
    public final char getShortcut(java.lang.String)
androidx.recyclerview.widget.GridLayoutManager$LayoutParams:
    public int getSpanIndex()
    public int getSpanSize()
com.getkeepsafe.relinker.elf.Elf64Header
com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable:
    public static synthetic boolean access$300(com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable)
    public static synthetic boolean access$302(com.google.android.material.bottomsheet.BottomSheetBehavior$SettleRunnable,boolean)
androidx.appcompat.view.menu.StandardMenuPopup:
    public final boolean tryShow()
com.google.gson.LongSerializationPolicy:
    public void <init>(java.lang.String,int)
androidx.viewpager.widget.ViewPager$1:
    public int compare(androidx.viewpager.widget.ViewPager$ItemInfo,androidx.viewpager.widget.ViewPager$ItemInfo)
androidx.customview.widget.FocusStrategy$BoundsAdapter:
    public abstract void obtainBounds(java.lang.Object,android.graphics.Rect)
androidx.transition.RectEvaluator:
    public android.graphics.Rect evaluate(float,android.graphics.Rect,android.graphics.Rect)
    public android.graphics.Rect mRect
com.google.android.material.shape.ShapePath:
    public void reset(float,float)
    public com.google.android.material.shape.ShapePath$ShadowCompatOperation createShadowCompatOperation(android.graphics.Matrix)
    public boolean containsIncompatibleShadowOp()
    public float getStartX()
    public float getStartY()
    public float getEndX()
    public float getEndY()
    public final void addShadowCompatOperation(com.google.android.material.shape.ShapePath$ShadowCompatOperation,float,float)
    public final float getCurrentShadowAngle()
    public final float getEndShadowAngle()
    public final void setStartX(float)
    public final void setStartY(float)
    public final void setEndX(float)
    public final void setEndY(float)
    public final void setCurrentShadowAngle(float)
    public final void setEndShadowAngle(float)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout:
    public final android.graphics.drawable.Drawable createThemedBackground()
androidx.core.text.PrecomputedTextCompat:
    public static void <clinit>()
    public android.text.PrecomputedText getPrecomputedText()
    public androidx.core.text.PrecomputedTextCompat$Params getParams()
    public final android.text.Spannable mText
    public final androidx.core.text.PrecomputedTextCompat$Params mParams
    public final android.text.PrecomputedText mWrapped
    public static final java.lang.Object sLock
    public static java.util.concurrent.Executor sExecutor
com.getkeepsafe.relinker.elf.ElfParser
androidx.appcompat.widget.AbsActionBarView:
    public static int next(int,int,boolean)
org.slf4j.event.SubstituteLoggingEvent:
    public void setLevel(org.slf4j.event.Level)
    public void setMarker(org.slf4j.Marker)
    public void setLoggerName(java.lang.String)
    public org.slf4j.helpers.SubstituteLogger getLogger()
    public void setLogger(org.slf4j.helpers.SubstituteLogger)
    public void setMessage(java.lang.String)
    public void setArgumentArray(java.lang.Object[])
    public void setTimeStamp(long)
    public void setThreadName(java.lang.String)
    public void setThrowable(java.lang.Throwable)
    public org.slf4j.event.Level level
    public org.slf4j.Marker marker
    public java.lang.String loggerName
    public java.lang.String threadName
    public java.lang.String message
    public long timeStamp
    public java.lang.Throwable throwable
androidx.core.view.LayoutInflaterCompat
androidx.core.view.MotionEventCompat
androidx.core.view.NestedScrollingChildHelper:
    public void setNestedScrollingEnabled(boolean)
    public boolean isNestedScrollingEnabled()
    public boolean hasNestedScrollingParent()
    public boolean startNestedScroll(int)
    public void stopNestedScroll()
    public boolean dispatchNestedPreScroll(int,int,int[],int[])
    public final void setNestedScrollingParentForType(int,android.view.ViewParent)
    public final int[] getTempNestedScrollConsumed()
com.google.android.material.internal.CollapsingTextHelper:
    public static boolean isClose(float,float)
    public void setTextSizeInterpolator(android.animation.TimeInterpolator)
    public void setPositionInterpolator(android.animation.TimeInterpolator)
    public void setExpandedTextSize(float)
    public void setExpandedTextColor(android.content.res.ColorStateList)
    public void setExpandedBounds(int,int,int,int)
    public void setExpandedBounds(android.graphics.Rect)
    public void setCollapsedBounds(int,int,int,int)
    public void setCollapsedBounds(android.graphics.Rect)
    public void getCollapsedTextActualBounds(android.graphics.RectF,int,int)
    public float getExpandedTextHeight()
    public void setExpandedTextGravity(int)
    public void setCollapsedTextAppearance(int)
    public void setCollapsedTypeface(android.graphics.Typeface)
    public final boolean setState(int[])
    public final boolean isStateful()
    public float getExpansionFraction()
    public void draw(android.graphics.Canvas)
    public void setText(java.lang.CharSequence)
    public android.content.res.ColorStateList getCollapsedTextColor()
    public final float getCollapsedTextLeftBound(int,int)
    public final float getCollapsedTextRightBound(android.graphics.RectF,int,int)
    public final void getTextPaintExpanded(android.text.TextPaint)
    public final void getTextPaintCollapsed(android.text.TextPaint)
    public final boolean setCollapsedTypefaceInternal(android.graphics.Typeface)
    public final boolean setExpandedTypefaceInternal(android.graphics.Typeface)
    public final void calculateCurrentOffsets()
    public final int getCurrentExpandedTextColor()
    public final void calculateBaseOffsets()
    public final void interpolateBounds(float)
    public final void setCollapsedTextBlend(float)
    public final void setExpandedTextBlend(float)
    public final boolean shouldDrawMultiline()
    public final void drawMultinlineTransition(android.graphics.Canvas,float,float)
    public final boolean isDefaultIsRtl()
    public final android.text.StaticLayout createStaticLayout(int,float,boolean)
    public final void ensureExpandedTexture()
    public final void clearTexture()
    public com.google.android.material.resources.CancelableFontCallback expandedFontCallback
    public float expandedShadowRadius
    public float expandedShadowDx
    public float expandedShadowDy
    public android.content.res.ColorStateList expandedShadowColor
    public static final boolean USE_SCALING_TEXTURE
androidx.appcompat.widget.AppCompatRadioButton:
    public void <init>(android.content.Context,android.util.AttributeSet)
androidx.appcompat.app.AppCompatDelegateImpl:
    public void <init>(android.app.Activity,androidx.appcompat.app.AppCompatCallback)
    public void <init>(android.app.Dialog,androidx.appcompat.app.AppCompatCallback)
    public void attachBaseContext(android.content.Context)
    public void onPostCreate(android.os.Bundle)
    public androidx.appcompat.app.ActionBar getSupportActionBar()
    public final androidx.appcompat.app.ActionBar peekSupportActionBar()
    public void setSupportActionBar(androidx.appcompat.widget.Toolbar)
    public final android.content.Context getActionBarThemedContext()
    public android.view.MenuInflater getMenuInflater()
    public android.view.View findViewById(int)
    public void onConfigurationChanged(android.content.res.Configuration)
    public void onStart()
    public void onPostResume()
    public void onSaveInstanceState(android.os.Bundle)
    public void onDestroy()
    public void setTheme(int)
    public void onSubDecorInstalled()
    public final java.lang.CharSequence getTitle()
    public void onPanelClosed(int)
    public void onMenuOpened(int)
    public androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
    public androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback)
    public boolean isHandleNativeActionModesEnabled()
    public boolean onBackPressed()
    public boolean onKeyShortcut(int,android.view.KeyEvent)
    public boolean onKeyUp(int,android.view.KeyEvent)
    public boolean onKeyDown(int,android.view.KeyEvent)
    public android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
    public void closePanel(int)
    public void dismissPopups()
    public int getLocalNightMode()
    public int mapNightMode(int)
    public final void cleanupAutoManagers()
    public final android.view.ViewGroup createSubDecor()
    public final void applyFixedSizeWindow()
    public final boolean shouldInheritContext(android.view.ViewParent)
    public final androidx.appcompat.app.AppCompatActivity tryUnwrapContext()
    public final boolean initializePanelDecor(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)
    public final void reopenMenu(boolean)
    public final boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)
    public final boolean initializePanelContent(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)
    public final boolean onKeyDownPanel(int,android.view.KeyEvent)
    public final boolean onKeyUpPanel(int,android.view.KeyEvent)
    public final int sanitizeWindowFeatureId(int)
    public final int calculateNightMode()
    public final boolean updateForNightMode(int,boolean)
    public final void updateResourcesConfigurationForNightMode(int,boolean)
    public final androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoBatteryNightModeManager()
    public final boolean isActivityManifestHandlingUiMode()
com.google.android.material.snackbar.BaseTransientBottomBar$BehaviorDelegate:
    public boolean canSwipeDismissView(android.view.View)
    public void onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)
    public com.google.android.material.snackbar.SnackbarManager$Callback managerCallback
com.google.gson.internal.bind.TypeAdapters$28:
    public java.util.Locale read(com.google.gson.stream.JsonReader)
    public void write(com.google.gson.stream.JsonWriter,java.util.Locale)
com.google.android.material.floatingactionbutton.FloatingActionButton$ShadowDelegateImpl:
    public void setShadowPadding(int,int,int,int)
    public void setBackgroundDrawable(android.graphics.drawable.Drawable)
    public boolean isCompatPaddingEnabled()
com.google.android.material.animation.MatrixEvaluator:
    public android.graphics.Matrix evaluate(float,android.graphics.Matrix,android.graphics.Matrix)
androidx.fragment.app.FragmentManagerImpl$5:
    public final synthetic androidx.fragment.app.FragmentManagerImpl this$0
androidx.transition.PathProperty
com.android.volley.ExecutorDelivery$ResponseDeliveryRunnable:
    public final synthetic com.android.volley.ExecutorDelivery this$0
com.jaredrummler.materialspinner.MaterialSpinnerBaseAdapter$ViewHolder:
    public void <init>(android.widget.TextView)
    public static synthetic android.widget.TextView access$100(com.jaredrummler.materialspinner.MaterialSpinnerBaseAdapter$ViewHolder)
io.realm.ProxyState:
    public io.realm.BaseRealm getRealm$realm()
    public void setRealm$realm(io.realm.BaseRealm)
    public io.realm.internal.Row getRow$realm()
    public void setRow$realm(io.realm.internal.Row)
    public void setAcceptDefaultValue$realm(boolean)
    public void setExcludeFields$realm(java.util.List)
    public void setConstructionFinished()
    public void onQueryFinished(io.realm.internal.Row)
    public final void notifyQueryFinished()
    public final void registerToObjectNotifier()
    public io.realm.RealmModel model
    public boolean underConstruction
    public io.realm.internal.OsObject osObject
    public boolean acceptDefaultValue
    public java.util.List excludeFields
com.google.android.material.internal.CheckableImageButton$SavedState:
    public final void readFromParcel(android.os.Parcel)
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate:
    public void saveOriginalDelegate(android.view.View)
    public androidx.core.view.AccessibilityDelegateCompat getAndRemoveOriginalDelegateForItem(android.view.View)
androidx.core.graphics.TypefaceCompatUtil
com.android.volley.ResponseDelivery:
    public abstract void postResponse(com.android.volley.Request,com.android.volley.Response)
    public abstract void postResponse(com.android.volley.Request,com.android.volley.Response,java.lang.Runnable)
    public abstract void postError(com.android.volley.Request,com.android.volley.VolleyError)
androidx.appcompat.app.AppCompatDelegateImpl$1:
    public final boolean shouldWrapException(java.lang.Throwable)
org.slf4j.helpers.SubstituteLogger:
    public void setDelegate(org.slf4j.Logger)
    public void log(org.slf4j.event.LoggingEvent)
    public boolean isDelegateNull()
    public boolean isDelegateNOP()
    public final org.slf4j.Logger getEventRecordingLogger()
androidx.appcompat.app.ResourcesFlusher:
    public static void flush(android.content.res.Resources)
    public static void flushLollipops(android.content.res.Resources)
    public static void flushMarshmallows(android.content.res.Resources)
    public static void flushNougats(android.content.res.Resources)
    public static boolean determineGroups(androidx.constraintlayout.solver.widgets.ConstraintWidget,java.util.List,boolean)
    public static void invalidate(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintWidgetGroup)
    public static void setConnection(androidx.constraintlayout.solver.widgets.ConstraintAnchor)
    public static void singleGroup(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer)
    public static void updateSizeDependentWidgets(androidx.constraintlayout.solver.widgets.ConstraintWidget,int,int)
    public static java.lang.String permissionToOp(java.lang.String)
    public static int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)
    public static boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent)
    public static void navigateUpTo(android.app.Activity,android.content.Intent)
    public static java.lang.String getParentActivityName(android.app.Activity)
    public static int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)
    public static android.content.res.ColorStateList inflate(android.content.res.Resources,int,android.content.res.Resources$Theme)
    public static android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public static android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])
    public static int modulateColorAlpha(int,float)
    public static androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)
    public static androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)
    public static int getType(android.content.res.TypedArray,int)
    public static androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry readFont(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)
    public static android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public static androidx.core.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public static androidx.core.content.res.GradientColorInflaterCompat$ColorStops checkColors(androidx.core.content.res.GradientColorInflaterCompat$ColorStops,int,int,boolean,int)
    public static android.graphics.Shader$TileMode parseTileMode(int)
    public static android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)
    public static android.graphics.Typeface getFont(android.content.Context,int)
    public static void getFont(android.content.Context,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler)
    public static android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback)
    public static android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)
    public static boolean getNamedBoolean(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,boolean)
    public static android.content.res.ColorStateList getNamedColorStateList(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int)
    public static android.content.res.ColorStateList getNamedColorStateListFromInt(android.util.TypedValue)
    public static int getNamedResourceId(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)
    public static android.util.TypedValue peekNamedValue(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int)
    public static void updateNodes(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[])
    public static int nextStart(java.lang.String,int)
    public static void addNode(java.util.ArrayList,char,float[])
    public static float[] getFloats(java.lang.String)
    public static void extract(java.lang.String,int,androidx.core.graphics.PathParser$ExtractFloatResult)
    public static java.nio.ByteBuffer mmap(java.io.File)
    public static java.nio.ByteBuffer copyToDirectBuffer(android.content.Context,android.content.res.Resources,int)
    public static void closeQuietly(java.io.Closeable)
    public static void jumpToCurrentState(android.graphics.drawable.Drawable)
    public static void setAutoMirrored(android.graphics.drawable.Drawable,boolean)
    public static boolean isAutoMirrored(android.graphics.drawable.Drawable)
    public static void setHotspot(android.graphics.drawable.Drawable,float,float)
    public static void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)
    public static int getAlpha(android.graphics.drawable.Drawable)
    public static void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme)
    public static boolean canApplyTheme(android.graphics.drawable.Drawable)
    public static android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)
    public static void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public static android.graphics.drawable.Drawable unwrap(android.graphics.drawable.Drawable)
    public static float clamp(float,float,float)
    public static boolean equals(java.lang.Object,java.lang.Object)
    public static varargs int hash(java.lang.Object[])
    public static void checkArgument(boolean,java.lang.Object)
    public static void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int)
    public static int getAbsoluteGravity(int,int)
    public static void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)
    public static void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)
    public static int getMarginStart(android.view.ViewGroup$MarginLayoutParams)
    public static int getMarginEnd(android.view.ViewGroup$MarginLayoutParams)
    public static void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int)
    public static android.view.MenuItem setActionProvider(android.view.MenuItem,androidx.core.view.ActionProvider)
    public static void setContentDescription(android.view.MenuItem,java.lang.CharSequence)
    public static void setTooltipText(android.view.MenuItem,java.lang.CharSequence)
    public static void setNumericShortcut(android.view.MenuItem,char,int)
    public static void setAlphabeticShortcut(android.view.MenuItem,char,int)
    public static void setIconTintList(android.view.MenuItem,android.content.res.ColorStateList)
    public static void setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode)
    public static boolean isFromSource(android.view.MotionEvent,int)
    public static boolean isTransitionGroup(android.view.ViewGroup)
    public static boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent)
    public static boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)
    public static void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int,int)
    public static void onStopNestedScroll(android.view.ViewParent,android.view.View,int)
    public static void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int,int[])
    public static void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)
    public static int getContentChangeTypes(android.view.accessibility.AccessibilityEvent)
    public static void setSource(android.view.accessibility.AccessibilityRecord,android.view.View,int)
    public static void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int)
    public static void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int)
    public static void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList)
    public static android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton)
    public static void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode)
    public static void onPull(android.widget.EdgeEffect,float,float)
    public static android.content.res.ColorStateList getImageTintList(android.widget.ImageView)
    public static void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)
    public static android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView)
    public static void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode)
    public static void scrollListBy(android.widget.ListView,int)
    public static void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int)
    public static void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
    public static android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView)
    public static int getFirstBaselineToTopHeight(android.widget.TextView)
    public static int getLastBaselineToBottomHeight(android.widget.TextView)
    public static void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params)
    public static android.text.TextDirectionHeuristic getTextDirectionHeuristic(android.widget.TextView)
    public static int getTextDirection(android.text.TextDirectionHeuristic)
    public static void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList)
    public static void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode)
    public static java.lang.Object findNextFocusInRelativeDirection(java.lang.Object,androidx.customview.widget.FocusStrategy$CollectionAdapter,androidx.customview.widget.FocusStrategy$BoundsAdapter,java.lang.Object,int,boolean,boolean)
    public static java.lang.Object getNextFocusable(java.lang.Object,java.util.ArrayList,boolean)
    public static java.lang.Object getPreviousFocusable(java.lang.Object,java.util.ArrayList,boolean)
    public static java.lang.Object findNextFocusInAbsoluteDirection(java.lang.Object,androidx.customview.widget.FocusStrategy$CollectionAdapter,androidx.customview.widget.FocusStrategy$BoundsAdapter,java.lang.Object,android.graphics.Rect,int)
    public static boolean isBetterCandidate(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)
    public static int getWeightedDistanceFor(int,int)
    public static boolean isToDirectionOf(int,android.graphics.Rect,android.graphics.Rect)
    public static int majorAxisDistanceRaw(int,android.graphics.Rect,android.graphics.Rect)
    public static int majorAxisDistanceToFarEdge(int,android.graphics.Rect,android.graphics.Rect)
    public static int majorAxisDistanceToFarEdgeRaw(int,android.graphics.Rect,android.graphics.Rect)
    public static void addPauseListener(android.animation.Animator,android.animation.AnimatorListenerAdapter)
    public static void pause(android.animation.Animator)
    public static void resume(android.animation.Animator)
    public static android.animation.PropertyValuesHolder ofPointF(android.util.Property,android.graphics.Path)
    public static void suppressLayout(android.view.ViewGroup,boolean)
    public static void cancelLayoutTransition(android.animation.LayoutTransition)
    public static android.view.animation.Interpolator loadInterpolator(android.content.Context,int)
    public static android.view.animation.Interpolator createInterpolatorFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser)
    public static android.animation.Animator loadAnimator(android.content.Context,int)
    public static android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int)
    public static android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float)
    public static void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser)
    public static void setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,int,float,org.xmlpull.v1.XmlPullParser)
    public static void setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)
    public static android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,float)
    public static android.animation.PropertyValuesHolder[] loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)
    public static int inferValueTypeOfKeyframe(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser)
    public static int inferValueTypeFromValues(android.content.res.TypedArray,int,int)
    public static android.animation.PropertyValuesHolder loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)
    public static void distributeKeyframes(android.animation.Keyframe[],float,int,int)
    public static android.animation.Keyframe loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser)
    public static android.animation.ObjectAnimator loadObjectAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,float,org.xmlpull.v1.XmlPullParser)
    public static java.lang.String formatEpochAsRfc1123(long)
    public static java.text.SimpleDateFormat newRfc1123Formatter()
    public static java.util.Map toHeaderMap(java.util.List)
    public static java.util.List toAllHeaderList(java.util.Map)
    public static com.android.volley.RequestQueue newRequestQueue(android.content.Context,com.android.volley.toolbox.BaseHttpStack)
    public static com.android.volley.RequestQueue newRequestQueue(android.content.Context,com.android.volley.Network)
    public static void loadLibrary(android.content.Context,java.lang.String,java.lang.String)
    public static void loadLibrary(android.content.Context,java.lang.String,java.lang.String,com.getkeepsafe.relinker.ReLinker$LoadListener)
    public static int saveLayerAlpha(android.graphics.Canvas,float,float,float,float,int)
    public static android.animation.Animator$AnimatorListener createCircularRevealListener(com.google.android.material.circularreveal.CircularRevealWidget)
    public static int getColor(android.content.Context,int,java.lang.String)
    public static int getColor(android.view.View,int,int)
    public static int layer(android.view.View,int,int,float)
    public static int layer(int,int)
    public static java.lang.String getMonthDayOfWeekDay(long)
    public static java.lang.String getMonthDayOfWeekDay(long,java.util.Locale)
    public static java.lang.String getYearMonthDayOfWeekDay(long)
    public static java.lang.String getYearMonthDayOfWeekDay(long,java.util.Locale)
    public static boolean isMeizuDevice()
    public static float dpToPx(android.content.Context,int)
    public static void doOnApplyWindowInsets(android.view.View,com.google.android.material.internal.ViewUtils$OnApplyWindowInsetsListener)
    public static void requestApplyInsetsWhenAttached(android.view.View)
    public static float getParentAbsoluteElevation(android.view.View)
    public static float distanceToFurthestCorner(float,float,float,float,float,float)
    public static float max(float,float,float,float)
    public static int resolveOrThrow(android.view.View,int)
    public static com.google.android.material.resources.TextAppearance getTextAppearance(android.content.Context,android.content.res.TypedArray,int)
    public static int getDimensionPixelSize(android.content.Context,android.content.res.TypedArray,int,int)
    public static int getIndexWithValue(android.content.res.TypedArray,int,int)
    public static boolean shouldLoadFontSynchronously()
    public static com.google.android.material.shape.CornerTreatment createDefaultCornerTreatment()
    public static com.google.android.material.shape.EdgeTreatment createDefaultEdgeTreatment()
    public static void setParentAbsoluteElevation(android.view.View)
    public static java.text.DateFormat getUSDateTimeFormat(int,int)
    public static java.lang.String getDatePartOfDateTimePattern(int)
    public static java.lang.String getTimePartOfDateTimePattern(int)
    public static void write(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter)
    public static int darker(int,float)
    public static boolean isRtl(android.content.Context)
    public static android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
    public static java.lang.reflect.Field sLayoutInflaterFactory2Field
    public static boolean sCheckedField
    public static android.animation.LayoutTransition sEmptyLayoutTransition
    public static java.lang.reflect.Field sLayoutSuppressedField
    public static boolean sLayoutSuppressedFieldFetched
    public static java.lang.reflect.Method sCancelMethod
    public static boolean sCancelMethodFetched
    public static boolean shouldLoadFontSynchronously
io.realm.BaseRealm$ThreadLocalRealmObjectContext:
    public io.realm.BaseRealm$RealmObjectContext initialValue()
com.google.gson.JsonParser:
    public com.google.gson.JsonElement parse(java.io.Reader)
com.android.volley.RetryPolicy
androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector:
    public void doBeforeTextChanged(android.widget.AutoCompleteTextView)
    public void doAfterTextChanged(android.widget.AutoCompleteTextView)
    public void ensureImeVisible(android.widget.AutoCompleteTextView,boolean)
androidx.core.view.accessibility.AccessibilityEventCompat
androidx.core.content.res.FontResourcesParserCompat
com.jaredrummler.materialspinner.MaterialSpinner$OnItemSelectedListener:
    public abstract void onItemSelected(com.jaredrummler.materialspinner.MaterialSpinner,int,long,java.lang.Object)
com.google.android.material.datepicker.MaterialCalendar$OnDayClickListener:
    public abstract void onDayClick(long)
androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable:
    public void cancel()
    public void post()
androidx.fragment.app.FragmentActivity$HostCallbacks:
    public void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
    public boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment)
    public android.view.LayoutInflater onGetLayoutInflater()
    public androidx.fragment.app.FragmentActivity onGetHost()
    public void onSupportInvalidateOptionsMenu()
    public boolean onHasWindowAnimations()
    public int onGetWindowAnimations()
    public void onAttachFragment(androidx.fragment.app.Fragment)
    public java.lang.Object onGetHost()
androidx.recyclerview.widget.AdapterHelper:
    public void <init>(androidx.recyclerview.widget.AdapterHelper$Callback,boolean)
    public void reset()
    public boolean hasAnyUpdateTypes(int)
    public int findPositionOffset(int)
    public int applyPendingUpdatesToPosition(int)
    public boolean hasUpdates()
    public final void applyMove(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    public final void applyRemove(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    public final void applyUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    public final void applyAdd(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    public java.lang.Runnable mOnItemProcessedCallback
com.android.volley.AuthFailureError:
    public android.content.Intent mResolutionIntent
androidx.core.widget.TextViewCompat
androidx.recyclerview.widget.RecyclerView$1
androidx.core.graphics.PathParser
io.realm.internal.async.RealmAsyncTaskImpl
com.google.android.material.datepicker.MaterialCalendarGridView:
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public static boolean skipMonth(java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Long)
    public static int horizontalMidPoint(android.view.View)
    public final void gainFocus(int,android.graphics.Rect)
androidx.core.graphics.TypefaceCompatBaseImpl$2
io.realm.DynamicRealmObject:
    public java.lang.String[] getFieldNames()
com.android.volley.toolbox.BasicNetwork:
    public void <init>(com.android.volley.toolbox.HttpStack)
    public void <init>(com.android.volley.toolbox.HttpStack,com.android.volley.toolbox.ByteArrayPool)
    public void <init>(com.android.volley.toolbox.BaseHttpStack,com.android.volley.toolbox.ByteArrayPool)
    public final com.android.volley.toolbox.HttpStack mHttpStack
androidx.core.content.PermissionChecker
com.google.gson.internal.bind.TypeAdapters$15:
    public java.lang.Character read(com.google.gson.stream.JsonReader)
    public void write(com.google.gson.stream.JsonWriter,java.lang.Character)
com.guilhermedaros.museunfc.Fragments.FragmentMain$1:
    public final synthetic com.guilhermedaros.museunfc.Fragments.FragmentMain this$0
androidx.cardview.widget.CardViewDelegate:
    public abstract void setMinWidthHeightInternal(int,int)
    public abstract android.view.View getCardView()
androidx.transition.AutoTransition:
    public final void init()
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager
androidx.transition.ViewGroupUtilsApi14$1
io.realm.internal.OsSchemaInfo:
    public static long[] convertObjectSchemaInfoListToNativePointerArray(java.util.Collection)
androidx.lifecycle.Lifecycle:
    public abstract void removeObserver(androidx.lifecycle.LifecycleObserver)
    public abstract androidx.lifecycle.Lifecycle$State getCurrentState()
    public java.util.concurrent.atomic.AtomicReference mInternalScopeRef
com.android.volley.Header:
    public final java.lang.String getName()
    public final java.lang.String getValue()
androidx.appcompat.view.ActionMode:
    public void setTag(java.lang.Object)
    public java.lang.Object getTag()
    public boolean getTitleOptionalHint()
androidx.recyclerview.widget.RecyclerView$OnFlingListener:
    public abstract boolean onFling(int,int)
androidx.recyclerview.widget.GapWorker:
    public static boolean isPrefetchPositionAttached(androidx.recyclerview.widget.RecyclerView,int)
    public void add(androidx.recyclerview.widget.RecyclerView)
    public void remove(androidx.recyclerview.widget.RecyclerView)
    public final void buildTaskList()
    public final void prefetchInnerRecyclerViewWithDeadline(androidx.recyclerview.widget.RecyclerView,long)
    public final void flushTaskWithDeadline(androidx.recyclerview.widget.GapWorker$Task,long)
    public final void flushTasksWithDeadline(long)
androidx.constraintlayout.solver.Pools$SimplePool:
    public void releaseAll(java.lang.Object[],int)
androidx.appcompat.widget.AppCompatTextView:
    public void <init>(android.content.Context)
    public final void consumeTextFutureAndSetBlocking()
com.google.android.material.appbar.MaterialToolbar:
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public final void initBackground(android.content.Context)
androidx.appcompat.widget.AppCompatImageHelper:
    public boolean hasOverlappingRendering()
    public android.content.res.ColorStateList getSupportImageTintList()
    public android.graphics.PorterDuff$Mode getSupportImageTintMode()
    public final boolean shouldApplyFrameworkTintUsingColorFilter()
    public final boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable)
    public androidx.appcompat.widget.TintInfo mInternalImageTint
    public androidx.appcompat.widget.TintInfo mTmpInfo
com.getkeepsafe.relinker.ApkLibraryInstaller:
    public void installLibrary(android.content.Context,java.lang.String[],java.lang.String,java.io.File,com.getkeepsafe.relinker.ReLinkerInstance)
    public final long copy(java.io.InputStream,java.io.OutputStream)
    public final void closeSilently(java.io.Closeable)
com.getkeepsafe.relinker.ReLinker$Logger
androidx.fragment.app.FragmentController:
    public static androidx.fragment.app.FragmentController createController(androidx.fragment.app.FragmentHostCallback)
    public androidx.fragment.app.FragmentManager getSupportFragmentManager()
    public androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)
    public void attachHost(androidx.fragment.app.Fragment)
    public android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
    public android.os.Parcelable saveAllState()
    public void restoreSaveState(android.os.Parcelable)
    public void dispatchCreate()
    public void dispatchActivityCreated()
    public void dispatchStart()
    public void dispatchResume()
    public void dispatchPause()
    public void dispatchStop()
    public void dispatchDestroy()
    public void dispatchMultiWindowModeChanged(boolean)
    public void dispatchPictureInPictureModeChanged(boolean)
    public void dispatchConfigurationChanged(android.content.res.Configuration)
    public void dispatchLowMemory()
    public boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
    public boolean dispatchPrepareOptionsMenu(android.view.Menu)
    public boolean dispatchOptionsItemSelected(android.view.MenuItem)
    public boolean dispatchContextItemSelected(android.view.MenuItem)
    public void dispatchOptionsMenuClosed(android.view.Menu)
    public boolean execPendingActions()
com.android.volley.Cache:
    public abstract com.android.volley.Cache$Entry get(java.lang.String)
    public abstract void put(java.lang.String,com.android.volley.Cache$Entry)
    public abstract void initialize()
com.google.android.material.bottomsheet.BottomSheetBehavior:
    public static synthetic com.google.android.material.shape.MaterialShapeDrawable access$000(com.google.android.material.bottomsheet.BottomSheetBehavior)
    public static synthetic int access$102(com.google.android.material.bottomsheet.BottomSheetBehavior,int)
    public static synthetic void access$200(com.google.android.material.bottomsheet.BottomSheetBehavior,boolean)
    public static synthetic boolean access$400(com.google.android.material.bottomsheet.BottomSheetBehavior)
    public static synthetic boolean access$500(com.google.android.material.bottomsheet.BottomSheetBehavior)
    public static synthetic int access$600(com.google.android.material.bottomsheet.BottomSheetBehavior)
    public static synthetic boolean access$700(com.google.android.material.bottomsheet.BottomSheetBehavior)
    public void setFitToContents(boolean)
    public final void setPeekHeight(int,boolean)
    public void setHalfExpandedRatio(float)
    public void setExpandedOffset(int)
    public void setHideable(boolean)
    public void setSkipCollapsed(boolean)
    public void setDraggable(boolean)
    public void setSaveFlags(int)
    public void setGestureInsetBottomIgnored(boolean)
    public boolean isGestureInsetBottomIgnored()
    public final void calculateHalfExpandedOffset()
    public final void reset()
    public final void restoreOptionalState(com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState)
    public final void createMaterialShapeDrawable(android.content.Context,android.util.AttributeSet,boolean)
    public final void createShapeValueAnimator()
    public final void setSystemGestureInsets(android.view.View)
    public final float getYVelocity()
com.google.gson.JsonPrimitive:
    public static boolean isPrimitiveOrString(java.lang.Object)
    public boolean isBoolean()
    public java.lang.Boolean getAsBooleanWrapper()
    public boolean isNumber()
    public boolean isString()
    public double getAsDouble()
    public long getAsLong()
    public int getAsInt()
androidx.constraintlayout.solver.widgets.ChainHead:
    public static boolean isMatchConstraintEqualityCandidate(androidx.constraintlayout.solver.widgets.ConstraintWidget,int)
    public void define()
    public final void defineChainProperties()
com.google.gson.internal.Excluder:
    public com.google.gson.internal.Excluder clone()
    public boolean excludeField(java.lang.reflect.Field,boolean)
    public boolean excludeClass(java.lang.Class,boolean)
    public final boolean isStatic(java.lang.Class)
    public final boolean isValidSince(com.google.gson.annotations.Since)
    public final boolean isValidUntil(com.google.gson.annotations.Until)
    public boolean requireExpose
io.realm.internal.objectstore.OsObjectBuilder$9
androidx.fragment.app.BackStackState$1:
    public androidx.fragment.app.BackStackState createFromParcel(android.os.Parcel)
    public androidx.fragment.app.BackStackState[] newArray(int)
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback:
    public androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback wrap(android.graphics.drawable.Drawable$Callback)
    public android.graphics.drawable.Drawable$Callback unwrap()
androidx.appcompat.widget.ActionBarOverlayLayout:
    public boolean isInOverlayMode()
    public androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateDefaultLayoutParams()
    public androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
    public final androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View)
    public final void postRemoveActionBarHideOffset()
    public final void postAddActionBarHideOffset()
    public final void removeActionBarHideOffset()
    public final void addActionBarHideOffset()
com.android.volley.VolleyLog:
    public static varargs void e(java.lang.Throwable,java.lang.String,java.lang.Object[])
    public static varargs void wtf(java.lang.String,java.lang.Object[])
    public static java.lang.String TAG
com.android.volley.toolbox.DiskBasedCache:
    public void <init>(java.io.File,int)
    public static void writeHeaderList(java.util.List,java.io.OutputStream)
    public static java.util.List readHeaderList(com.android.volley.toolbox.DiskBasedCache$CountingInputStream)
    public synchronized com.android.volley.Cache$Entry get(java.lang.String)
    public synchronized void initialize()
    public java.io.InputStream createInputStream(java.io.File)
    public java.io.OutputStream createOutputStream(java.io.File)
    public final void removeEntry(java.lang.String)
com.google.android.material.ripple.RippleDrawableCompat
androidx.core.text.BidiFormatter$Builder
com.google.android.material.internal.StaticLayoutBuilderCompat:
    public static com.google.android.material.internal.StaticLayoutBuilderCompat obtain(java.lang.CharSequence,android.text.TextPaint,int)
    public com.google.android.material.internal.StaticLayoutBuilderCompat setAlignment(android.text.Layout$Alignment)
    public com.google.android.material.internal.StaticLayoutBuilderCompat setIncludePad(boolean)
    public com.google.android.material.internal.StaticLayoutBuilderCompat setMaxLines(int)
    public com.google.android.material.internal.StaticLayoutBuilderCompat setEllipsize(android.text.TextUtils$TruncateAt)
    public com.google.android.material.internal.StaticLayoutBuilderCompat setIsRtl(boolean)
    public final void createConstructorWithReflection()
androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder:
    public final androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback
androidx.lifecycle.LiveData$ObserverWrapper:
    public void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.Observer)
    public boolean isAttachedTo(androidx.lifecycle.LifecycleOwner)
    public void detachObserver()
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField:
    public abstract boolean writeField(java.lang.Object)
    public abstract void write(com.google.gson.stream.JsonWriter,java.lang.Object)
    public abstract void read(com.google.gson.stream.JsonReader,java.lang.Object)
com.google.gson.internal.bind.TypeAdapters$20:
    public java.lang.StringBuffer read(com.google.gson.stream.JsonReader)
    public void write(com.google.gson.stream.JsonWriter,java.lang.StringBuffer)
androidx.arch.core.executor.DefaultTaskExecutor$1:
    public final synthetic androidx.arch.core.executor.DefaultTaskExecutor this$0
androidx.core.util.Pools$SimplePool:
    public final boolean isInPool(java.lang.Object)
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl:
    public final boolean doCheck(java.lang.CharSequence,int,int)
io.realm.internal.OsCollectionChangeSet:
    public void <init>(long,boolean)
com.android.volley.Network:
    public abstract com.android.volley.NetworkResponse performRequest(com.android.volley.Request)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat:
    public void <init>(java.lang.Object)
    public void <init>(int,java.lang.CharSequence,java.lang.Class)
    public java.lang.CharSequence getLabel()
    public boolean perform(android.view.View,android.os.Bundle)
    public androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat createReplacementAction(java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand)
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_FOCUS
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_FOCUS
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SELECT
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_SELECTION
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_LONG_CLICK
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_ACCESSIBILITY_FOCUS
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_ACCESSIBILITY_FOCUS
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_NEXT_AT_MOVEMENT_GRANULARITY
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_NEXT_HTML_ELEMENT
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PREVIOUS_HTML_ELEMENT
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_COPY
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PASTE
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CUT
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_SELECTION
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_TEXT
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SHOW_ON_SCREEN
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_TO_POSITION
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_LEFT
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_RIGHT
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PAGE_UP
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PAGE_DOWN
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PAGE_LEFT
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PAGE_RIGHT
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CONTEXT_CLICK
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_PROGRESS
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_MOVE_WINDOW
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SHOW_TOOLTIP
    public static final androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_HIDE_TOOLTIP
com.getkeepsafe.relinker.SystemLibraryLoader:
    public void loadLibrary(java.lang.String)
    public void loadPath(java.lang.String)
    public java.lang.String unmapLibraryName(java.lang.String)
    public java.lang.String[] supportedAbis()
androidx.core.util.Pools$Pool
io.realm.BaseRealm:
    public void <init>(io.realm.RealmConfiguration,io.realm.internal.OsSchemaInfo,io.realm.internal.OsSharedRealm$VersionID)
    public static io.realm.internal.OsSharedRealm$MigrationCallback createMigrationCallback(io.realm.RealmMigration)
    public void beginTransaction()
    public void commitTransaction()
    public void cancelTransaction()
    public java.lang.String getPath()
    public io.realm.RealmConfiguration getConfiguration()
    public void doClose()
    public io.realm.RealmModel get(java.lang.Class,java.lang.String,long)
    public io.realm.internal.OsSharedRealm getSharedRealm()
androidx.recyclerview.widget.RecyclerView$Adapter:
    public void onBindViewHolder1(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)
    public final androidx.recyclerview.widget.RecyclerView$ViewHolder createViewHolder(android.view.ViewGroup,int)
    public final void bindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)
    public int getItemViewType()
    public void setHasStableIds(boolean)
    public final boolean hasStableIds()
    public void onViewRecycled()
    public boolean onFailedToRecycleView()
    public void onViewAttachedToWindow()
    public void onViewDetachedFromWindow()
    public final boolean hasObservers()
    public void registerAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver)
    public void unregisterAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver)
    public void onAttachedToRecyclerView()
    public void onDetachedFromRecyclerView()
    public final void notifyDataSetChanged()
androidx.fragment.app.Fragment:
    public final void restoreViewState(android.os.Bundle)
    public final android.os.Bundle getArguments()
    public final boolean isStateSaved()
    public final androidx.fragment.app.Fragment getTargetFragment()
    public final android.content.Context requireContext()
    public final androidx.fragment.app.FragmentActivity getActivity()
    public final androidx.fragment.app.FragmentActivity requireActivity()
    public final java.lang.Object getHost()
    public final java.lang.String getString(int)
    public final androidx.fragment.app.FragmentManager getFragmentManager()
    public final androidx.fragment.app.Fragment getParentFragment()
    public final boolean isAdded()
    public final boolean isHidden()
    public void onHiddenChanged()
    public final boolean getRetainInstance()
    public void onActivityResult()
    public void onRequestPermissionsResult()
    public android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle)
    public android.view.LayoutInflater getLayoutInflater()
    public void onInflate()
    public void onAttachFragment()
    public void onAttach()
    public android.view.animation.Animation onCreateAnimation()
    public android.animation.Animator onCreateAnimator()
    public void restoreChildFragmentState(android.os.Bundle)
    public void onViewCreated()
    public android.view.View getView()
    public void onActivityCreated()
    public void onViewStateRestored()
    public void onStart()
    public void onResume()
    public void onMultiWindowModeChanged()
    public void onPictureInPictureModeChanged()
    public void onPrimaryNavigationFragmentChanged()
    public void onPause()
    public void onStop()
    public void onDestroyView()
    public void onDestroy()
    public void initState()
    public void onCreateOptionsMenu()
    public void onPrepareOptionsMenu()
    public void onDestroyOptionsMenu()
    public boolean onOptionsItemSelected()
    public void onOptionsMenuClosed()
    public boolean onContextItemSelected()
    public java.lang.Object getReturnTransition()
    public java.lang.Object getReenterTransition()
    public java.lang.Object getSharedElementReturnTransition()
    public boolean getAllowEnterTransitionOverlap()
    public boolean getAllowReturnTransitionOverlap()
    public void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
    public void performAttach()
    public void performCreate(android.os.Bundle)
    public void performActivityCreated(android.os.Bundle)
    public void performStart()
    public void performResume()
    public void noteStateNotSaved()
    public void performPrimaryNavigationFragmentChanged()
    public void performMultiWindowModeChanged(boolean)
    public void performPictureInPictureModeChanged(boolean)
    public void performConfigurationChanged(android.content.res.Configuration)
    public boolean performOptionsItemSelected(android.view.MenuItem)
    public boolean performContextItemSelected(android.view.MenuItem)
    public void performOptionsMenuClosed(android.view.Menu)
    public void performSaveInstanceState(android.os.Bundle)
    public void performPause()
    public void performStop()
    public void performDestroyView()
    public void performDestroy()
    public void performDetach()
    public void setNextTransition(int,int)
    public void getEnterTransitionCallback()
    public void getExitTransitionCallback()
    public void setStateAfterAnimating(int)
    public boolean isPostponed()
    public boolean mHasMenu
    public java.lang.Runnable mPostponedDurationRunnable
    public int mContentLayoutId
androidx.core.widget.NestedScrollView:
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public void dispatchNestedScroll(int,int,int,int,int[],int,int[])
    public boolean pageScroll(int)
    public final void smoothScrollBy(int,int)
    public void smoothScrollTo(int,int,boolean)
    public final void initScrollView()
    public final boolean canScroll()
    public final boolean inChild(int,int)
    public final void initOrResetVelocityTracker()
    public final void initVelocityTrackerIfNotExists()
    public final android.view.View findFocusableViewInBounds(boolean,int,int)
    public final boolean isOffScreen(android.view.View)
    public final boolean scrollToChildRect(android.graphics.Rect,boolean)
io.realm.internal.EmptyLoadChangeSet:
    public static final int[] NO_INDEX_CHANGES
androidx.appcompat.app.AlertDialog:
    public android.widget.ListView getListView()
io.realm.internal.core.DescriptorOrdering:
    public boolean isEmpty()
    public boolean sortDefined
    public boolean distinctDefined
    public boolean limitDefined
io.realm.internal.OsRealmConfig$Builder:
    public io.realm.internal.OsRealmConfig$Builder schemaInfo(io.realm.internal.OsSchemaInfo)
    public io.realm.internal.OsRealmConfig$Builder migrationCallback(io.realm.internal.OsSharedRealm$MigrationCallback)
    public io.realm.internal.OsRealmConfig$Builder initializationCallback(io.realm.internal.OsSharedRealm$InitializationCallback)
    public io.realm.internal.OsRealmConfig$Builder autoUpdateNotification(boolean)
    public io.realm.internal.OsRealmConfig$Builder fifoFallbackDir(java.io.File)
androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType
com.google.android.material.datepicker.CalendarItemStyle:
    public int getTopInset()
    public int getBottomInset()
androidx.collection.LruCache:
    public void entryRemoved()
    public java.lang.Object create()
    public int sizeOf()
    public final int safeSizeOf(java.lang.Object,java.lang.Object)
    public int createCount
androidx.appcompat.widget.AppCompatImageView:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate:
    public androidx.core.view.AccessibilityDelegateCompat getItemDelegate()
com.getkeepsafe.relinker.elf.Program32Header
androidx.constraintlayout.solver.ArrayLinkedVariables:
    public final boolean containsKey(androidx.constraintlayout.solver.SolverVariable)
    public void invert()
    public void divideByAmount(float)
    public androidx.constraintlayout.solver.SolverVariable chooseSubject(androidx.constraintlayout.solver.LinearSystem)
    public final void updateFromRow(androidx.constraintlayout.solver.ArrayRow,androidx.constraintlayout.solver.ArrayRow,boolean)
    public void updateFromSystem(androidx.constraintlayout.solver.ArrayRow,androidx.constraintlayout.solver.ArrayRow[])
androidx.lifecycle.ReportFragment:
    public final void dispatchCreate(androidx.lifecycle.ReportFragment$ActivityInitializationListener)
    public final void dispatchStart(androidx.lifecycle.ReportFragment$ActivityInitializationListener)
    public final void dispatchResume(androidx.lifecycle.ReportFragment$ActivityInitializationListener)
androidx.appcompat.widget.ActionBarContextView$1:
    public final synthetic androidx.appcompat.widget.ActionBarContextView this$0
com.google.gson.internal.LinkedTreeMap:
    public void <init>(java.util.Comparator)
    public com.google.gson.internal.LinkedTreeMap$Node removeInternalByKey(java.lang.Object)
    public final boolean equal(java.lang.Object,java.lang.Object)
    public static final synthetic boolean $assertionsDisabled
com.google.gson.internal.bind.TypeAdapters$8:
    public java.util.concurrent.atomic.AtomicInteger read(com.google.gson.stream.JsonReader)
    public void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicInteger)
com.guilhermedaros.museunfc.Acitivities.MainActivity:
    public static synthetic android.speech.tts.TextToSpeech access$000(com.guilhermedaros.museunfc.Acitivities.MainActivity)
    public static synthetic boolean access$100(com.guilhermedaros.museunfc.Acitivities.MainActivity)
    public void showWriteFragment(java.lang.String)
    public final void initSpeech()
    public final void initViews()
    public final void initNFC()
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry:
    public java.lang.String getFileName()
    public int getWeight()
    public boolean isItalic()
    public java.lang.String getVariationSettings()
    public int getTtcIndex()
    public int getResourceId()
io.realm.RealmResults:
    public void <init>(io.realm.BaseRealm,io.realm.internal.OsResults,java.lang.String)
    public boolean load()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup:
    public void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)
    public final void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)
androidx.core.view.ViewParentCompat
androidx.core.widget.PopupWindowCompat
androidx.fragment.app.FragmentTransitionImpl$1:
    public final synthetic androidx.fragment.app.FragmentTransitionImpl this$0
com.google.android.material.datepicker.MaterialCalendar$3:
    public void onDayClick(long)
com.android.volley.RequestQueue:
    public void <init>(com.android.volley.Cache,com.android.volley.Network,int,com.android.volley.ResponseDelivery)
    public void <init>(com.android.volley.Cache,com.android.volley.Network,int)
    public void start()
    public void stop()
    public int getSequenceNumber()
    public void finish(com.android.volley.Request)
com.google.gson.internal.ConstructorConstructor$8:
    public final synthetic com.google.gson.internal.ConstructorConstructor this$0
com.google.android.material.shape.ShapeAppearancePathProvider$ShapeAppearancePathSpec
androidx.core.view.NestedScrollingParentHelper:
    public void onNestedScrollAccepted(android.view.View,android.view.View,int)
    public void onNestedScrollAccepted(int,int)
    public void onStopNestedScroll(int)
androidx.transition.ChangeBounds$7:
    public final synthetic androidx.transition.ChangeBounds this$0
androidx.appcompat.view.menu.CascadingMenuPopup:
    public final androidx.appcompat.widget.MenuPopupWindow createPopupWindow()
    public final int getInitialMenuPosition()
    public final int getNextMenuPosition(int)
    public final android.view.MenuItem findMenuItemForSubmenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuBuilder)
    public final android.view.View findParentViewForSubmenu(androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,androidx.appcompat.view.menu.MenuBuilder)
    public final int findIndexOfAddedMenu(androidx.appcompat.view.menu.MenuBuilder)
androidx.constraintlayout.widget.ConstraintSet:
    public static int lookupID(android.content.res.TypedArray,int,int)
    public void clone(androidx.constraintlayout.widget.Constraints)
    public void applyToInternal(androidx.constraintlayout.widget.ConstraintLayout)
    public final void populateConstraint(androidx.constraintlayout.widget.ConstraintSet$Constraint,android.content.res.TypedArray)
androidx.appcompat.content.res.AppCompatResources:
    public static android.content.res.ColorStateList inflateColorStateList(android.content.Context,int)
    public static android.content.res.ColorStateList getCachedColorStateList(android.content.Context,int)
    public static void addColorStateListToCache(android.content.Context,int,android.content.res.ColorStateList)
    public static boolean isColorInt(android.content.Context,int)
    public static android.util.TypedValue getTypedValue()
androidx.lifecycle.ViewModel:
    public static void closeWithRuntimeException(java.lang.Object)
    public final void clear()
    public volatile boolean mCleared
io.realm.Realm$1
io.realm.internal.Capabilities:
    public abstract boolean canDeliverNotification()
    public abstract void checkCanDeliverNotification(java.lang.String)
io.realm.internal.CheckedRow:
    public void <init>(io.realm.internal.NativeContext,io.realm.internal.Table,long)
    public static io.realm.internal.CheckedRow get(io.realm.internal.NativeContext,io.realm.internal.Table,long)
    public static io.realm.internal.CheckedRow getFromRow(io.realm.internal.UncheckedRow)
    public io.realm.internal.UncheckedRow originalRow
androidx.appcompat.widget.ViewStubCompat:
    public void <init>(android.content.Context,android.util.AttributeSet,int)
androidx.lifecycle.Lifecycling$1:
    public final synthetic androidx.lifecycle.LifecycleEventObserver val$observer
androidx.fragment.app.FragmentViewLifecycleOwner:
    public void initialize()
    public boolean isInitialized()
    public void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)
androidx.cardview.widget.CardViewBaseImpl$1
androidx.lifecycle.ViewModelProvider$KeyedFactory:
    public androidx.lifecycle.ViewModel create(java.lang.Class)
androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments
androidx.core.view.ViewConfigurationCompat:
    public static float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context)
io.realm.internal.async.RealmThreadPoolExecutor:
    public static io.realm.internal.async.RealmThreadPoolExecutor newDefaultExecutor()
    public static int calculateCorePoolSize()
    public static int countFilesInDir(java.lang.String,java.lang.String)
    public java.util.concurrent.Future submitTransaction(java.lang.Runnable)
    public boolean isPaused
com.android.volley.toolbox.ByteArrayPool$1:
    public int compare(byte[],byte[])
io.realm.internal.objectstore.OsObjectBuilder$ItemCallback
androidx.constraintlayout.solver.widgets.ConstraintWidget:
    public static void <clinit>()
    public void setMaxWidth(int)
    public void setMaxHeight(int)
    public boolean isSpreadWidth()
    public boolean isSpreadHeight()
    public void updateResolutionNodes()
    public androidx.constraintlayout.solver.widgets.ConstraintWidget getParent()
    public void setParent(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public void setWidthWrapContent(boolean)
    public void setHeightWrapContent(boolean)
    public void connectCircularConstraint(androidx.constraintlayout.solver.widgets.ConstraintWidget,float,int)
    public void setVisibility(int)
    public int getVisibility()
    public java.lang.String getDebugName()
    public void setDebugName(java.lang.String)
    public int getX()
    public int getY()
    public int getWrapWidth()
    public int getWrapHeight()
    public int getDrawX()
    public int getDrawY()
    public int getRootX()
    public int getRootY()
    public int getRight()
    public int getBottom()
    public float getBiasPercent(int)
    public boolean hasBaseline()
    public int getBaselineDistance()
    public java.lang.Object getCompanionWidget()
    public java.util.ArrayList getAnchors()
    public void setX(int)
    public void setY(int)
    public void setOrigin(int,int)
    public void setHorizontalMatchStyle(int,int,int,float)
    public void setVerticalMatchStyle(int,int,int,float)
    public void setDimensionRatio(java.lang.String)
    public void setHorizontalBiasPercent(float)
    public void setVerticalBiasPercent(float)
    public void setMinWidth(int)
    public void setMinHeight(int)
    public void setWrapWidth(int)
    public void setWrapHeight(int)
    public void setFrame(int,int,int,int)
    public int getRelativePositioning(int)
    public void setRelativePositioning(int,int)
    public void setBaselineDistance(int)
    public void setCompanionWidget(java.lang.Object)
    public void setHorizontalWeight(float)
    public void setVerticalWeight(float)
    public void setHorizontalChainStyle(int)
    public void setVerticalChainStyle(int)
    public void resetAnchors()
    public boolean isInHorizontalChain()
    public boolean isInVerticalChain()
    public void setupDimensionRatio(boolean,boolean,boolean,boolean)
    public final void addAnchors()
    public boolean mIsWidthWrapContent
    public boolean mIsHeightWrapContent
    public int mDrawWidth
    public int mDrawHeight
    public int mContainerItemSkip
    public boolean mHorizontalWrapVisited
    public boolean mVerticalWrapVisited
    public boolean mHorizontalChainFixedPosition
    public boolean mVerticalChainFixedPosition
    public androidx.constraintlayout.solver.widgets.ConstraintWidget mHorizontalNextWidget
    public androidx.constraintlayout.solver.widgets.ConstraintWidget mVerticalNextWidget
    public static float DEFAULT_BIAS
androidx.recyclerview.widget.SnapHelper:
    public boolean onFling(int,int)
    public void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)
    public int[] calculateScrollDistance(int,int)
    public androidx.recyclerview.widget.RecyclerView$SmoothScroller createScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager)
    public androidx.recyclerview.widget.LinearSmoothScroller createSnapScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager)
    public abstract int findTargetSnapPosition(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int)
    public final void setupCallbacks()
    public final void destroyCallbacks()
    public final boolean snapFromFling(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int)
org.slf4j.helpers.Util:
    public static java.lang.String safeGetSystemProperty(java.lang.String)
    public static boolean safeGetBooleanSystemProperty(java.lang.String)
    public static org.slf4j.helpers.Util$ClassContextSecurityManager getSecurityManager()
    public static org.slf4j.helpers.Util$ClassContextSecurityManager safeCreateSecurityManager()
    public static java.lang.Class getCallingClass()
    public static void <clinit>()
com.google.android.material.expandable.ExpandableWidgetHelper
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer:
    public void setOptimizationLevel(int)
    public int getOptimizationLevel()
    public boolean isWidthMeasuredTooSmall()
    public boolean isHeightMeasuredTooSmall()
    public void updateChildrenFromSolver(androidx.constraintlayout.solver.LinearSystem,boolean[])
    public void setRtl(boolean)
    public boolean isRtl()
    public void preOptimize()
    public void optimizeForDimensions(int,int)
    public void optimize()
    public boolean handlesInternalConstraints()
    public final void addHorizontalChain(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public final void addVerticalChain(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public int mDebugSolverPassCount
androidx.appcompat.view.menu.SubMenuBuilder:
    public android.view.Menu getParentMenu()
    public void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback)
androidx.core.provider.FontsContractCompat$2:
    public void onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)
com.google.android.material.internal.ManufacturerUtils
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$ShadowAnimatorImpl:
    public void <init>(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl)
com.google.android.material.circularreveal.CircularRevealCompat
androidx.cursoradapter.widget.CursorAdapter:
    public void init(android.content.Context,android.database.Cursor,int)
    public android.database.Cursor getCursor()
    public abstract android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
    public android.database.Cursor swapCursor(android.database.Cursor)
    public void onContentChanged()
androidx.recyclerview.widget.LinearLayoutManager$SavedState$1:
    public androidx.recyclerview.widget.LinearLayoutManager$SavedState createFromParcel(android.os.Parcel)
    public androidx.recyclerview.widget.LinearLayoutManager$SavedState[] newArray(int)
com.google.gson.internal.bind.TypeAdapters$16:
    public java.lang.String read(com.google.gson.stream.JsonReader)
    public void write(com.google.gson.stream.JsonWriter,java.lang.String)
com.guilhermedaros.museunfc.Fragments.FragmentEscrever$1:
    public void onItemSelected()
    public void onItemSelected(com.jaredrummler.materialspinner.MaterialSpinner,int,long,java.lang.Object)
    public final synthetic com.guilhermedaros.museunfc.Fragments.FragmentEscrever this$0
com.getkeepsafe.relinker.elf.Elf$ProgramHeader
androidx.recyclerview.widget.DefaultItemAnimator:
    public void runPendingAnimations()
    public boolean animateRemove(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public boolean animateAdd(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public void animateAddImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public void animateMoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int)
    public boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int)
    public void animateChangeImpl(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo)
    public final void animateRemoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public final void endChangeAnimationIfNecessary(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo)
androidx.core.view.ViewGroupCompat
io.realm.internal.objectstore.OsObjectBuilder$2
androidx.appcompat.widget.ContentFrameLayout$OnAttachListener:
    public abstract void onDetachedFromWindow()
    public abstract void onAttachedFromWindow()
androidx.appcompat.app.AlertController$AlertParams$OnPrepareListViewListener
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1:
    public androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFromParcel(android.os.Parcel)
    public androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem[] newArray(int)
androidx.transition.TransitionSet$1:
    public final synthetic androidx.transition.TransitionSet this$0
androidx.customview.view.AbsSavedState$2:
    public androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel)
    public androidx.customview.view.AbsSavedState[] newArray(int)
com.getkeepsafe.relinker.ReLinkerInstance:
    public void <init>(com.getkeepsafe.relinker.ReLinker$LibraryLoader,com.getkeepsafe.relinker.ReLinker$LibraryInstaller)
    public static synthetic void access$000(com.getkeepsafe.relinker.ReLinkerInstance,android.content.Context,java.lang.String,java.lang.String)
    public void loadLibrary(android.content.Context,java.lang.String)
    public void cleanupOldLibFiles(android.content.Context,java.lang.String,java.lang.String)
    public varargs void log(java.lang.String,java.lang.Object[])
    public void log(java.lang.String)
    public boolean force
    public boolean recursive
    public com.getkeepsafe.relinker.ReLinker$Logger logger
androidx.fragment.app.FragmentState$1:
    public androidx.fragment.app.FragmentState createFromParcel(android.os.Parcel)
    public androidx.fragment.app.FragmentState[] newArray(int)
androidx.recyclerview.widget.AdapterHelper$Callback:
    public abstract androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolder(int)
    public abstract void offsetPositionsForRemovingInvisible(int,int)
    public abstract void offsetPositionsForRemovingLaidOutOrNewView(int,int)
    public abstract void markViewHoldersUpdated(int,int,java.lang.Object)
    public abstract void onDispatchFirstPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    public abstract void onDispatchSecondPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    public abstract void offsetPositionsForAdd(int,int)
    public abstract void offsetPositionsForMove(int,int)
androidx.recyclerview.widget.RecyclerView$RecycledViewPool:
    public void clear()
    public androidx.recyclerview.widget.RecyclerView$ViewHolder getRecycledView(int)
    public void putRecycledView(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public void factorInCreateTime(int,long)
    public void factorInBindTime(int,long)
    public boolean willCreateInTime(int,long,long)
    public boolean willBindInTime(int,long,long)
    public void attach()
    public void detach()
    public void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean)
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action:
    public void <init>(int,int,int,android.view.animation.Interpolator)
    public void jumpTo(int)
    public boolean hasJumpTarget()
    public final void validate()
androidx.appcompat.view.menu.BaseMenuWrapper:
    public final void internalClear()
    public final void internalRemoveGroup(int)
    public final void internalRemoveItem(int)
androidx.appcompat.view.ActionBarPolicy
androidx.arch.core.executor.ArchTaskExecutor$2
com.google.gson.Gson$1:
    public java.lang.Double read(com.google.gson.stream.JsonReader)
    public void write(com.google.gson.stream.JsonWriter,java.lang.Number)
    public final synthetic com.google.gson.Gson this$0
androidx.appcompat.widget.SearchView$SearchAutoComplete:
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public boolean isEmpty()
    public void showSoftInputIfNecessary()
io.realm.OrderedCollectionChangeSet$State
androidx.recyclerview.widget.AdapterHelper$UpdateOp:
    public java.lang.String cmdToString()
androidx.appcompat.view.WindowCallbackWrapper:
    public boolean onPreparePanel(int,android.view.View,android.view.Menu)
    public final android.view.Window$Callback getWrapped()
com.getkeepsafe.relinker.ReLinker$LibraryLoader:
    public abstract void loadLibrary(java.lang.String)
    public abstract void loadPath(java.lang.String)
    public abstract java.lang.String mapLibraryName(java.lang.String)
    public abstract java.lang.String unmapLibraryName(java.lang.String)
    public abstract java.lang.String[] supportedAbis()
androidx.lifecycle.MethodCallsLogger:
    public java.util.Map mCalledMethods
androidx.appcompat.widget.ListPopupWindow:
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public void setPromptPosition(int)
    public boolean isModal()
    public void setAnimationStyle(int)
    public android.view.View getAnchorView()
    public void setAnchorView(android.view.View)
    public void setEpicenterBounds(android.graphics.Rect)
    public void setDropDownGravity(int)
    public int getWidth()
    public void setWidth(int)
    public void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)
    public void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)
    public void setInputMethodMode(int)
    public void setSelection(int)
    public void clearListSelection()
    public boolean isInputMethodNotNeeded()
    public java.lang.Object getSelectedItem()
    public int getSelectedItemPosition()
    public long getSelectedItemId()
    public android.view.View getSelectedView()
    public void setOverlapAnchor(boolean)
    public final void removePromptView()
    public final int buildDropDown()
    public final void setPopupClipToScreenEnabled(boolean)
    public final int getMaxAvailableHeight(android.view.View,int,boolean)
    public boolean mIsAnimatedFromAnchor
    public android.view.View mPromptView
    public android.graphics.drawable.Drawable mDropDownListHighlight
    public android.widget.AdapterView$OnItemSelectedListener mItemSelectedListener
    public java.lang.Runnable mShowDropDownRunnable
com.google.android.material.datepicker.TimeSource:
    public static com.google.android.material.datepicker.TimeSource system()
    public java.util.Calendar now()
    public java.util.Calendar now(java.util.TimeZone)
androidx.appcompat.view.menu.ActionMenuItem:
    public androidx.core.internal.view.SupportMenuItem setActionView()
    public androidx.core.internal.view.SupportMenuItem setActionView1()
    public androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int)
    public final int mCategoryOrder
    public int mIconResId
    public android.view.MenuItem$OnMenuItemClickListener mClickListener
io.realm.internal.OsObjectSchemaInfo:
    public void <init>(java.lang.String)
    public static synthetic long access$100(io.realm.internal.OsObjectSchemaInfo)
    public static synthetic void access$200(long,long[],long[])
    public io.realm.internal.Property getProperty(java.lang.String)
    public io.realm.internal.Property getPrimaryKeyProperty()
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams:
    public boolean isFullSpan()
    public final int getSpanIndex()
com.android.volley.toolbox.HurlStack:
    public void <init>(com.android.volley.toolbox.HurlStack$UrlRewriter)
    public void <init>(com.android.volley.toolbox.HurlStack$UrlRewriter,javax.net.ssl.SSLSocketFactory)
    public static boolean hasResponseBody(int,int)
    public static java.io.InputStream inputStreamFromConnection(java.net.HttpURLConnection)
    public static void setConnectionParametersForRequest(java.net.HttpURLConnection,com.android.volley.Request)
    public static void addBodyIfExists(java.net.HttpURLConnection,com.android.volley.Request)
    public java.net.HttpURLConnection createConnection(java.net.URL)
    public final java.net.HttpURLConnection openConnection(java.net.URL,com.android.volley.Request)
com.android.volley.toolbox.DiskBasedCache$CacheHeader:
    public static java.util.List getAllResponseHeaders(com.android.volley.Cache$Entry)
com.google.android.material.internal.ViewUtils$RelativePadding:
    public void <init>(com.google.android.material.internal.ViewUtils$RelativePadding)
androidx.transition.ViewGroupOverlayApi18
com.google.android.material.shape.EdgeTreatment:
    public boolean forceIntersection()
io.realm.internal.UncheckedRow:
    public static io.realm.internal.UncheckedRow getByRowPointer(io.realm.internal.NativeContext,io.realm.internal.Table,long)
androidx.fragment.app.FragmentManager$OnBackStackChangedListener
org.slf4j.LoggerFactory:
    public static final void performInitialization()
    public static boolean messageContainsOrgSlf4jImplStaticLoggerBinder(java.lang.String)
    public static void failedBinding(java.lang.Throwable)
    public static void emitReplayOrSubstituionWarning(org.slf4j.event.SubstituteLoggingEvent,int)
    public static void replaySingleEvent(org.slf4j.event.SubstituteLoggingEvent)
    public static void emitSubstitutionWarning()
    public static void emitReplayWarning(int)
    public static boolean isAmbiguousStaticLoggerBinderPathSet(java.util.Set)
    public static boolean nonMatchingClasses(java.lang.Class,java.lang.Class)
com.google.gson.internal.bind.TypeAdapters$6:
    public java.lang.Number read(com.google.gson.stream.JsonReader)
    public void write(com.google.gson.stream.JsonWriter,java.lang.Number)
androidx.appcompat.app.AlertController:
    public static boolean shouldCenterSingleButton(android.content.Context)
    public void installContent()
    public void setTitle(java.lang.CharSequence)
    public void setCustomTitle(android.view.View)
    public void setMessage(java.lang.CharSequence)
    public void setView(int)
    public void setView(android.view.View)
    public void setView(android.view.View,int,int,int,int)
    public void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener,android.os.Message,android.graphics.drawable.Drawable)
    public void setIcon(android.graphics.drawable.Drawable)
    public int getIconAttributeResId(int)
    public android.widget.ListView getListView()
    public boolean onKeyDown(android.view.KeyEvent)
    public boolean onKeyUp(android.view.KeyEvent)
    public final int selectContentView()
    public final void setupView()
    public final void setScrollIndicators(android.view.ViewGroup,android.view.View,int,int)
    public final void setupCustomContent(android.view.ViewGroup)
    public final void setupTitle(android.view.ViewGroup)
    public final void setupContent(android.view.ViewGroup)
    public final void setupButtons(android.view.ViewGroup)
androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat
com.android.volley.toolbox.HttpClientStack
androidx.appcompat.widget.FitWindowsViewGroup
com.google.gson.internal.ConstructorConstructor$11:
    public final synthetic com.google.gson.internal.ConstructorConstructor this$0
androidx.core.widget.TintableCompoundButton
androidx.transition.ChangeBounds$10:
    public final synthetic androidx.transition.ChangeBounds this$0
com.google.android.material.snackbar.SnackbarManager:
    public static com.google.android.material.snackbar.SnackbarManager getInstance()
    public void pauseTimeout(com.google.android.material.snackbar.SnackbarManager$Callback)
    public void restoreTimeoutIfPaused(com.google.android.material.snackbar.SnackbarManager$Callback)
    public void handleTimeout(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord)
    public final boolean cancelSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord,int)
    public final boolean isCurrentSnackbarLocked(com.google.android.material.snackbar.SnackbarManager$Callback)
    public final void scheduleTimeoutLocked(com.google.android.material.snackbar.SnackbarManager$SnackbarRecord)
    public com.google.android.material.snackbar.SnackbarManager$SnackbarRecord currentSnackbar
    public com.google.android.material.snackbar.SnackbarManager$SnackbarRecord nextSnackbar
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState:
    public int addStateSet(int[],android.graphics.drawable.Drawable)
    public void growArray(int,int)
io.realm.Realm:
    public static io.realm.internal.OsSchemaInfo createExpectedSchemaInfo(io.realm.internal.RealmProxyMediator)
    public static void checkFilesDirAvailable(android.content.Context)
    public static io.realm.Realm getInstance(io.realm.RealmConfiguration)
    public static io.realm.RealmConfiguration getDefaultConfiguration()
    public static io.realm.Realm createInstance(io.realm.RealmCache,io.realm.internal.OsSharedRealm$VersionID)
    public static io.realm.Realm createInstance(io.realm.internal.OsSharedRealm)
    public varargs io.realm.RealmModel copyToRealmOrUpdate(io.realm.RealmModel,io.realm.ImportFlag[])
    public io.realm.RealmQuery where(java.lang.Class)
    public io.realm.internal.async.RealmAsyncTaskImpl executeTransactionAsync(io.realm.Realm$Transaction,io.realm.Realm$Transaction$OnSuccess)
    public io.realm.internal.async.RealmAsyncTaskImpl executeTransactionAsync(io.realm.Realm$Transaction,io.realm.Realm$Transaction$OnSuccess,io.realm.Realm$Transaction$OnError)
    public io.realm.internal.Table getTable(java.lang.Class)
    public final io.realm.RealmModel copyOrUpdate(io.realm.RealmModel,boolean,java.util.Map,java.util.Set)
    public final void checkNotNullObject(io.realm.RealmModel)
    public final void checkHasPrimaryKey(java.lang.Class)
androidx.constraintlayout.solver.widgets.ResolutionDimension:
    public void reset()
    public void remove()
io.realm.internal.Property$1
com.google.android.material.behavior.SwipeDismissBehavior:
    public static int clamp(int,int,int)
    public static float fraction(float,float,float)
    public void setSwipeDirection(int)
    public void setStartAlphaSwipeDistance(float)
    public void setEndAlphaSwipeDistance(float)
    public final void ensureViewDragHelper(android.view.ViewGroup)
    public final void updateAccessibilityActions(android.view.View)
    public boolean sensitivitySet
androidx.appcompat.view.menu.MenuBuilder:
    public static int getOrdering(int)
    public static int findInsertIndex(java.util.ArrayList,int)
    public androidx.appcompat.view.menu.MenuBuilder setDefaultShowAsAction(int)
    public void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter)
    public void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback)
    public void setExclusiveItemChecked(android.view.MenuItem)
    public int findItemIndex(int)
    public int findGroupIndex(int)
    public int findGroupIndex(int,int)
    public android.content.res.Resources getResources()
    public android.content.Context getContext()
    public void changeMenuMode()
    public void onItemVisibleChanged()
    public java.util.ArrayList getActionItems()
    public java.util.ArrayList getNonActionItems()
    public androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence)
    public androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(int)
    public androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable)
    public androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(int)
    public androidx.appcompat.view.menu.MenuBuilder setHeaderViewInt(android.view.View)
    public java.lang.CharSequence getHeaderTitle()
    public android.graphics.drawable.Drawable getHeaderIcon()
    public android.view.View getHeaderView()
    public boolean getOptionalIconsVisible()
    public androidx.appcompat.view.menu.MenuItemImpl getExpandedItem()
    public void setOverrideVisibleItems(boolean)
    public final void dispatchPresenterUpdate(boolean)
    public final boolean dispatchSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder,androidx.appcompat.view.menu.MenuPresenter)
    public final androidx.appcompat.view.menu.MenuItemImpl createNewMenuItem(int,int,int,int,java.lang.CharSequence,int)
    public final void setShortcutsVisibleInner(boolean)
    public android.view.ContextMenu$ContextMenuInfo mCurrentMenuInfo
androidx.recyclerview.widget.RecyclerView$ViewCacheExtension:
    public abstract android.view.View getViewForPositionAndType(androidx.recyclerview.widget.RecyclerView$Recycler,int,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat:
    public static androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean,int)
androidx.appcompat.widget.ThemeUtils:
    public static android.util.TypedValue getTypedValue()
    public static int getThemeAttrColor(android.content.Context,int,float)
    public static final int[] ACTIVATED_STATE_SET
    public static final int[] SELECTED_STATE_SET
    public static final int[] NOT_PRESSED_OR_FOCUSED_STATE_SET
com.android.volley.toolbox.BaseHttpStack:
    public final org.apache.http.HttpResponse performRequest(com.android.volley.Request,java.util.Map)
io.realm.Realm$Transaction:
    public abstract void execute(io.realm.Realm)
com.android.volley.toolbox.ByteArrayPool:
    public final synchronized void trim()
androidx.core.widget.AutoScrollHelper$ClampedScroller:
    public void setRampUpDuration(int)
    public void setRampDownDuration(int)
    public void start()
    public void requestStop()
    public boolean isFinished()
    public void computeScrollDelta()
    public void setTargetVelocity(float,float)
    public int getHorizontalDirection()
    public int getVerticalDirection()
    public int getDeltaX()
    public int getDeltaY()
    public final float interpolateValue(float)
androidx.appcompat.widget.RtlSpacingHelper:
    public int getLeft()
    public int getRight()
    public int getStart()
    public int getEnd()
    public void setAbsolute(int,int)
    public void setDirection(boolean)
com.google.android.material.behavior.SwipeDismissBehavior$1:
    public final boolean shouldDismiss(android.view.View,float)
androidx.recyclerview.widget.LinearLayoutManager$LayoutState:
    public void assignPositionFromScrapList()
    public android.view.View nextViewInLimitedList(android.view.View)
    public final android.view.View nextViewFromScrapList()
androidx.core.view.ActionProvider:
    public abstract android.view.View onCreateActionView()
    public boolean onPerformDefaultAction()
    public boolean hasSubMenu()
    public void onPrepareSubMenu(android.view.SubMenu)
    public void setSubUiVisibilityListener(androidx.core.view.ActionProvider$SubUiVisibilityListener)
    public void reset()
    public final android.content.Context mContext
    public androidx.core.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener
io.realm.rx.RealmObservableFactory$StrongReferenceCounter:
    public void <init>()
    public final java.util.Map references
com.google.gson.internal.bind.TypeAdapters$21:
    public java.net.URL read(com.google.gson.stream.JsonReader)
    public void write(com.google.gson.stream.JsonWriter,java.net.URL)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl:
    public static synthetic int access$002(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,int)
    public static synthetic android.animation.Animator access$102(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,android.animation.Animator)
    public static synthetic float access$202(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl,float)
    public void setBackgroundTintList(android.content.res.ColorStateList)
    public void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
    public final void setElevation(float)
    public float getHoveredFocusedTranslationZ()
    public float getPressedTranslationZ()
    public final void setHoveredFocusedTranslationZ(float)
    public final void setPressedTranslationZ(float)
    public final void updateImageMatrixScale()
    public final void setShapeAppearance(com.google.android.material.shape.ShapeAppearanceModel)
    public final com.google.android.material.shape.ShapeAppearanceModel getShapeAppearance()
    public final com.google.android.material.animation.MotionSpec getShowMotionSpec()
    public final void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
    public final com.google.android.material.animation.MotionSpec getHideMotionSpec()
    public final void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
    public boolean getEnsureMinTouchTargetSize()
    public void setEnsureMinTouchTargetSize(boolean)
    public void setShadowPaddingEnabled(boolean)
    public void updateShapeElevation(float)
    public void addOnShowAnimationListener(android.animation.Animator$AnimatorListener)
    public void addOnHideAnimationListener(android.animation.Animator$AnimatorListener)
    public void hide(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean)
    public void show(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean)
    public void addTransformationCallback(com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalTransformationCallback)
    public final android.graphics.drawable.Drawable getContentBackground()
    public void onPaddingUpdated(android.graphics.Rect)
    public void onAttachedToWindow()
    public void onDetachedFromWindow()
    public void onPreDraw()
    public final void calculateImageMatrixFromScale(float,android.graphics.Matrix)
    public final com.google.android.material.animation.MotionSpec getDefaultShowMotionSpec()
    public final com.google.android.material.animation.MotionSpec getDefaultHideMotionSpec()
    public final void workAroundOreoBug(android.animation.ObjectAnimator)
    public final android.view.ViewTreeObserver$OnPreDrawListener getOrCreatePreDrawListener()
    public android.graphics.drawable.Drawable rippleDrawable
    public com.google.android.material.floatingactionbutton.BorderDrawable borderDrawable
    public android.graphics.drawable.Drawable contentBackground
    public int minTouchTargetSize
    public int maxImageSize
io.realm.internal.async.BgPriorityRunnable
io.realm.internal.fields.FieldDescriptor$SchemaProxy:
    public abstract boolean hasCache()
    public abstract io.realm.internal.ColumnInfo getColumnInfo(java.lang.String)
    public abstract long getNativeTablePtr(java.lang.String)
com.google.gson.internal.ConstructorConstructor$10:
    public final synthetic com.google.gson.internal.ConstructorConstructor this$0
androidx.collection.ArraySet:
    public void <init>(int)
    public void ensureCapacity(int)
    public java.lang.Object valueAt(int)
    public final androidx.collection.MapCollections getCollection()
com.google.gson.internal.Primitives:
    public static void add(java.util.Map,java.util.Map,java.lang.Class,java.lang.Class)
    public static boolean isPrimitive(java.lang.reflect.Type)
    public static java.lang.Class wrap(java.lang.Class)
    public static final java.util.Map WRAPPER_TO_PRIMITIVE_TYPE
com.google.android.material.datepicker.UtcDates:
    public static com.google.android.material.datepicker.TimeSource getTimeSource()
    public static android.icu.util.TimeZone getUtcAndroidTimeZone()
    public static long canonicalYearMonthDay(long)
    public static android.icu.text.DateFormat getAndroidFormat(java.lang.String,java.util.Locale)
    public static java.text.DateFormat getFormat(int,java.util.Locale)
    public static java.text.SimpleDateFormat getSimpleFormat(java.lang.String,java.util.Locale)
    public static java.text.SimpleDateFormat getYearMonthFormat()
    public static java.text.SimpleDateFormat getYearMonthFormat(java.util.Locale)
androidx.savedstate.SavedStateRegistry:
    public android.os.Bundle consumeRestoredStateForKey(java.lang.String)
    public void performRestore(androidx.lifecycle.Lifecycle,android.os.Bundle)
    public void performSave(android.os.Bundle)
com.google.gson.internal.Streams
com.google.android.material.resources.MaterialResources
androidx.core.text.PrecomputedTextCompat$Params:
    public android.text.TextPaint getTextPaint()
    public android.text.TextDirectionHeuristic getTextDirection()
    public int getBreakStrategy()
    public int getHyphenationFrequency()
    public final android.text.PrecomputedText$Params mWrapped
io.realm.Sort:
    public boolean getValue()
androidx.viewpager2.adapter.FragmentStateAdapter$2:
    public final synthetic androidx.viewpager2.adapter.FragmentViewHolder val$holder
    public final synthetic androidx.viewpager2.adapter.FragmentStateAdapter this$0
androidx.appcompat.widget.AppCompatSpinner:
    public void <init>(android.content.Context,android.util.AttributeSet)
    public void <init>(android.content.Context,android.util.AttributeSet,int,int)
    public void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme)
com.google.gson.internal.bind.TypeAdapters$7:
    public java.lang.Number read(com.google.gson.stream.JsonReader)
    public void write(com.google.gson.stream.JsonWriter,java.lang.Number)
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper:
    public android.view.View onCreateActionView()
    public boolean onPerformDefaultAction()
    public boolean hasSubMenu()
    public void onPrepareSubMenu(android.view.SubMenu)
androidx.core.content.res.ColorStateListInflaterCompat
io.realm.internal.ColumnIndices:
    public io.realm.internal.ColumnInfo getColumnInfo(java.lang.String)
    public void refresh()
androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong
com.google.gson.JsonArray:
    public void add(com.google.gson.JsonElement)
androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper:
    public android.view.View getWrappedView()
androidx.transition.FragmentTransitionSupport$4:
    public final synthetic android.graphics.Rect val$epicenter
    public final synthetic androidx.transition.FragmentTransitionSupport this$0
androidx.appcompat.widget.ScrollingTabContainerView:
    public void animateToTab(int)
    public androidx.appcompat.widget.ScrollingTabContainerView$TabView createTabView(androidx.appcompat.app.ActionBar$Tab,boolean)
    public final boolean isCollapsed()
    public final void performCollapse()
    public final boolean performExpand()
    public final android.widget.Spinner createSpinner()
    public androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener mTabClickListener
    public androidx.appcompat.widget.LinearLayoutCompat mTabLayout
    public android.widget.Spinner mTabSpinner
    public static final android.view.animation.Interpolator sAlphaInterpolator
androidx.fragment.app.FragmentTransitionCompat21$1:
    public final synthetic androidx.fragment.app.FragmentTransitionCompat21 this$0
com.google.android.material.appbar.ViewUtilsLollipop:
    public static void setBoundsViewOutlineProvider(android.view.View)
    public static void setStateListAnimatorFromAttrs(android.view.View,android.util.AttributeSet,int,int)
androidx.viewpager2.adapter.FragmentViewHolder
com.guilhermedaros.museunfc.Acitivities.SplashScreenActivity$4$2
androidx.core.graphics.drawable.TintAwareDrawable:
    public abstract void setTint(int)
    public abstract void setTintList(android.content.res.ColorStateList)
    public abstract void setTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.view.menu.ListMenuPresenter:
    public void <init>(int,int)
    public androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
androidx.recyclerview.widget.GridLayoutManager:
    public static int[] calculateItemBorders(int[],int,int)
    public int getSpanCount()
    public final void clearPreLayoutSpanMappingCache()
    public final void cachePreLayoutSpanMapping()
    public final void ensureAnchorIsInCorrectSpan(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int)
    public final void guessMeasurement(float,int)
    public final void assignSpans(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,boolean)
    public final int computeScrollRangeWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State)
    public final int computeScrollOffsetWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State)
    public boolean mUsingSpansToEstimateScrollBarDimensions
com.google.gson.JsonObject:
    public void add(java.lang.String,com.google.gson.JsonElement)
    public java.util.Set entrySet()
androidx.lifecycle.ViewModelStore:
    public final void put(java.lang.String,androidx.lifecycle.ViewModel)
    public final androidx.lifecycle.ViewModel get(java.lang.String)
androidx.activity.OnBackPressedDispatcher:
    public androidx.activity.Cancellable addCancellableCallback(androidx.activity.OnBackPressedCallback)
    public void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)
io.realm.internal.RealmNotifier$1:
    public void onCalled(io.realm.internal.RealmNotifier$RealmObserverPair,java.lang.Object)
io.realm.internal.fields.FieldDescriptor:
    public final java.lang.String getFinalColumnName()
    public final io.realm.RealmFieldType getFinalColumnType()
    public final void verifyInternalColumnType(java.lang.String,java.lang.String,io.realm.RealmFieldType)
    public final java.util.List parseFieldDescription(java.lang.String)
    public static final java.util.Set LIST_LINK_FIELD_TYPE
androidx.core.view.KeyEventDispatcher:
    public static boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent)
    public static boolean actionBarOnMenuKeyEventPre28(android.app.ActionBar,android.view.KeyEvent)
    public static boolean activitySuperDispatchKeyEventPre28(android.app.Activity,android.view.KeyEvent)
    public static android.content.DialogInterface$OnKeyListener getDialogKeyListenerPre28(android.app.Dialog)
    public static boolean dialogSuperDispatchKeyEventPre28(android.app.Dialog,android.view.KeyEvent)
    public static void <clinit>()
androidx.appcompat.view.menu.ActionMenuItemView:
    public void <init>(android.content.Context,android.util.AttributeSet,int)
androidx.core.content.res.TypedArrayUtils
androidx.fragment.app.FragmentTransitionImpl$2:
    public final synthetic androidx.fragment.app.FragmentTransitionImpl this$0
androidx.transition.ChangeBounds$8:
    public final synthetic androidx.transition.ChangeBounds this$0
androidx.fragment.app.FragmentManagerImpl$OpGenerator
io.realm.Realm$Transaction$OnSuccess
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState:
    public int addStateSet(int[],android.graphics.drawable.Drawable,int)
    public int indexOfTransition(int,int)
    public boolean isTransitionReversed(int,int)
    public boolean transitionHasReversibleFlag(int,int)
androidx.core.view.TintableBackgroundView
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener:
    public final void resolveMethod(android.content.Context)
io.realm.internal.objectstore.OsObjectBuilder$1
com.google.android.material.internal.CollapsingTextHelper$1:
    public void apply(android.graphics.Typeface)
androidx.viewpager.widget.PagerAdapter:
    public abstract java.lang.Object instantiateItem(android.view.ViewGroup,int)
    public abstract void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)
    public abstract boolean isViewFromObject(android.view.View,java.lang.Object)
    public abstract android.os.Parcelable saveState()
    public abstract void restoreState(android.os.Parcelable,java.lang.ClassLoader)
    public int getItemPosition()
    public void setViewPagerObserver(android.database.DataSetObserver)
    public float getPageWidth()
    public final android.database.DataSetObservable mObservable
    public android.database.DataSetObserver mViewPagerObserver
androidx.appcompat.widget.ToolbarWidgetWrapper:
    public void <init>(androidx.appcompat.widget.Toolbar,boolean,int)
    public void setDefaultNavigationContentDescription(int)
    public void setTitle(java.lang.CharSequence)
    public void setSubtitle(java.lang.CharSequence)
    public void setLogo(android.graphics.drawable.Drawable)
    public void setCustomView(android.view.View)
    public void setNavigationIcon(android.graphics.drawable.Drawable)
    public void setNavigationContentDescription(java.lang.CharSequence)
    public void setNavigationContentDescription(int)
    public final int detectDisplayOptions()
    public final void setTitleInt(java.lang.CharSequence)
androidx.core.provider.FontsContractCompat$1:
    public androidx.core.provider.FontsContractCompat$TypefaceResult call()
io.realm.ImmutableRealmObjectSchema:
    public varargs io.realm.internal.fields.FieldDescriptor getFieldDescriptors(java.lang.String,io.realm.RealmFieldType[])
com.google.gson.internal.ConstructorConstructor$7:
    public final synthetic com.google.gson.internal.ConstructorConstructor this$0
androidx.fragment.app.Fragment$1
com.google.android.material.circularreveal.cardview.CircularRevealCardView:
    public final com.google.android.material.circularreveal.CircularRevealHelper helper
androidx.loader.content.Loader
androidx.lifecycle.ClassesInfoCache:
    public boolean hasLifecycleMethods(java.lang.Class)
    public final java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class)
androidx.constraintlayout.widget.ConstraintLayout:
    public androidx.constraintlayout.widget.ConstraintLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
    public android.view.View getViewById(int)
    public final void init(android.util.AttributeSet)
    public final void updateHierarchy()
    public final void setChildrenConstraints()
    public final void updatePostMeasures()
    public final void setSelfDimensionBehaviour(int,int)
    public int mLastMeasureWidthSize
    public int mLastMeasureHeightSize
    public int mLastMeasureWidthMode
    public int mLastMeasureHeightMode
    public androidx.constraintlayout.solver.Metrics mMetrics
io.realm.internal.ObservableCollection$RealmChangeListenerWrapper
com.guilhermedaros.museunfc.Acitivities.MainActivity$SectionsPagerAdapter:
    public androidx.fragment.app.Fragment getItem(int)
io.realm.BaseRealm$RealmObjectContext:
    public io.realm.BaseRealm getRealm()
    public io.realm.internal.Row getRow()
    public io.realm.internal.ColumnInfo getColumnInfo()
    public boolean getAcceptDefaultValue()
    public java.util.List getExcludeFields()
androidx.core.view.MarginLayoutParamsCompat
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat:
    public void <init>(android.content.Context)
    public static androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
    public final void setupColorAnimator(android.animation.Animator)
    public final void setupAnimatorsForTarget(java.lang.String,android.animation.Animator)
    public android.animation.Animator$AnimatorListener mAnimatorListener
    public java.util.ArrayList mAnimationCallbacks
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry:
    public androidx.core.provider.FontRequest getRequest()
    public int getFetchStrategy()
    public int getTimeout()
androidx.appcompat.app.AlertController$RecycleListView:
    public void setHasDecor(boolean,boolean)
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState$1:
    public com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState createFromParcel(android.os.Parcel)
    public com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState[] newArray(int)
com.google.android.material.animation.AnimatorSetCompat
androidx.transition.ChangeBounds$4:
    public void set(android.view.View,android.graphics.PointF)
    public android.graphics.PointF get()
io.realm.internal.sync.OsSubscription:
    public java.lang.Throwable getError()
    public void addChangeListener(io.realm.RealmChangeListener)
androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks:
    public abstract android.graphics.drawable.Drawable createDrawableFor(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)
    public abstract boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)
    public abstract android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int)
    public abstract boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)
    public abstract android.graphics.PorterDuff$Mode getTintModeForDrawableRes(int)
androidx.core.text.BidiFormatter$DirectionalityEstimator:
    public static byte getCachedDirectionality(char)
    public int getEntryDir()
    public int getExitDir()
    public byte dirTypeForward()
    public final byte skipTagForward()
    public final byte skipTagBackward()
    public final byte skipEntityForward()
    public final byte skipEntityBackward()
com.google.android.material.resources.MaterialAttributes
androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter
com.google.gson.internal.bind.TypeAdapters$17:
    public java.math.BigDecimal read(com.google.gson.stream.JsonReader)
    public void write(com.google.gson.stream.JsonWriter,java.math.BigDecimal)
io.realm.internal.objectstore.OsObjectBuilder$10
com.guilhermedaros.museunfc.Fragments.FragmentEscrever:
    public static com.guilhermedaros.museunfc.Fragments.FragmentEscrever newInstance(java.lang.String,java.lang.String)
    public static synthetic com.jaredrummler.materialspinner.MaterialSpinner access$000(com.guilhermedaros.museunfc.Fragments.FragmentEscrever)
    public final java.util.List ItensMuseu()
    public java.lang.String mParam1
    public java.lang.String mParam2
    public boolean isDialogDisplayed
    public boolean isWrite
com.google.android.material.shape.ShapeAppearanceModel:
    public static com.google.android.material.shape.ShapeAppearanceModel$Builder builder()
    public static com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,android.util.AttributeSet,int,int,int)
    public static com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,android.util.AttributeSet,int,int,com.google.android.material.shape.CornerSize)
    public static com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,int,int)
    public static com.google.android.material.shape.ShapeAppearanceModel$Builder builder(android.content.Context,int,int,int)
    public void <init>(com.google.android.material.shape.ShapeAppearanceModel$Builder)
    public static void <clinit>()
    public com.google.android.material.shape.CornerTreatment getTopLeftCorner()
    public com.google.android.material.shape.CornerTreatment getTopRightCorner()
    public com.google.android.material.shape.CornerTreatment getBottomRightCorner()
    public com.google.android.material.shape.CornerTreatment getBottomLeftCorner()
    public com.google.android.material.shape.CornerSize getTopLeftCornerSize()
    public com.google.android.material.shape.CornerSize getTopRightCornerSize()
    public com.google.android.material.shape.CornerSize getBottomRightCornerSize()
    public com.google.android.material.shape.CornerSize getBottomLeftCornerSize()
    public com.google.android.material.shape.EdgeTreatment getLeftEdge()
    public com.google.android.material.shape.EdgeTreatment getTopEdge()
    public com.google.android.material.shape.EdgeTreatment getRightEdge()
    public com.google.android.material.shape.EdgeTreatment getBottomEdge()
    public com.google.android.material.shape.ShapeAppearanceModel$Builder toBuilder()
    public com.google.android.material.shape.ShapeAppearanceModel withTransformedCornerSizes(com.google.android.material.shape.ShapeAppearanceModel$CornerSizeUnaryOperator)
    public static final com.google.android.material.shape.CornerSize PILL
androidx.core.widget.ListViewCompat
androidx.viewpager2.adapter.FragmentStateAdapter$FragmentMaxLifecycleEnforcer
androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup:
    public int getSpanSize(int)
    public int getSpanIndex(int,int)
io.realm.internal.StatefulCollectionChangeSet:
    public final io.realm.OrderedCollectionChangeSet changeset
    public final io.realm.OrderedCollectionChangeSet$State state
    public final boolean remoteDataSynchronized
androidx.transition.ViewOverlayApi14$OverlayViewGroup
com.google.android.material.ripple.RippleDrawableCompat$1
androidx.customview.widget.FocusStrategy$CollectionAdapter:
    public abstract java.lang.Object get(java.lang.Object,int)
    public abstract int size(java.lang.Object)
androidx.recyclerview.widget.RecyclerView$SavedState:
    public void copyFrom(androidx.recyclerview.widget.RecyclerView$SavedState)
androidx.vectordrawable.graphics.drawable.ArgbEvaluator:
    public static androidx.vectordrawable.graphics.drawable.ArgbEvaluator getInstance()
androidx.constraintlayout.solver.widgets.ConstraintWidget$1
androidx.appcompat.widget.AppCompatSeekBarHelper:
    public void setTickMark(android.graphics.drawable.Drawable)
    public void jumpDrawablesToCurrentState()
    public void drawableStateChanged()
androidx.recyclerview.widget.RecyclerView$ViewFlinger:
    public void fling(int,int)
    public final void internalPostOnAnimation()
    public final float distanceInfluenceForSnapDuration(float)
    public final int computeScrollDuration(int,int,int,int)
androidx.core.text.PrecomputedTextCompat$Params$Builder
com.getkeepsafe.relinker.elf.Section64Header
androidx.appcompat.app.AlertController$4:
    public final synthetic androidx.appcompat.app.AlertController this$0
com.google.android.material.textfield.TextInputLayout$SavedState$1:
    public com.google.android.material.textfield.TextInputLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public com.google.android.material.textfield.TextInputLayout$SavedState createFromParcel(android.os.Parcel)
    public com.google.android.material.textfield.TextInputLayout$SavedState[] newArray(int)
androidx.constraintlayout.solver.widgets.ConstraintWidgetGroup:
    public java.util.List getStartWidgets(int)
    public java.util.Set getWidgetsToSet(int)
    public java.util.List getWidgetsToSolve()
    public void updateUnresolvedWidgets()
io.realm.internal.objectstore.OsObjectBuilder$7
com.google.gson.internal.bind.TypeAdapters$5:
    public java.lang.Number read(com.google.gson.stream.JsonReader)
    public void write(com.google.gson.stream.JsonWriter,java.lang.Number)
com.google.android.material.textfield.IndicatorViewController:
    public static synthetic int access$002(com.google.android.material.textfield.IndicatorViewController,int)
    public static synthetic android.animation.Animator access$102(com.google.android.material.textfield.IndicatorViewController,android.animation.Animator)
    public static synthetic android.widget.TextView access$200(com.google.android.material.textfield.IndicatorViewController)
    public void showHelper(java.lang.CharSequence)
    public void hideHelperText()
    public void showError(java.lang.CharSequence)
    public boolean isCaptionView(int)
    public void setErrorEnabled(boolean)
    public boolean isErrorEnabled()
    public boolean isHelperTextEnabled()
    public void setHelperTextEnabled(boolean)
    public java.lang.CharSequence getErrorText()
    public java.lang.CharSequence getHelperText()
    public void setTypefaces(android.graphics.Typeface)
    public android.content.res.ColorStateList getErrorViewTextColors()
    public void setErrorViewTextColor(android.content.res.ColorStateList)
    public void setErrorTextAppearance(int)
    public void setErrorContentDescription(java.lang.CharSequence)
    public java.lang.CharSequence getErrorContentDescription()
    public int getHelperTextViewCurrentTextColor()
    public void setHelperTextViewTextColor(android.content.res.ColorStateList)
    public void setHelperTextAppearance(int)
    public final void setCaptionViewVisibilities(int,int)
    public final android.animation.ObjectAnimator createCaptionOpacityAnimator(android.widget.TextView,boolean)
    public final android.animation.ObjectAnimator createCaptionTranslationYAnimator(android.widget.TextView)
    public final boolean canAdjustIndicatorPadding()
    public final void setViewGroupGoneIfEmpty(android.view.ViewGroup,int)
    public final boolean isCaptionStateError(int)
    public final void setTextViewTypeface(android.widget.TextView,android.graphics.Typeface)
io.realm.internal.NativeObjectReference:
    public static synthetic io.realm.internal.NativeObjectReference access$002(io.realm.internal.NativeObjectReference,io.realm.internal.NativeObjectReference)
    public static synthetic io.realm.internal.NativeObjectReference access$102(io.realm.internal.NativeObjectReference,io.realm.internal.NativeObjectReference)
    public static synthetic io.realm.internal.NativeObjectReference access$100(io.realm.internal.NativeObjectReference)
    public static synthetic io.realm.internal.NativeObjectReference access$000(io.realm.internal.NativeObjectReference)
com.google.android.material.internal.NavigationMenuItemView:
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public final boolean shouldExpandActionArea()
    public final void adjustAppearance()
    public final android.graphics.drawable.StateListDrawable createDefaultBackground()
com.google.android.material.circularreveal.CircularRevealWidget$CircularRevealScrimColorProperty:
    public java.lang.Integer get(com.google.android.material.circularreveal.CircularRevealWidget)
    public void set(com.google.android.material.circularreveal.CircularRevealWidget,java.lang.Integer)
io.realm.internal.TableQuery:
    public io.realm.internal.Table getTable()
    public io.realm.internal.TableQuery equalTo(long[],long[],long)
    public io.realm.internal.TableQuery equalTo(long[],long[],java.lang.String,io.realm.Case)
    public long find()
    public io.realm.internal.TableQuery isNull(long[],long[])
    public final io.realm.internal.NativeContext context
com.google.android.material.animation.MotionTiming:
    public static com.google.android.material.animation.MotionTiming createFromAnimator(android.animation.ValueAnimator)
    public static android.animation.TimeInterpolator getInterpolatorCompat(android.animation.ValueAnimator)
    public long getDelay()
    public long getDuration()
    public int getRepeatCount()
    public int getRepeatMode()
io.realm.RealmCache$GlobalReferenceCounter:
    public void <init>()
com.google.android.material.internal.DescendantOffsetUtils:
    public static void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect)
androidx.recyclerview.widget.OpReorderer$Callback:
    public abstract androidx.recyclerview.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int,java.lang.Object)
    public abstract void recycleUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
com.google.gson.internal.UnsafeAllocator:
    public static com.google.gson.internal.UnsafeAllocator create()
com.google.gson.internal.bind.TypeAdapters$22:
    public java.net.URI read(com.google.gson.stream.JsonReader)
    public void write(com.google.gson.stream.JsonWriter,java.net.URI)
androidx.constraintlayout.solver.widgets.ConstraintAnchor:
    public androidx.constraintlayout.solver.widgets.ResolutionAnchor getResolutionNode()
    public androidx.constraintlayout.solver.SolverVariable getSolverVariable()
    public androidx.constraintlayout.solver.widgets.ConstraintWidget getOwner()
    public androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type getType()
    public androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength getStrength()
    public androidx.constraintlayout.solver.widgets.ConstraintAnchor getTarget()
    public int getConnectionCreator()
    public boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength,int)
    public boolean isValidConnection(androidx.constraintlayout.solver.widgets.ConstraintAnchor)
    public androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType mConnectionType
com.google.android.material.circularreveal.CircularRevealHelper
androidx.appcompat.app.TwilightManager$TwilightState:
    public long yesterdaySunset
    public long todaySunrise
    public long todaySunset
    public long tomorrowSunrise
androidx.core.content.ContextCompat:
    public static android.util.TypedValue sTempValue
com.google.android.material.animation.MotionSpec:
    public static void addInfoFromAnimator(com.google.android.material.animation.MotionSpec,android.animation.Animator)
    public boolean hasTiming(java.lang.String)
    public void setTiming(java.lang.String,com.google.android.material.animation.MotionTiming)
    public void setPropertyValues(java.lang.String,android.animation.PropertyValuesHolder[])
    public long getTotalDuration()
androidx.core.widget.EdgeEffectCompat
androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments
io.realm.RealmList:
    public static boolean isClassForRealmModel(java.lang.Class)
    public static void access$200(io.realm.RealmList)
    public final boolean isAttached()
    public final void checkValidRealm()
    public java.lang.Class clazz
    public java.lang.String className
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath:
    public void toPath(android.graphics.Path)
com.google.android.material.floatingactionbutton.MotionStrategy:
    public abstract void setMotionSpec(com.google.android.material.animation.MotionSpec)
    public abstract com.google.android.material.animation.MotionSpec getMotionSpec()
com.guilhermedaros.museunfc.Models.UsuarioLoginRequest
androidx.collection.MapCollections:
    public static boolean containsAllHelper(java.util.Map,java.util.Collection)
    public static boolean removeAllHelper(java.util.Map,java.util.Collection)
    public java.util.Set getEntrySet()
    public java.util.Set getKeySet()
    public java.util.Collection getValues()
com.google.gson.internal.ConstructorConstructor$12:
    public final synthetic com.google.gson.internal.ConstructorConstructor this$0
androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback:
    public abstract void onWindowVisibilityChanged(int)
    public abstract void showForSystem()
    public abstract void hideForSystem()
    public abstract void enableContentAnimations(boolean)
    public abstract void onContentScrollStarted()
    public abstract void onContentScrollStopped()
androidx.lifecycle.LiveData:
    public void observe(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer)
    public void setValue(java.lang.Object)
    public java.lang.Object getValue()
    public boolean hasActiveObservers()
    public final java.lang.Runnable mPostValueRunnable
androidx.core.view.MenuItemCompat
androidx.loader.content.Loader$OnLoadCompleteListener
io.realm.rx.RealmObservableFactory$2:
    public io.realm.rx.RealmObservableFactory$StrongReferenceCounter initialValue()
    public final synthetic io.realm.rx.RealmObservableFactory this$0
androidx.recyclerview.widget.RecyclerView:
    public void initAdapterManager()
    public boolean removeAnimatingView(android.view.View)
    public void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration,int)
    public void removeItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration)
    public void removeOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
    public void smoothScrollToPosition(int)
    public void smoothScrollBy(int,int)
    public void smoothScrollBy(int,int,android.view.animation.Interpolator)
    public void smoothScrollBy(int,int,android.view.animation.Interpolator,int)
    public boolean fling(int,int)
    public void absorbGlows(int,int)
    public void addOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener)
    public void removeOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener)
    public void onExitLayoutOrScroll()
    public boolean isAccessibilityEnabled()
    public boolean shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    public void animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public void animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
    public void saveOldPositions()
    public void offsetPositionRecordsForMove(int,int)
    public void offsetPositionRecordsForInsert(int,int)
    public void viewRangeUpdate(int,int,java.lang.Object)
    public boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public void markKnownViewsInvalid()
    public androidx.recyclerview.widget.RecyclerView$ViewHolder findContainingViewHolder(android.view.View)
    public int getChildLayoutPosition(android.view.View)
    public androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int,boolean)
    public androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForItemId(long)
    public void offsetChildrenVertical(int)
    public void offsetChildrenHorizontal(int)
    public void dispatchOnScrollStateChanged(int)
    public void repositionShadowingViews()
    public void dispatchChildAttached(android.view.View)
    public void dispatchPendingImportantForAccessibilityChanges()
    public void initFastScroller(android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable)
    public final void initAutofill()
    public final void createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)
    public final java.lang.String getFullClassName(android.content.Context,java.lang.String)
    public final void initChildrenHelper()
    public final void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter,boolean,boolean)
    public final boolean hasUpdatedView()
    public final void stopScrollersInternal()
    public final void pullGlows(float,float,float,float)
    public final void releaseGlows()
    public final boolean isPreferredNextFocus(android.view.View,android.view.View,int)
    public final boolean dispatchToOnItemTouchListeners(android.view.MotionEvent)
    public final void dispatchContentChangedIfNecessary()
    public final boolean predictiveItemAnimationsEnabled()
    public final void saveFocusInfo()
    public final void resetFocusInfo()
    public final android.view.View findNextViewToFocus()
    public final void recoverFocusFromState()
    public final int getDeepestFocusedViewWithId(android.view.View)
    public final void dispatchLayoutStep3()
    public final void handleMissingPreInfoForChangeError(long,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder)
    public final boolean didChildRangeChange(int,int)
    public final void animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,boolean,boolean)
    public final java.lang.Runnable mUpdateChildViewsRunnable
    public java.util.List mOnChildAttachStateListeners
    public static final boolean POST_UPDATES_ON_ANIMATION
androidx.appcompat.app.AppCompatDelegate:
    public static int getDefaultNightMode()
    public static void markStarted(androidx.appcompat.app.AppCompatDelegate)
    public static void markStopped(androidx.appcompat.app.AppCompatDelegate)
    public abstract androidx.appcompat.app.ActionBar getSupportActionBar()
    public abstract void setSupportActionBar(androidx.appcompat.widget.Toolbar)
    public abstract android.view.MenuInflater getMenuInflater()
    public abstract void onPostCreate(android.os.Bundle)
    public abstract void onConfigurationChanged(android.content.res.Configuration)
    public abstract void onStart()
    public abstract void onPostResume()
    public void setTheme(int)
    public abstract android.view.View findViewById(int)
    public void attachBaseContext(android.content.Context)
    public abstract void onDestroy()
    public abstract void onSaveInstanceState(android.os.Bundle)
    public int getLocalNightMode()
    public static int sDefaultNightMode
com.guilhermedaros.museunfc.Acitivities.SplashScreenActivity$4:
    public void onResponse(org.json.JSONObject)
com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo:
    public void set(float,float,float)
androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener:
    public abstract void onFitSystemWindows(android.graphics.Rect)
androidx.constraintlayout.solver.widgets.Guideline$1
androidx.transition.ViewUtils$2:
    public android.graphics.Rect get(android.view.View)
    public void set(android.view.View,android.graphics.Rect)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$5:
    public void set(android.view.View,java.lang.Float)
    public java.lang.Float get(android.view.View)
com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter:
    public java.util.Collection read(com.google.gson.stream.JsonReader)
    public void write(com.google.gson.stream.JsonWriter,java.util.Collection)
androidx.core.provider.FontsContractCompat$FontInfo:
    public android.net.Uri getUri()
    public int getTtcIndex()
    public int getWeight()
    public boolean isItalic()
    public int getResultCode()
androidx.constraintlayout.solver.ArrayRow:
    public boolean hasKeyVariable()
    public java.lang.String toReadableString()
    public void reset()
    public boolean hasVariable(androidx.constraintlayout.solver.SolverVariable)
    public androidx.constraintlayout.solver.ArrayRow createRowDefinition(androidx.constraintlayout.solver.SolverVariable,int)
    public androidx.constraintlayout.solver.ArrayRow createRowEquals(androidx.constraintlayout.solver.SolverVariable,int)
    public androidx.constraintlayout.solver.ArrayRow createRowEquals(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int)
    public androidx.constraintlayout.solver.ArrayRow addSingleError(androidx.constraintlayout.solver.SolverVariable,int)
    public androidx.constraintlayout.solver.ArrayRow createRowEqualMatchDimensions(float,float,float,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable)
    public androidx.constraintlayout.solver.ArrayRow createRowCentering(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,float,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int)
    public androidx.constraintlayout.solver.ArrayRow createRowDimensionPercent(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float)
    public void ensurePositiveConstant()
    public boolean chooseSubject(androidx.constraintlayout.solver.LinearSystem)
    public androidx.constraintlayout.solver.SolverVariable pickPivot(androidx.constraintlayout.solver.SolverVariable)
    public boolean isEmpty()
    public androidx.constraintlayout.solver.SolverVariable getPivotCandidate(androidx.constraintlayout.solver.LinearSystem,boolean[])
    public void clear()
    public void initFromRow(androidx.constraintlayout.solver.LinearSystem$Row)
    public androidx.constraintlayout.solver.SolverVariable getKey()
io.realm.com_guilhermedaros_museunfc_Entities_UsuarioRealmProxy:
    public static io.realm.internal.OsObjectSchemaInfo createExpectedObjectSchemaInfo()
    public static io.realm.internal.OsObjectSchemaInfo getExpectedObjectSchemaInfo()
    public static io.realm.com_guilhermedaros_museunfc_Entities_UsuarioRealmProxy newProxyInstance(io.realm.BaseRealm,io.realm.internal.Row)
    public static com.guilhermedaros.museunfc.Entities.Usuario copy(io.realm.Realm,io.realm.com_guilhermedaros_museunfc_Entities_UsuarioRealmProxy$UsuarioColumnInfo,com.guilhermedaros.museunfc.Entities.Usuario,java.util.Map,java.util.Set)
    public static com.guilhermedaros.museunfc.Entities.Usuario update(io.realm.Realm,io.realm.com_guilhermedaros_museunfc_Entities_UsuarioRealmProxy$UsuarioColumnInfo,com.guilhermedaros.museunfc.Entities.Usuario,com.guilhermedaros.museunfc.Entities.Usuario,java.util.Set)
androidx.transition.AnimatorUtils$AnimatorPauseListenerCompat
androidx.transition.Fade$1:
    public final synthetic androidx.transition.Fade this$0
com.google.android.material.textfield.TextInputEditText:
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public final java.lang.String getAccessibilityNodeInfoText(com.google.android.material.textfield.TextInputLayout)
com.google.gson.internal.bind.TypeAdapters$26$1:
    public java.sql.Timestamp read(com.google.gson.stream.JsonReader)
    public void write(com.google.gson.stream.JsonWriter,java.sql.Timestamp)
    public final synthetic com.google.gson.internal.bind.TypeAdapters$26 this$0
io.realm.internal.SubscriptionAwareOsResults$1:
    public void onChange()
androidx.appcompat.app.ToolbarActionBar:
    public android.view.Window$Callback getWrappedWindowCallback()
    public void populateOptionsMenu()
com.google.android.material.shape.ShapePath$1:
    public final synthetic com.google.android.material.shape.ShapePath this$0
com.google.android.material.transformation.FabTransformationBehavior$2:
    public final synthetic com.google.android.material.transformation.FabTransformationBehavior this$0
com.google.android.material.internal.NavigationMenuView:
    public void <init>(android.content.Context,android.util.AttributeSet,int)
androidx.core.widget.TintableImageSourceView
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo:
    public void saveSpanReferenceLines(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span[])
    public void assignCoordinateFromPadding(int)
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable:
    public void setEnabled(boolean)
androidx.core.util.Preconditions
com.google.gson.Gson$FutureTypeAdapter:
    public void setDelegate(com.google.gson.TypeAdapter)
androidx.core.widget.CompoundButtonCompat
com.google.gson.annotations.Expose
androidx.core.text.TextUtilsCompat:
    public static int getLayoutDirectionFromFirstChar(java.util.Locale)
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$DisabledElevationAnimation:
    public final synthetic com.google.android.material.floatingactionbutton.FloatingActionButtonImpl this$0
com.guilhermedaros.museunfc.Acitivities.SplashScreenActivity$4$1:
    public void <init>(com.guilhermedaros.museunfc.Acitivities.SplashScreenActivity$4,com.guilhermedaros.museunfc.Entities.ItemMuseu)
    public final synthetic com.guilhermedaros.museunfc.Acitivities.SplashScreenActivity$4 this$1
com.guilhermedaros.museunfc.Acitivities.SplashScreenActivity:
    public static synthetic android.widget.Button access$000(com.guilhermedaros.museunfc.Acitivities.SplashScreenActivity)
    public static synthetic android.view.View access$100(com.guilhermedaros.museunfc.Acitivities.SplashScreenActivity)
    public static synthetic void access$300(com.guilhermedaros.museunfc.Acitivities.SplashScreenActivity)
    public final boolean verificaConexao()
com.google.android.material.drawable.DrawableUtils
androidx.appcompat.app.AppCompatDialog:
    public static int getThemeResId(android.content.Context,int)
    public boolean supportRequestWindowFeature(int)
androidx.constraintlayout.solver.LinearSystem:
    public static void getMetrics()
    public static androidx.constraintlayout.solver.ArrayRow createRowDimensionPercent(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float,boolean)
    public static void <clinit>()
    public androidx.constraintlayout.solver.SolverVariable createExtraVariable()
    public void addSingleError(androidx.constraintlayout.solver.ArrayRow,int,int)
    public void minimize()
    public androidx.constraintlayout.solver.Cache getCache()
    public void addGreaterBarrier(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,boolean)
    public void addLowerBarrier(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,boolean)
    public void addCenterPoint(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintWidget,float,int)
    public final void addError(androidx.constraintlayout.solver.ArrayRow)
    public final int enforceBFS()
    public androidx.constraintlayout.solver.ArrayRow[] tempClientsCopy
    public static androidx.constraintlayout.solver.Metrics sMetrics
androidx.transition.ChangeBounds$5:
    public void set(android.view.View,android.graphics.PointF)
    public android.graphics.PointF get()
com.google.gson.internal.ConstructorConstructor$6:
    public final synthetic com.google.gson.internal.ConstructorConstructor this$0
androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo:
    public void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.fragment.app.FragmentActivity:
    public final android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
    public void onResumeFragments()
    public boolean onPrepareOptionsPanel(android.view.View,android.view.Menu)
    public androidx.fragment.app.FragmentManager getSupportFragmentManager()
    public final void markFragmentsCreated()
    public boolean mStartedIntentSenderFromFragment
    public boolean mStartedActivityFromFragment
com.google.gson.internal.bind.TypeAdapters$18:
    public java.math.BigInteger read(com.google.gson.stream.JsonReader)
    public void write(com.google.gson.stream.JsonWriter,java.math.BigInteger)
androidx.appcompat.view.ViewPropertyAnimatorCompatSet:
    public androidx.appcompat.view.ViewPropertyAnimatorCompatSet play(androidx.core.view.ViewPropertyAnimatorCompat)
    public androidx.appcompat.view.ViewPropertyAnimatorCompatSet playSequentially(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorCompat)
    public void onAnimationsEnded()
    public androidx.appcompat.view.ViewPropertyAnimatorCompatSet setDuration(long)
    public androidx.appcompat.view.ViewPropertyAnimatorCompatSet setInterpolator(android.view.animation.Interpolator)
    public androidx.appcompat.view.ViewPropertyAnimatorCompatSet setListener(androidx.core.view.ViewPropertyAnimatorListener)
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState$1:
    public com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState createFromParcel(android.os.Parcel)
    public com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState[] newArray(int)
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState:
    public boolean hasPanelItems()
    public void setStyle(android.content.Context)
    public androidx.appcompat.view.menu.MenuView getListMenuView(androidx.appcompat.view.menu.MenuPresenter$Callback)
    public int x
    public int y
com.google.android.material.shadow.ShadowViewDelegate:
    public abstract void setShadowPadding(int,int,int,int)
    public abstract void setBackgroundDrawable(android.graphics.drawable.Drawable)
    public abstract boolean isCompatPaddingEnabled()
androidx.core.view.ViewCompat$4:
    public java.lang.CharSequence frameworkGet(android.view.View)
    public void frameworkSet(android.view.View,java.lang.CharSequence)
    public boolean shouldUpdate(java.lang.CharSequence,java.lang.CharSequence)
androidx.arch.core.internal.FastSafeIterableMap:
    public java.util.Map$Entry ceil(java.lang.Object)
com.google.android.material.chip.ChipGroup$CheckedStateTracker:
    public void <init>(com.google.android.material.chip.ChipGroup)
androidx.appcompat.widget.Toolbar:
    public boolean canShowOverflowMenu()
    public boolean isOverflowMenuShowPending()
    public boolean hideOverflowMenu()
    public void setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)
    public void dismissPopupMenus()
    public boolean hasExpandedActionView()
    public void collapseActionView()
    public void setTitleTextAppearance(android.content.Context,int)
    public void setSubtitleTextAppearance(android.content.Context,int)
    public void inflateMenu(int)
    public void setContentInsetsRelative(int,int)
    public androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.util.AttributeSet)
    public void removeChildrenForExpandedActionView()
    public void addChildrenForExpandedActionView()
    public void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback)
    public final void ensureLogoView()
    public final void postShowOverflowMenu()
    public final boolean shouldCollapse()
    public final int getViewListMeasuredWidth(java.util.List,int[])
    public final int getChildVerticalGravity(int)
com.google.android.material.shadow.ShadowRenderer:
    public void <init>(int)
    public void drawEdgeShadow(android.graphics.Canvas,android.graphics.Matrix,android.graphics.RectF,int)
    public void drawCornerShadow(android.graphics.Canvas,android.graphics.Matrix,android.graphics.RectF,int,float,float)
    public android.graphics.Paint getShadowPaint()
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$3:
    public android.graphics.Matrix evaluate(float,android.graphics.Matrix,android.graphics.Matrix)
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton:
    public final float[] mTempPts
androidx.transition.ViewOverlayApi14
androidx.fragment.app.FragmentManagerViewModel:
    public static androidx.fragment.app.FragmentManagerViewModel getInstance(androidx.lifecycle.ViewModelStore)
    public boolean isCleared()
    public boolean addRetainedFragment(androidx.fragment.app.Fragment)
    public java.util.Collection getRetainedFragments()
    public boolean removeRetainedFragment(androidx.fragment.app.Fragment)
    public androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment)
    public androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment)
    public void clearNonConfigState(androidx.fragment.app.Fragment)
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale
androidx.appcompat.widget.AppCompatHintHelper
com.google.android.material.datepicker.DateStrings
androidx.transition.AnimatorUtils
androidx.recyclerview.widget.RecyclerView$LayoutManager:
    public final boolean isItemPrefetchEnabled()
    public void dispatchAttachedToWindow(androidx.recyclerview.widget.RecyclerView)
    public void dispatchDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler)
    public boolean isAttachedToWindow()
    public boolean removeCallbacks(java.lang.Runnable)
    public boolean getClipToPadding()
    public boolean isSmoothScrolling()
    public void addDisappearingView(android.view.View)
    public void addDisappearingView(android.view.View,int)
    public void addView(android.view.View,int)
    public void removeView(android.view.View)
    public int getBaseline()
    public void detachViewAt(int)
    public void attachView(android.view.View,int,androidx.recyclerview.widget.RecyclerView$LayoutParams)
    public void attachView(android.view.View,int)
    public void moveView(int,int)
    public int getWidthMode()
    public int getHeightMode()
    public int getWidth()
    public int getHeight()
    public int getItemCount()
    public void measureChildWithMargins(android.view.View,int,int)
    public void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect)
    public void calculateItemDecorationsForChild(android.view.View,android.graphics.Rect)
    public int getTopDecorationHeight(android.view.View)
    public int getBottomDecorationHeight(android.view.View)
    public int getLeftDecorationWidth(android.view.View)
    public int getRightDecorationWidth(android.view.View)
    public boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean)
    public void setMeasuredDimension(int,int)
    public void stopSmoothScroller()
    public void onSmoothScrollerStopped(androidx.recyclerview.widget.RecyclerView$SmoothScroller)
    public void onInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
    public void onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
    public void requestSimpleAnimationsInNextLayout()
    public boolean performAccessibilityAction(int,android.os.Bundle)
    public boolean performAccessibilityActionForItem(android.view.View,int,android.os.Bundle)
    public boolean hasFlexibleChildInBothOrientations()
    public final void scrapOrRecycleView(androidx.recyclerview.widget.RecyclerView$Recycler,int,android.view.View)
    public final int[] getChildRectangleOnScreenScrollAmount(android.view.View,android.graphics.Rect)
    public final boolean isFocusedChildVisibleAfterScrolling(androidx.recyclerview.widget.RecyclerView,int,int)
com.getkeepsafe.relinker.TextUtils
io.realm.internal.RealmNotifier$RealmObserverPair:
    public static void access$100(io.realm.internal.RealmNotifier$RealmObserverPair,java.lang.Object)
    public final void onChange(java.lang.Object)
com.google.android.material.animation.ImageMatrixProperty:
    public void set(android.widget.ImageView,android.graphics.Matrix)
    public android.graphics.Matrix get(android.widget.ImageView)
androidx.transition.WindowIdApi14
com.google.android.material.appbar.AppBarLayout:
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public void setExpanded(boolean,boolean)
    public com.google.android.material.appbar.AppBarLayout$LayoutParams generateDefaultLayoutParams()
    public com.google.android.material.appbar.AppBarLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
    public boolean hasChildWithInterpolator()
    public boolean hasScrollableChildren()
    public void onOffsetChanged(int)
    public boolean isLiftOnScroll()
    public void resetPendingAction()
    public androidx.core.view.WindowInsetsCompat onWindowInsetChanged(androidx.core.view.WindowInsetsCompat)
    public final boolean shouldDrawStatusBarForeground()
    public final boolean hasCollapsibleChild()
    public final void invalidateScrollRanges()
    public final boolean setLiftableState(boolean)
    public final void startLiftOnScrollElevationOverlayAnimation(com.google.android.material.shape.MaterialShapeDrawable,boolean)
    public final android.view.View findLiftOnScrollTargetView(android.view.View)
    public final void clearLiftOnScrollTargetView()
    public java.util.List listeners
    public boolean liftableOverride
com.google.gson.internal.bind.TypeAdapters:
    public static com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,com.google.gson.TypeAdapter)
    public static com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter)
    public static com.google.gson.TypeAdapterFactory newFactoryForMultipleTypes(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter)
    public static com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,com.google.gson.TypeAdapter)
io.realm.internal.sync.OsSubscription$SubscriptionObserverPair:
    public void onChange(io.realm.internal.sync.OsSubscription)
org.slf4j.event.EventRecodingLogger:
    public final void recordEvent(org.slf4j.event.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)
    public final void recordEvent(org.slf4j.event.Level,org.slf4j.Marker,java.lang.String,java.lang.Object[],java.lang.Throwable)
androidx.core.view.GravityCompat
androidx.appcompat.app.AlertController$AlertParams$1
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState:
    public void invalidateCache()
    public final int getCapacity()
    public final int getChildCount()
    public final boolean setLayoutDirection(int,int)
    public final void applyTheme(android.content.res.Resources$Theme)
    public final void setVariablePadding(boolean)
    public final android.graphics.Rect getConstantPadding()
    public final void setConstantSize(boolean)
    public final boolean isConstantSize()
    public final int getConstantWidth()
    public final int getConstantHeight()
    public final int getConstantMinimumWidth()
    public final int getConstantMinimumHeight()
    public final void setEnterFadeDuration(int)
    public final void setExitFadeDuration(int)
    public final int getOpacity()
    public void growArray(int,int)
    public synchronized boolean canConstantState()
    public final android.graphics.drawable.Drawable prepareDrawable(android.graphics.drawable.Drawable)
androidx.recyclerview.widget.ScrollbarHelper
com.google.android.material.internal.StateListAnimator:
    public void setState(int[])
    public void jumpToCurrentState()
    public final void start(com.google.android.material.internal.StateListAnimator$Tuple)
    public final void cancel()
androidx.arch.core.executor.DefaultTaskExecutor:
    public void executeOnDiskIO(java.lang.Runnable)
    public void postToMainThread(java.lang.Runnable)
    public volatile android.os.Handler mMainHandler
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener:
    public androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(androidx.core.view.ViewPropertyAnimatorCompat,int)
org.slf4j.helpers.Util$ClassContextSecurityManager:
    public void <init>()
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior:
    public boolean blocksInteractionBelow(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)
    public void onNestedScrollAccepted(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int)
    public void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int)
androidx.core.view.NestedScrollingParent
com.google.gson.internal.bind.util.ISO8601Utils:
    public static int indexOfNonDigit(java.lang.String,int)
io.realm.internal.OsRealmConfig$Durability:
    public final int value
androidx.appcompat.widget.MenuPopupWindow:
    public void setEnterTransition(java.lang.Object)
    public void setExitTransition(java.lang.Object)
    public void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
    public void setTouchModal(boolean)
androidx.appcompat.app.AppCompatDelegateImpl$4:
    public void <init>(androidx.appcompat.app.AppCompatDelegateImpl)
    public void onFitSystemWindows(android.graphics.Rect)
com.google.gson.internal.ConstructorConstructor$13:
    public final synthetic com.google.gson.internal.ConstructorConstructor this$0
androidx.appcompat.view.menu.MenuPopup:
    public static androidx.appcompat.view.menu.MenuAdapter toMenuAdapter(android.widget.ListAdapter)
    public void setEpicenterBounds(android.graphics.Rect)
    public android.graphics.Rect getEpicenterBounds()
androidx.transition.ObjectAnimatorUtils
com.google.android.material.elevation.ElevationOverlayProvider:
    public int compositeOverlayIfNeeded(int,float)
    public int compositeOverlay(int,float)
    public float calculateOverlayAlphaFraction(float)
    public boolean isThemeElevationOverlayEnabled()
    public final boolean isThemeSurfaceColor(int)
androidx.core.graphics.drawable.DrawableCompat
com.google.android.material.floatingactionbutton.FloatingActionButton:
    public static synthetic int access$000(com.google.android.material.floatingactionbutton.FloatingActionButton)
    public static void <clinit>()
    public void show(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener)
    public void hide(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener)
    public void getMeasuredContentRect(android.graphics.Rect)
    public final com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$InternalVisibilityChangedListener wrapOnVisibilityChangedListener(com.google.android.material.floatingactionbutton.FloatingActionButton$OnVisibilityChangedListener)
    public final void offsetRectWithShadow(android.graphics.Rect)
    public final com.google.android.material.floatingactionbutton.FloatingActionButtonImpl createImpl()
    public int maxImageSize
    public final android.graphics.Rect touchArea
    public final androidx.appcompat.widget.AppCompatImageHelper imageHelper
    public final com.google.android.material.expandable.ExpandableWidgetHelper expandableWidgetHelper
    public static final int DEF_STYLE_RES
androidx.constraintlayout.solver.widgets.Guideline:
    public int getOrientation()
    public java.util.ArrayList getAnchors()
    public void setGuidePercent(float)
    public void setGuideBegin(int)
    public void setGuideEnd(int)
    public int mMinimumPosition
    public androidx.constraintlayout.solver.widgets.Rectangle mHead
    public int mHeadSize
com.google.android.material.transformation.ExpandableTransformationBehavior:
    public static synthetic android.animation.AnimatorSet access$002(com.google.android.material.transformation.ExpandableTransformationBehavior,android.animation.AnimatorSet)
androidx.viewpager.widget.ViewPager$MyAccessibilityDelegate:
    public final boolean canScroll()
com.google.gson.internal.bind.TypeAdapters$36
androidx.appcompat.view.menu.ExpandedMenuView:
    public void <init>(android.content.Context,android.util.AttributeSet,int)
    public int mAnimations
androidx.collection.MapCollections$EntrySet:
    public boolean add()
androidx.recyclerview.widget.RecyclerView$6:
    public void offsetPositionsForRemovingInvisible(int,int)
    public void offsetPositionsForRemovingLaidOutOrNewView(int,int)
    public void onDispatchFirstPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
    public void onDispatchSecondPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
androidx.core.widget.AutoScrollHelper:
    public static int constrain(int,int,int)
    public androidx.core.widget.AutoScrollHelper setEnabled(boolean)
    public androidx.core.widget.AutoScrollHelper setMaximumVelocity(float,float)
    public androidx.core.widget.AutoScrollHelper setMinimumVelocity(float,float)
    public androidx.core.widget.AutoScrollHelper setRelativeVelocity(float,float)
    public androidx.core.widget.AutoScrollHelper setEdgeType(int)
    public androidx.core.widget.AutoScrollHelper setRelativeEdges(float,float)
    public androidx.core.widget.AutoScrollHelper setMaximumEdges(float,float)
    public androidx.core.widget.AutoScrollHelper setActivationDelay(int)
    public androidx.core.widget.AutoScrollHelper setRampUpDuration(int)
    public androidx.core.widget.AutoScrollHelper setRampDownDuration(int)
    public abstract void scrollTargetBy(int,int)
    public abstract boolean canTargetScrollHorizontally(int)
    public abstract boolean canTargetScrollVertically(int)
    public void cancelTargetTouch()
    public final void startAnimating()
    public final float getEdgeValue(float,float,float,float)
    public boolean mExclusive
androidx.transition.FragmentTransitionSupport$1:
    public final synthetic android.graphics.Rect val$epicenter
    public final synthetic androidx.transition.FragmentTransitionSupport this$0
com.android.volley.ExecutorDelivery$1:
    public final synthetic com.android.volley.ExecutorDelivery this$0
com.google.android.material.animation.ArgbEvaluatorCompat:
    public static com.google.android.material.animation.ArgbEvaluatorCompat getInstance()
    public java.lang.Integer evaluate(float,java.lang.Integer,java.lang.Integer)
com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment:
    public void getEdgePath(float,float,float,com.google.android.material.shape.ShapePath)
    public float getFabDiameter()
    public void setFabDiameter(float)
    public void setHorizontalOffset(float)
    public float getCradleVerticalOffset()
    public void setCradleVerticalOffset(float)
    public float getFabCradleMargin()
    public void setFabCradleMargin(float)
    public float getFabCradleRoundedCornerRadius()
    public void setFabCradleRoundedCornerRadius(float)
    public float fabDiameter
com.google.gson.internal.bind.TypeAdapters$10:
    public java.util.concurrent.atomic.AtomicIntegerArray read(com.google.gson.stream.JsonReader)
    public void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicIntegerArray)
com.google.android.material.datepicker.CalendarConstraints$1:
    public com.google.android.material.datepicker.CalendarConstraints createFromParcel(android.os.Parcel)
    public com.google.android.material.datepicker.CalendarConstraints[] newArray(int)
androidx.core.graphics.TypefaceCompatApi29Impl:
    public android.graphics.Typeface createFromInputStream(android.content.Context,java.io.InputStream)
io.realm.internal.RealmCore:
    public static final java.lang.String BINARIES_PATH
com.google.gson.internal.bind.TypeAdapters$23:
    public java.net.InetAddress read(com.google.gson.stream.JsonReader)
    public void write(com.google.gson.stream.JsonWriter,java.net.InetAddress)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView:
    public void <init>(android.content.Context,android.util.AttributeSet,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat:
    public static androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrap(android.view.accessibility.AccessibilityNodeInfo)
    public static androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View)
    public static androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain()
    public static androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
    public static void <clinit>()
    public android.view.accessibility.AccessibilityNodeInfo unwrap()
    public void setSource(android.view.View,int)
    public int getChildCount()
    public void addChild(android.view.View,int)
    public int getActions()
    public void addAction(int)
    public boolean performAction(int,android.os.Bundle)
    public void setParent(android.view.View)
    public void setParent(android.view.View,int)
    public void getBoundsInParent(android.graphics.Rect)
    public void setBoundsInParent(android.graphics.Rect)
    public void getBoundsInScreen(android.graphics.Rect)
    public void setBoundsInScreen(android.graphics.Rect)
    public boolean isCheckable()
    public void setCheckable(boolean)
    public boolean isChecked()
    public void setChecked(boolean)
    public boolean isFocusable()
    public void setFocusable(boolean)
    public boolean isFocused()
    public void setFocused(boolean)
    public void setVisibleToUser(boolean)
    public void setAccessibilityFocused(boolean)
    public boolean isSelected()
    public boolean isClickable()
    public void setClickable(boolean)
    public boolean isLongClickable()
    public boolean isEnabled()
    public void setEnabled(boolean)
    public boolean isPassword()
    public boolean isScrollable()
    public void setScrollable(boolean)
    public java.lang.CharSequence getPackageName()
    public void setPackageName(java.lang.CharSequence)
    public java.lang.CharSequence getClassName()
    public void setClassName(java.lang.CharSequence)
    public void setText(java.lang.CharSequence)
    public void addSpansToExtras(java.lang.CharSequence,android.view.View)
    public void setContentDescription(java.lang.CharSequence)
    public void recycle()
    public java.lang.String getViewIdResourceName()
    public java.util.List getActionList()
    public void setError(java.lang.CharSequence)
    public void setMaxTextLength(int)
    public void setPaneTitle(java.lang.CharSequence)
    public void setScreenReaderFocusable(boolean)
    public boolean isShowingHintText()
    public void setShowingHintText(boolean)
    public void setHeading(boolean)
    public final android.util.SparseArray getOrCreateSpansFromViewTags(android.view.View)
    public final android.util.SparseArray getSpansFromViewTags(android.view.View)
    public final int idForClickableSpan(android.text.style.ClickableSpan,android.util.SparseArray)
    public final boolean hasSpans()
    public final void clearExtrasSpans()
    public final void addSpanLocationToExtras(android.text.style.ClickableSpan,android.text.Spanned,int)
    public final void removeCollectedSpans(android.view.View)
    public final boolean getBooleanProperty(int)
androidx.appcompat.widget.SuggestionsAdapter:
    public void setQueryRefinement(int)
    public android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)
    public final java.lang.CharSequence formatUrl(java.lang.CharSequence)
    public final void setViewText(android.widget.TextView,java.lang.CharSequence)
    public final android.graphics.drawable.Drawable getIcon1(android.database.Cursor)
    public final android.graphics.drawable.Drawable getIcon2(android.database.Cursor)
    public final void setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int)
    public final android.graphics.drawable.Drawable getDrawable(android.net.Uri)
    public final android.graphics.drawable.Drawable checkIconCache(java.lang.String)
    public final void storeInIconCache(java.lang.String,android.graphics.drawable.Drawable)
    public final android.graphics.drawable.Drawable getDefaultIcon1()
    public final android.graphics.drawable.Drawable getActivityIconWithCache(android.content.ComponentName)
    public final android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName)
    public final android.app.SearchManager mSearchManager
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$3:
    public final synthetic com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton this$0
io.realm.internal.objectstore.OsObjectBuilder$8
com.google.gson.internal.Excluder$1:
    public final com.google.gson.TypeAdapter delegate()
com.google.gson.internal.bind.TypeAdapters$4:
    public java.lang.Boolean read(com.google.gson.stream.JsonReader)
    public void write(com.google.gson.stream.JsonWriter,java.lang.Boolean)
androidx.viewpager2.adapter.FragmentStateAdapter$5:
    public final synthetic android.os.Handler val$handler
    public final synthetic java.lang.Runnable val$runnable
com.google.gson.internal.$Gson$Preconditions
androidx.core.view.WindowInsetsCompat:
    public androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int)
    public androidx.core.graphics.Insets getSystemWindowInsets()
    public androidx.core.graphics.Insets getMandatorySystemGestureInsets()
    public android.view.WindowInsets toWindowInsets()
androidx.appcompat.widget.TooltipPopup:
    public static android.view.View getAppRootView(android.view.View)
    public void show(android.view.View,int,int,boolean,java.lang.CharSequence)
    public boolean isShowing()
    public final void computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams)
androidx.appcompat.app.AppCompatActivity:
    public void setSupportActionBar(androidx.appcompat.widget.Toolbar)
    public void onCreateSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder)
    public boolean onSupportNavigateUp()
    public boolean supportShouldUpRecreateTask(android.content.Intent)
    public void supportNavigateUpTo(android.content.Intent)
    public void onSupportContentChanged()
androidx.appcompat.widget.ForwardingListener:
    public static boolean pointInView(android.view.View,float,float,float)
    public void onLongPress()
    public final boolean onTouchObserved(android.view.MotionEvent)
    public final boolean onTouchForwarded(android.view.MotionEvent)
    public final boolean toLocalMotionEvent(android.view.View,android.view.MotionEvent)
    public final boolean toGlobalMotionEvent(android.view.View,android.view.MotionEvent)
io.realm.internal.sync.SubscriptionAction:
    public boolean shouldCreateSubscriptions()
    public java.lang.String getName()
    public long getTimeToLiveMs()
    public boolean isUpdate()
    public static final io.realm.internal.sync.SubscriptionAction ANONYMOUS_SUBSCRIPTION
com.android.volley.toolbox.HttpHeaderParser
androidx.recyclerview.widget.ViewInfoStore$InfoRecord:
    public static void drainCache()
io.realm.rx.RealmObservableFactory$1:
    public io.realm.rx.RealmObservableFactory$StrongReferenceCounter initialValue()
    public final synthetic io.realm.rx.RealmObservableFactory this$0
com.android.volley.ServerError:
    public void <init>()
com.google.android.material.radiobutton.MaterialRadioButton:
    public void <init>(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.widget.AppCompatRatingBar:
    public void <init>(android.content.Context,android.util.AttributeSet,int)
androidx.transition.ViewUtils$1:
    public java.lang.Float get(android.view.View)
    public void set(android.view.View,java.lang.Float)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$4:
    public void set(android.view.View,java.lang.Float)
    public java.lang.Float get(android.view.View)
androidx.appcompat.widget.ScrollingTabContainerView$1
androidx.core.text.BidiFormatter:
    public static boolean isRtlLocale(java.util.Locale)
    public boolean getStereoReset()
    public java.lang.String unicodeWrap(java.lang.String,androidx.core.text.TextDirectionHeuristicCompat,boolean)
    public java.lang.String unicodeWrap(java.lang.String)
    public java.lang.CharSequence unicodeWrap(java.lang.CharSequence)
    public final java.lang.String markAfter(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat)
    public final java.lang.String markBefore(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat)
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1:
    public void onEnd()
androidx.constraintlayout.widget.ConstraintSet$Constraint:
    public synthetic void <init>(androidx.constraintlayout.widget.ConstraintSet$1)
    public static void access$200(androidx.constraintlayout.widget.ConstraintSet$Constraint,androidx.constraintlayout.widget.ConstraintHelper,int,androidx.constraintlayout.widget.Constraints$LayoutParams)
    public static synthetic void access$300(androidx.constraintlayout.widget.ConstraintSet$Constraint,int,androidx.constraintlayout.widget.Constraints$LayoutParams)
    public androidx.constraintlayout.widget.ConstraintSet$Constraint clone()
    public final void fillFromConstraints(androidx.constraintlayout.widget.ConstraintHelper,int,androidx.constraintlayout.widget.Constraints$LayoutParams)
    public final void fillFrom(int,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams)
io.realm.internal.sync.OsSubscription$Callback:
    public void <init>()
    public void onCalled(io.realm.internal.sync.OsSubscription$SubscriptionObserverPair,java.lang.Object)
com.google.gson.internal.ConstructorConstructor$5:
    public final synthetic com.google.gson.internal.ConstructorConstructor this$0
androidx.transition.FragmentTransitionSupport$2:
    public final synthetic androidx.transition.FragmentTransitionSupport this$0
androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener:
    public void onStartEnterTransition()
    public void startListening()
    public boolean isReady()
    public void cancelTransaction()
com.google.gson.stream.JsonReader:
    public final void setLenient(boolean)
    public final boolean isLenient()
    public final int peekKeyword()
    public final int peekNumber()
    public final void skipUnquotedValue()
    public final boolean skipTo(java.lang.String)
    public final void consumeNonExecutePrefix()
androidx.core.graphics.TypefaceCompatApi21Impl:
    public static java.lang.Object newFamily()
    public static android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object)
    public static void <clinit>()
    public final java.io.File getFile(android.os.ParcelFileDescriptor)
androidx.lifecycle.LiveData$1
androidx.appcompat.widget.AppCompatDrawableManager:
    public static synthetic android.graphics.PorterDuff$Mode access$000()
    public synchronized android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)
    public synchronized void onConfigurationChanged(android.content.Context)
androidx.core.view.ViewCompat:
    public static void setImportantForAutofill(android.view.View,int)
    public static androidx.core.view.AccessibilityDelegateCompat getOrCreateAccessibilityDelegateCompat(android.view.View)
    public static android.view.View$AccessibilityDelegate getAccessibilityDelegateThroughReflection(android.view.View)
    public static void addAccessibilityAction(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)
    public static java.util.List getActionList(android.view.View)
    public static int getAccessibilityLiveRegion(android.view.View)
    public static androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)
    public static android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
    public static androidx.core.view.ViewCompat$AccessibilityViewProperty screenReaderFocusableProperty()
    public static java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)
    public static androidx.core.view.ViewCompat$AccessibilityViewProperty paneTitleProperty()
    public static boolean isAccessibilityHeading(android.view.View)
    public static androidx.core.view.ViewCompat$AccessibilityViewProperty accessibilityHeadingProperty()
    public static final java.util.concurrent.atomic.AtomicInteger sNextGeneratedId
    public static java.lang.reflect.Field sMinWidthField
    public static boolean sMinWidthFieldFetched
    public static java.lang.reflect.Field sMinHeightField
    public static boolean sMinHeightFieldFetched
    public static java.util.WeakHashMap sTransitionNameMap
    public static final int[] ACCESSIBILITY_ACTIONS_RESOURCE_IDS
    public static androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager sAccessibilityPaneVisibilityManager
androidx.appcompat.widget.ResourcesWrapper:
    public void <init>(android.content.res.Resources)
    public java.lang.CharSequence getText(int)
    public java.lang.CharSequence getQuantityText(int,int)
    public java.lang.String getString(int)
    public varargs java.lang.String getString(int,java.lang.Object[])
    public varargs java.lang.String getQuantityString(int,int,java.lang.Object[])
    public java.lang.String getQuantityString(int,int)
    public java.lang.CharSequence getText(int,java.lang.CharSequence)
    public java.lang.CharSequence[] getTextArray(int)
    public java.lang.String[] getStringArray(int)
    public int[] getIntArray(int)
    public android.content.res.TypedArray obtainTypedArray(int)
    public float getDimension(int)
    public int getDimensionPixelOffset(int)
    public int getDimensionPixelSize(int)
    public float getFraction(int,int,int)
    public android.graphics.drawable.Drawable getDrawable(int)
    public android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme)
    public android.graphics.drawable.Drawable getDrawableForDensity(int,int)
    public android.graphics.drawable.Drawable getDrawableForDensity(int,int,android.content.res.Resources$Theme)
    public android.graphics.Movie getMovie(int)
    public int getColor(int)
    public android.content.res.ColorStateList getColorStateList(int)
    public boolean getBoolean(int)
    public int getInteger(int)
    public android.content.res.XmlResourceParser getLayout(int)
    public android.content.res.XmlResourceParser getAnimation(int)
    public android.content.res.XmlResourceParser getXml(int)
    public java.io.InputStream openRawResource(int)
    public java.io.InputStream openRawResource(int,android.util.TypedValue)
    public android.content.res.AssetFileDescriptor openRawResourceFd(int)
    public void getValue(int,android.util.TypedValue,boolean)
    public void getValueForDensity(int,int,android.util.TypedValue,boolean)
    public void getValue(java.lang.String,android.util.TypedValue,boolean)
    public android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])
    public void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)
    public android.util.DisplayMetrics getDisplayMetrics()
    public android.content.res.Configuration getConfiguration()
    public int getIdentifier(java.lang.String,java.lang.String,java.lang.String)
    public java.lang.String getResourceName(int)
    public java.lang.String getResourcePackageName(int)
    public java.lang.String getResourceTypeName(int)
    public java.lang.String getResourceEntryName(int)
    public void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle)
    public void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle)
    public final android.content.res.Resources mResources
com.google.gson.JsonElement:
    public boolean isJsonArray()
    public boolean isJsonObject()
    public boolean isJsonPrimitive()
    public boolean isJsonNull()
    public com.google.gson.JsonObject getAsJsonObject()
    public com.google.gson.JsonArray getAsJsonArray()
io.realm.internal.OsRealmConfig$SchemaMode:
    public byte getNativeValue()
androidx.recyclerview.widget.RecyclerView$SmoothScroller:
    public void start(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$LayoutManager)
    public void setTargetPosition(int)
    public androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
    public boolean isPendingInitialRun()
    public boolean isRunning()
    public int getTargetPosition()
    public int getChildCount()
    public android.view.View findViewByPosition(int)
    public void onChildAttachedToWindow(android.view.View)
    public void normalize(android.graphics.PointF)
    public abstract void onStart()
    public abstract void onStop()
    public abstract void onSeekTargetStep(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action)
androidx.appcompat.widget.Toolbar$LayoutParams:
    public void copyMarginsFromCompat(android.view.ViewGroup$MarginLayoutParams)
androidx.transition.Fade:
    public static float getStartAlpha(androidx.transition.TransitionValues,float)
    public android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues)
androidx.fragment.app.FragmentState:
    public androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,androidx.fragment.app.FragmentFactory)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup:
    public boolean isVisibleToUser(android.view.View)
    public int getHorizontalOriginalOffset()
androidx.appcompat.app.WindowDecorActionBar:
    public static boolean checkShowingFlags(boolean,boolean,boolean)
    public void setElevation(float)
    public void completeDeferredDestroyActionMode()
    public void onWindowVisibilityChanged(int)
    public void setDisplayHomeAsUpEnabled(boolean)
    public void setHomeButtonEnabled(boolean)
    public void setDisplayOptions(int,int)
    public int getNavigationMode()
    public void enableContentAnimations(boolean)
    public void showForSystem()
    public void hideForSystem()
    public void setHideOnContentScrollEnabled(boolean)
    public void doShow(boolean)
    public void doHide(boolean)
    public void onContentScrollStarted()
    public void onContentScrollStopped()
    public final androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View)
    public final void showForActionMode()
    public final void hideForActionMode()
    public final boolean shouldAnimateContextView()
    public android.app.Activity mActivity
    public android.app.Dialog mDialog
    public androidx.appcompat.widget.ScrollingTabContainerView mTabScrollView
    public java.util.ArrayList mTabs
    public int mSavedTabPosition
    public static final synthetic boolean $assertionsDisabled
androidx.lifecycle.ClassesInfoCache$MethodReference:
    public void invokeCallback(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object)
com.google.android.material.ripple.RippleUtils:
    public static final int[] PRESSED_STATE_SET
    public static final int[] HOVERED_FOCUSED_STATE_SET
    public static final int[] FOCUSED_STATE_SET
    public static final int[] HOVERED_STATE_SET
    public static final int[] SELECTED_PRESSED_STATE_SET
    public static final int[] SELECTED_HOVERED_FOCUSED_STATE_SET
    public static final int[] SELECTED_FOCUSED_STATE_SET
    public static final int[] SELECTED_HOVERED_STATE_SET
    public static final int[] SELECTED_STATE_SET
androidx.core.view.ViewCompat$UnhandledKeyEventManager:
    public boolean dispatch(android.view.View,android.view.KeyEvent)
    public boolean preDispatch(android.view.KeyEvent)
    public final android.util.SparseArray getCapturedKeys()
    public final void recalcViewsWithUnhandled()
androidx.appcompat.widget.AppCompatToggleButton:
    public void <init>(android.content.Context,android.util.AttributeSet,int)
com.guilhermedaros.museunfc.Fragments.FragmentMain:
    public static com.guilhermedaros.museunfc.Fragments.FragmentMain newInstance(android.speech.tts.TextToSpeech)
    public static synthetic android.speech.tts.TextToSpeech access$000()
    public com.guilhermedaros.museunfc.Fragments.FragmentMain$OnFragmentInteractionListener mListener
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState:
    public void invalidateSpanInfo()
    public void invalidateAnchorPositionInfo()
androidx.recyclerview.widget.RecyclerView$SavedState$1:
    public androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
    public androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel)
    public androidx.recyclerview.widget.RecyclerView$SavedState[] newArray(int)
androidx.core.app.NavUtils
androidx.core.graphics.ColorUtils:
    public static int compositeAlpha(int,int)
    public static final java.lang.ThreadLocal TEMP_ARRAY
androidx.constraintlayout.widget.Placeholder:
    public void updatePreLayout(androidx.constraintlayout.widget.ConstraintLayout)
androidx.coordinatorlayout.widget.DirectedAcyclicGraph:
    public boolean contains(java.lang.Object)
    public void addEdge(java.lang.Object,java.lang.Object)
    public java.util.List getIncomingEdges(java.lang.Object)
    public java.util.List getOutgoingEdges(java.lang.Object)
    public boolean hasOutgoingEdges(java.lang.Object)
    public void clear()
    public java.util.ArrayList getSortedList()
    public final java.util.ArrayList getEmptyList()
    public final void poolList(java.util.ArrayList)
androidx.core.content.res.ResourcesCompat
com.guilhermedaros.museunfc.Entities.Usuario:
    public int id
    public java.lang.String login
    public java.lang.String senha
androidx.fragment.app.FragmentTransitionImpl:
    public static java.lang.String findKeyForValue(java.util.Map,java.lang.String)
    public java.util.ArrayList prepareSetNameOverridesReordered(java.util.ArrayList)
    public void setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map)
    public void setNameOverridesOrdered(android.view.View,java.util.ArrayList,java.util.Map)
    public void scheduleNameReset(android.view.ViewGroup,java.util.ArrayList,java.util.Map)
androidx.core.view.ViewCompat$3:
    public java.lang.Boolean frameworkGet(android.view.View)
    public void frameworkSet(android.view.View,java.lang.Boolean)
    public boolean shouldUpdate(java.lang.Boolean,java.lang.Boolean)
androidx.arch.core.executor.TaskExecutor:
    public abstract void executeOnDiskIO(java.lang.Runnable)
    public abstract void postToMainThread(java.lang.Runnable)
androidx.constraintlayout.solver.widgets.Helper:
    public void add(androidx.constraintlayout.solver.widgets.ConstraintWidget)
    public void removeAllIds()
com.google.android.material.transformation.FabTransformationBehavior$1:
    public final synthetic com.google.android.material.transformation.FabTransformationBehavior this$0
androidx.recyclerview.widget.RecyclerView$ItemDecoration:
    public void onDraw()
    public void onDrawOver()
    public void getItemOffsets(android.graphics.Rect)
    public void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView)
androidx.constraintlayout.widget.Constraints:
    public androidx.constraintlayout.widget.Constraints$LayoutParams generateLayoutParams(android.util.AttributeSet)
    public androidx.constraintlayout.widget.Constraints$LayoutParams generateDefaultLayoutParams()
com.guilhermedaros.museunfc.Acitivities.SplashScreenActivity$5:
    public final synthetic com.guilhermedaros.museunfc.Acitivities.SplashScreenActivity this$0
androidx.core.view.ViewCompat$AccessibilityViewProperty:
    public void set(android.view.View,java.lang.Object)
    public final boolean frameworkAvailable()
    public final boolean extrasAvailable()
androidx.appcompat.widget.ListPopupWindow$2
androidx.activity.ImmLeaksCleaner:
    public static void initializeReflectiveFields()
    public static void <clinit>()
androidx.appcompat.widget.ScrollingTabContainerView$TabView:
    public void <init>(androidx.appcompat.widget.ScrollingTabContainerView,android.content.Context,androidx.appcompat.app.ActionBar$Tab,boolean)
    public void bindTab(androidx.appcompat.app.ActionBar$Tab)
    public void update()
    public androidx.appcompat.app.ActionBar$Tab getTab()
    public final int[] BG_ATTRS
    public android.widget.TextView mTextView
    public android.widget.ImageView mIconView
    public android.view.View mCustomView
com.google.android.material.floatingactionbutton.FloatingActionButtonImpl$4:
    public java.lang.Float evaluate(float,java.lang.Float,java.lang.Float)
    public final synthetic com.google.android.material.floatingactionbutton.FloatingActionButtonImpl this$0
androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry:
    public abstract void addPosition(int,int)
com.google.android.material.shape.ShapePath$PathArcOperation:
    public static void access$600(com.google.android.material.shape.ShapePath$PathArcOperation,float)
    public static void access$700(com.google.android.material.shape.ShapePath$PathArcOperation,float)
    public static float access$800(com.google.android.material.shape.ShapePath$PathArcOperation)
    public static float access$900(com.google.android.material.shape.ShapePath$PathArcOperation)
    public static float access$1000(com.google.android.material.shape.ShapePath$PathArcOperation)
    public static float access$1100(com.google.android.material.shape.ShapePath$PathArcOperation)
    public static float access$1200(com.google.android.material.shape.ShapePath$PathArcOperation)
    public static float access$1300(com.google.android.material.shape.ShapePath$PathArcOperation)
    public final float getLeft()
    public final float getTop()
    public final float getRight()
    public final float getBottom()
    public final void setLeft(float)
    public final void setTop(float)
    public final void setRight(float)
    public final void setBottom(float)
    public final float getStartAngle()
    public final float getSweepAngle()
    public final void setStartAngle(float)
    public final void setSweepAngle(float)
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags:
    public void setBounds(int,int,int,int)
    public void addFlags(int)
    public void resetFlags()
androidx.transition.ChangeBounds$6:
    public void set(android.view.View,android.graphics.PointF)
    public android.graphics.PointF get()
io.realm.RealmQuery:
    public static io.realm.RealmQuery createQuery(io.realm.Realm,java.lang.Class)
    public static boolean isClassForRealmModel(java.lang.Class)
    public io.realm.RealmQuery equalTo(java.lang.String,java.lang.String)
    public io.realm.RealmQuery equalTo(java.lang.String,java.lang.String,io.realm.Case)
    public final io.realm.RealmQuery equalToWithoutThreadValidation(java.lang.String,java.lang.String,io.realm.Case)
    public final io.realm.RealmQuery equalToWithoutThreadValidation(java.lang.String,java.lang.Integer)
    public final boolean isDynamicQuery()
    public final io.realm.RealmResults createRealmResults(io.realm.internal.TableQuery,io.realm.internal.core.DescriptorOrdering,boolean,io.realm.internal.sync.SubscriptionAction)
    public final long getSourceRowIndexForFirstObject()
    public java.lang.String className
    public final io.realm.internal.OsList osList
com.google.android.material.resources.TextAppearance:
    public static synthetic android.graphics.Typeface access$002(com.google.android.material.resources.TextAppearance,android.graphics.Typeface)
    public static synthetic boolean access$102(com.google.android.material.resources.TextAppearance,boolean)
    public static synthetic android.graphics.Typeface access$000(com.google.android.material.resources.TextAppearance)
    public android.graphics.Typeface getFont(android.content.Context)
    public void getFontAsync(android.content.Context,android.text.TextPaint,com.google.android.material.resources.TextAppearanceFontCallback)
    public android.graphics.Typeface getFallbackFont()
    public void updateMeasureState(android.content.Context,android.text.TextPaint,com.google.android.material.resources.TextAppearanceFontCallback)
    public final android.content.res.ColorStateList textColorHint
    public final android.content.res.ColorStateList textColorLink
    public final boolean textAllCaps
androidx.appcompat.view.menu.BaseMenuPresenter:
    public void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)
    public androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
    public void addItemView(android.view.View,int)
    public boolean filterLeftoverView(android.view.ViewGroup,int)
    public androidx.appcompat.view.menu.MenuPresenter$Callback getCallback()
    public androidx.appcompat.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup)
    public abstract void bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)
    public abstract boolean shouldIncludeItem(int,androidx.appcompat.view.menu.MenuItemImpl)
    public void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
    public void setId(int)
    public android.view.LayoutInflater mInflater
    public int mId
androidx.appcompat.view.StandaloneActionMode:
    public boolean mFocusable
com.google.gson.internal.bind.TypeAdapters$19:
    public java.lang.StringBuilder read(com.google.gson.stream.JsonReader)
    public void write(com.google.gson.stream.JsonWriter,java.lang.StringBuilder)
androidx.core.view.AccessibilityDelegateCompat:
    public static java.util.List getActionList(android.view.View)
    public android.view.View$AccessibilityDelegate getBridge()
    public final boolean performClickableSpanAction(int,android.view.View)
    public final boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View)
androidx.appcompat.widget.Toolbar$OnMenuItemClickListener:
    public abstract boolean onMenuItemClick(android.view.MenuItem)
com.google.android.material.transformation.ExpandableBehavior:
    public static synthetic int access$000(com.google.android.material.transformation.ExpandableBehavior)
    public com.google.android.material.expandable.ExpandableWidget findExpandableWidget(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)
